{"version":3,"file":"static/js/5202.7baa3c2d.chunk.js","mappings":"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","sources":["pages/Brand/images/orange_acculturation.svg","assets/images/icons/icon-outline.svg","pages/Brand/Settings/Integration/DisconnectModal/index.js","pages/Brand/Settings/Integration/index.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgOrangeAcculturation(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 60,\n    height: 60,\n    viewBox: \"0 0 60 60\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.0835 38.7497H32.9168V44.583H27.0835V38.7497ZM27.0835 15.4163H32.9168V32.9163H27.0835V15.4163ZM29.971 0.833008C13.871 0.833008 0.833496 13.8997 0.833496 29.9997C0.833496 46.0997 13.871 59.1663 29.971 59.1663C46.1002 59.1663 59.1668 46.0997 59.1668 29.9997C59.1668 13.8997 46.1002 0.833008 29.971 0.833008ZM30.0002 53.333C17.1085 53.333 6.66683 42.8913 6.66683 29.9997C6.66683 17.108 17.1085 6.66634 30.0002 6.66634C42.8918 6.66634 53.3335 17.108 53.3335 29.9997C53.3335 42.8913 42.8918 53.333 30.0002 53.333Z\",\n    fill: \"#C9632B\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOrangeAcculturation);\nexport default __webpack_public_path__ + \"static/media/orange_acculturation.35bffecd1157a34266bc9d6c0880e312.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconOutline(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 15H13V17H11V15ZM11 7H13V13H11V7ZM11.99 2C6.47 2 2 6.48 2 12C2 17.52 6.47 22 11.99 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 11.99 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z\",\n    fill: \"#D33E3E\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconOutline);\nexport default __webpack_public_path__ + \"static/media/icon-outline.9cb32488a1520c9d7a2ce04bce0797b1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport Avtar1 from '../../../images/shopify_logo_whitebg.jpg';\nimport required from '../../../images/orange_acculturation.svg';\n\nconst DisconnectModal = ({ open, onCancel, onDisconnect }) => {\n  if (!open) return null;\n\n  return (\n    <div className=\"popup popup-confirm alert-shopify-modal\">\n      <div className=\"popup_wrapper\">\n        <div className=\"popup_content\">\n          <div className=\"popup-close\">\n            <AiOutlineClose size=\"20px\" onClick={onCancel} />\n          </div>\n          <div className=\"popup_content-header\">\n            <img className=\"icon\" src={required}></img>\n            <div className=\"h1\">Before you disconnect Shopify from ShopDot</div>\n          </div>\n          <div className=\"popup_content-body text-center\">\n            <p className=\"mb-4 shopify-subtext\">\n              Make sure you fulfill all open orders in Shopify before\n              disconnecting ShopDot.\n            </p>\n            <p className=\"shopify-note\">\n              <span>Please note:</span> Your brand profile and products will not\n              be displayed to retailers in ShopDot and new orders cannot be\n              placed after you disconnect from Shopify.\n            </p>\n          </div>\n          <div className=\"popup_content-footer\">\n            <button\n              className=\"button button-dark ignore-cancel\"\n              onClick={onCancel}\n            >\n              Cancel\n            </button>\n            <button className=\"button button-red push\" onClick={onDisconnect}>\n              Disconnect\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DisconnectModal;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  connectShopifyAction,\n  disconnectShopifyAction,\n  syncProductAction,\n} from '../../../../actions/brandActions';\nimport Warning from '../../../../assets/images/icons/icon-outline.svg';\nimport { selectUserDetails } from '../../../../redux/user/userSelector';\nimport { useEffect } from 'react';\nimport Avtar1 from '../../images/shopify_logo_whitebg.jpg';\nimport { selectBrandProfileDetails } from '../../../../redux/Brand/Profile/brandProfileSelectors';\nimport DisconnectModal from './DisconnectModal';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\n\nexport default function BrandSetting() {\n  const location = useLocation();\n  const [storeUrl, setStoreUrl] = useState('');\n  const [storeUrlError, setStoreUrlError] = useState(false);\n  const [isStoreConnected, setIsStoreConnected] = useState(false);\n  const [storeStatus, setStoreStatus] = useState('');\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n  const useDetails = useSelector(selectUserDetails);\n  const [openDisconnectModal, setOpenDisconnectModal] = useState(false);\n  const dispatch = useDispatch();\n  const shopNameRegex = /^[^.!@#$%^&*]+$/;\n\n  useEffect(() => {\n    if (brandProfileDetails?.shop_detail?.shop) {\n      const onlyBranName = brandProfileDetails?.shop_detail?.shop.replace(\n        '.myshopify.com',\n        ''\n      );\n      setStoreUrl(onlyBranName);\n      setIsStoreConnected(true);\n      if (brandProfileDetails?.shop_detail.is_active) {\n        setStoreStatus('active');\n      } else {\n        setStoreStatus('inactive');\n      }\n    } else {\n      setStoreUrl('');\n      setStoreUrlError(false);\n      setIsStoreConnected(false);\n    }\n  }, [brandProfileDetails]);\n\n  const connectStore = () => {\n    if (storeUrl) {\n      if (\n        shopNameRegex.test(storeUrl) &&\n        !storeUrl.includes('.myshopify.com')\n      ) {\n        setStoreUrlError(false);\n        dispatch(\n          connectShopifyAction({\n            name: `${storeUrl}.myshopify.com`,\n            user_id: useDetails.id,\n          })\n        );\n      } else {\n        setStoreUrlError(true);\n      }\n    } else {\n      setIsStoreConnected(false);\n      setStoreUrlError(true);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setStoreUrl(e.target.value);\n  };\n\n  const handleReconnect = () => {\n    if (shopNameRegex.test(storeUrl) && !storeUrl.includes('.myshopify.com')) {\n      setStoreUrlError(false);\n      dispatch(\n        disconnectShopifyAction({\n          domain: `${storeUrl}.myshopify.com`,\n          user_id: useDetails.id,\n        })\n      );\n    } else {\n      setStoreUrlError(true);\n    }\n  };\n\n  const onDisconnectClick = () => {\n    setOpenDisconnectModal(false);\n    handleReconnect();\n  };\n\n  const onCancelClick = () => {\n    setOpenDisconnectModal(false);\n  };\n\n  const handleAddProduct = async () => {\n    const productresponse = await dispatch(syncProductAction(useDetails.id));\n    if (productresponse) {\n      toast.success('Product added successfully');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"pc_tabs-content tabs_body\">\n        <div className=\"tab active\" data-target=\"Integration\">\n          <div className=\"products_content\">\n            <div className=\"products_body\">\n              <div className=\"content_area\">\n                <div id=\"integration\">\n                  <div className=\"integration_info\">\n                    <h2 className=\"heading\">Integration</h2>\n                    {!isStoreConnected && (\n                      <div className=\"integration_item\">\n                        <div className=\"email_edit-section\">\n                          <img src={Avtar1} alt=\"shopify\"></img>\n                          <span className=\"status-pill pill_not_connected\">\n                            Not Connected\n                          </span>\n                        </div>\n                        <div className=\"integration_info\">\n                          <div className=\"form-area form-input connect-shopify\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"\"\n                              placeholder=\"\"\n                              value={storeUrl}\n                              onChange={handleInputChange}\n                            />\n                            <span className=\"input-extension\">\n                              .myshopify.com\n                            </span>\n                            <button\n                              className=\"button connect_shopify\"\n                              onClick={connectStore}\n                            >\n                              Connect\n                            </button>\n                          </div>\n                          <small>\n                            {' '}\n                            Enter the name of your store without myshopify.com{' '}\n                          </small>\n                          {storeUrlError && (\n                            <div className=\"invalid-feedback\">\n                              Please only enter the name of your store.\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"integration_note\">\n                          Not on Shopify?&nbsp;\n                          <a href=\"#\">Let us know</a> what eCommerce platform\n                          you use and we&apos;ll let you know when we&apos;re\n                          integrated.\n                        </div>\n                      </div>\n                    )}\n\n                    {isStoreConnected && storeStatus === 'active' && (\n                      <div className=\"integration_item\">\n                        <div className=\"email_edit-section\">\n                          <img\n                            src={Avtar1}\n                            className=\"shopify-logo\"\n                            alt=\"shopify\"\n                          />\n                          <span className=\"status-pill pill_connected\">\n                            Connected\n                          </span>\n                        </div>\n                        <div className=\"integration_url\">\n                          <span>Shopify Store URL:</span>\n                          &nbsp;\n                          <label>\n                            https:{'//'}\n                            {`${storeUrl}.myshopify.com`}\n                          </label>\n                        </div>\n                        <div className=\"integration_shopify small\">\n                          <button\n                            onClick={() => setOpenDisconnectModal(true)}\n                            className=\"button button-dark\"\n                          >\n                            Disconnect from Shopify\n                          </button>\n                          <button\n                            style={{\n                              marginLeft: 16,\n                              background: '#2870A5',\n                              borderColor: '#2870A5',\n                              color: 'white',\n                            }}\n                            onClick={handleAddProduct}\n                            className=\"button button-dark-2\"\n                          >\n                            Sync Product\n                          </button>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* {true && (   :: For the Disconnected UI  */}\n                    {storeStatus === 'inactive' && (\n                      <div className=\"integration_item\">\n                        <div className=\"email_edit-section\">\n                          <img\n                            src={Avtar1}\n                            className=\"shopify-logo\"\n                            alt=\"shopify\"\n                          />\n                          <span className=\"status-pill pill_declined\">\n                            Disconnected\n                          </span>\n                        </div>\n                        <div className=\"integration_url\">\n                          <span>Shopify Store URL:</span>\n                          &nbsp;\n                          <label>\n                            https:{'//'}\n                            {`${storeUrl}.myshopify.com`}\n                          </label>\n                        </div>\n                        <div\n                          className=\"alert alert-error d-flex align-items-center mb-3\"\n                          role=\"alert\"\n                        >\n                          <img src={Warning} alt=\"warning\" />\n                          <div>\n                            Your brand profile is not visible to retailers\n                            because your Shopify store is disconnected.\n                          </div>\n                        </div>\n                        <div className=\"integration_shopify small\">\n                          <button\n                            onClick={connectStore}\n                            className=\"button button-dark\"\n                          >\n                            Reconnect Shopify\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n      <DisconnectModal\n        open={openDisconnectModal}\n        onCancel={onCancelClick}\n        onDisconnect={onDisconnectClick}\n      />\n      <ToastContainer />\n    </>\n  );\n}\n"],"names":["_ref","open","onCancel","onDisconnect","_jsx","className","children","_jsxs","AiOutlineClose","size","onClick","src","required","BrandSetting","useLocation","_useState","useState","_useState2","_slicedToArray","storeUrl","setStoreUrl","_useState3","_useState4","storeUrlError","setStoreUrlError","_useState5","_useState6","isStoreConnected","setIsStoreConnected","_useState7","_useState8","storeStatus","setStoreStatus","brandProfileDetails","useSelector","selectBrandProfileDetails","useDetails","selectUserDetails","_useState9","_useState10","openDisconnectModal","setOpenDisconnectModal","dispatch","useDispatch","shopNameRegex","useEffect","_brandProfileDetails$","shop_detail","shop","_brandProfileDetails$2","onlyBranName","replace","is_active","connectStore","test","includes","connectShopifyAction","name","concat","user_id","id","handleAddProduct","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","syncProductAction","sent","toast","success","stop","apply","arguments","_Fragment","Avtar1","alt","type","placeholder","value","onChange","e","target","href","style","marginLeft","background","borderColor","color","role","Warning","ToastContainer","DisconnectModal","disconnectShopifyAction","domain"],"sourceRoot":""}