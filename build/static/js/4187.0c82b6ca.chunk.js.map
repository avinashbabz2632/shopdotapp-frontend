{"version":3,"file":"static/js/4187.0c82b6ca.chunk.js","mappings":"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","sources":["assets/images/icons/icon-outline.svg","pages/Brand/Settings/Integration/index.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconOutline(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 15H13V17H11V15ZM11 7H13V13H11V7ZM11.99 2C6.47 2 2 6.48 2 12C2 17.52 6.47 22 11.99 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 11.99 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z\",\n    fill: \"#D33E3E\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconOutline);\nexport default __webpack_public_path__ + \"static/media/icon-outline.9cb32488a1520c9d7a2ce04bce0797b1.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  connectShopifyAction,\n  disconnectShopifyAction,\n} from '../../../../actions/brandActions';\nimport Warning from '../../../../assets/images/icons/icon-outline.svg';\nimport { selectUserDetails } from '../../../../redux/user/userSelector';\nimport { useEffect } from 'react';\nimport Avtar1 from '../../images/shopify_logo_whitebg.jpg';\nimport { selectBrandProfileDetails } from '../../../../redux/Brand/Profile/brandProfileSelectors';\n\nexport default function BrandSetting() {\n  const [storeUrl, setStoreUrl] = useState('');\n  const [isValideStoreURL, setIsValidStoreUrl] = useState(false);\n  const [isStoreConnected, setIsStoreConnected] = useState(false);\n  const [storeStatus, setStoreStatus] = useState('');\n  //temporary for seeing a disconnect ui\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n  const useDetails = useSelector(selectUserDetails);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (brandProfileDetails?.shop_detail?.shop) {\n      const onlyBranName = brandProfileDetails?.shop_detail?.shop.replace(\n        '.myshopify.com',\n        ''\n      );\n      setStoreUrl(onlyBranName);\n      setIsStoreConnected(true);\n      if (brandProfileDetails?.shop_detail.is_active) {\n        setStoreStatus('active');\n      } else {\n        setStoreStatus('inactive');\n      }\n    } else {\n      setStoreUrl('');\n      setIsValidStoreUrl(false);\n      setIsStoreConnected(false);\n    }\n  }, [brandProfileDetails]);\n\n  // alert(storeUrl);\n\n  const connectStore = () => {\n    if (storeUrl) {\n      dispatch(\n        connectShopifyAction({\n          name: `${storeUrl}.myshopify.com`,\n          user_id: useDetails.id,\n        })\n      );\n      // setIsStoreConnected(true);\n    } else {\n      setIsStoreConnected(false);\n      setIsValidStoreUrl(true);\n      // setStoreStatus(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setStoreUrl(e.target.value);\n    setIsValidStoreUrl(false);\n  };\n\n  const handleReconnect = () => {\n    dispatch(\n      disconnectShopifyAction({\n        domain: `${storeUrl}.myshopify.com`,\n        user_id: useDetails.id,\n      })\n    );\n  };\n\n  return (\n    <div className=\"pc_tabs-content tabs_body\">\n      <div className=\"tab active\" data-target=\"Integration\">\n        <div className=\"products_content\">\n          <div className=\"products_body\">\n            <div className=\"content_area\">\n              <div id=\"integration\">\n                <div className=\"integration_info\">\n                  <h2 className=\"heading\">Integration</h2>\n                  {!isStoreConnected && (\n                    <div className=\"integration_item\">\n                      <div className=\"email_edit-section\">\n                        <img src={Avtar1} alt=\"shopify\"></img>\n                        <span className=\"status-pill pill_not_connected\">\n                          Not Connected\n                        </span>\n                      </div>\n                      <div className=\"integration_info\">\n                        <div className=\"form-area form-input connect-shopify\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"\"\n                            placeholder=\"\"\n                            value={storeUrl}\n                            onChange={handleInputChange}\n                          />\n                          <span className=\"input-extension\">\n                            .myshopify.com\n                          </span>\n                          <button\n                            className=\"button connect_shopify\"\n                            onClick={connectStore}\n                          >\n                            Connect\n                          </button>\n                        </div>\n                        <small>\n                          {' '}\n                          Enter the name of your store without myshopify.com{' '}\n                        </small>\n                        {isValideStoreURL && (\n                          <div className=\"invalid-feedback\">\n                            Please only enter the name of your store.\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"integration_note\">\n                        Not on Shopify?&nbsp;\n                        <a href=\"#\">Let us know</a> what eCommerce platform you\n                        use and we&apos;ll let you know when we&apos;re\n                        integrated.\n                      </div>\n                    </div>\n                  )}\n\n                  {isStoreConnected && storeStatus === 'active' && (\n                    <div className=\"integration_item\">\n                      <div className=\"email_edit-section\">\n                        <img\n                          src={Avtar1}\n                          className=\"shopify-logo\"\n                          alt=\"shopify\"\n                        />\n                        <span className=\"status-pill pill_connected\">\n                          Connected\n                        </span>\n                      </div>\n                      <div className=\"integration_url\">\n                        <span>Shopify Store URL:</span>\n                        &nbsp;\n                        <label>\n                          https:{'//'}\n                          {`${storeUrl}.myshopify.com`}\n                        </label>\n                      </div>\n                      <div className=\"integration_shopify small\">\n                        <button\n                          onClick={() => handleReconnect()}\n                          className=\"button button-dark\"\n                        >\n                          Disconnect\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* {true && (   :: For the Disconnected UI  */}\n                  {storeStatus === 'inactive' && (\n                    <div className=\"integration_item\">\n                      <div className=\"email_edit-section\">\n                        <img\n                          src={Avtar1}\n                          className=\"shopify-logo\"\n                          alt=\"shopify\"\n                        />\n                        <span className=\"status-pill pill_declined\">\n                          Disconnected\n                        </span>\n                      </div>\n                      <div className=\"integration_url\">\n                        <span>Shopify Store URL:</span>\n                        &nbsp;\n                        <label>\n                          https:{'//'}\n                          {`${storeUrl}.myshopify.com`}\n                        </label>\n                      </div>\n                      <div\n                        className=\"alert alert-error d-flex align-items-center mb-3\"\n                        role=\"alert\"\n                      >\n                        <img src={Warning} alt=\"warning\" />\n                        <div>\n                          Your Shopify store has been disconnected with ShopDot.\n                        </div>\n                      </div>\n                      <div className=\"integration_shopify small\">\n                        <button\n                          onClick={connectStore}\n                          className=\"button button-dark\"\n                        >\n                          Reconnect Shopify\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["BrandSetting","_useState","useState","_useState2","_slicedToArray","storeUrl","setStoreUrl","_useState3","_useState4","isValideStoreURL","setIsValidStoreUrl","_useState5","_useState6","isStoreConnected","setIsStoreConnected","_useState7","_useState8","storeStatus","setStoreStatus","brandProfileDetails","useSelector","selectBrandProfileDetails","useDetails","selectUserDetails","dispatch","useDispatch","useEffect","_brandProfileDetails$","shop_detail","shop","_brandProfileDetails$2","onlyBranName","replace","is_active","connectStore","connectShopifyAction","name","concat","user_id","id","_jsx","className","children","_jsxs","src","Avtar1","alt","type","placeholder","value","onChange","e","target","onClick","href","disconnectShopifyAction","domain","role","Warning"],"sourceRoot":""}