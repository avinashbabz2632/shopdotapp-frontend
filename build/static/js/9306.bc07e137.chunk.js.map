{"version":3,"file":"static/js/9306.bc07e137.chunk.js","mappings":"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","sources":["components/Header/OnboardingHeader.js","components/common/A/index.js","components/common/Input/divStyled.js","layout/OnboardingLayout.js","pages/Onboarding/CreateAccount/index.js"],"sourcesContent":["// Component:: OnboardingHeader component\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport logoPng from '../../assets/images/logos/logo-png.png';\nimport '../../pages/Onboarding/onboarding.style.scss';\n\nfunction OnboardingHeader({ pageTitle }) {\n    return (\n        <>\n            <div className=\"ob-head\">\n                <img src={logoPng} alt=\"logo\" className=\"logo-round\" />\n                <h1>{pageTitle}</h1>\n            </div>\n        </>\n    );\n}\n\nOnboardingHeader.propTypes = {\n    pageTitle: PropTypes.string,\n};\n\nOnboardingHeader.defaultProps = {\n    pageTitle: 'Signin',\n};\n\nexport default OnboardingHeader;\n","/**\n * A link to a certain page, an anchor tag\n */\n\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { orange100 } from '../../../theme/variables';\n\nexport const A = styled.a`\n  color: ${orange100};\n  font-family: 'Mulish', sans-serif;\n  font-size: 16px;\n  text-decoration: none;\n\n  &.sm {\n    font-size: 14px;\n    letter-spacing: -0.02em;\n  }\n\n  &[disabled] {\n    pointer-events: none;\n  }\n\n  &:hover {\n    color: ${orange100};\n  }\n`;\n\nexport const LinkMod = styled(Link)`\n  color: ${orange100};\n  font-family: 'Mulish', sans-serif;\n  // font-size: 14px;\n  // text-decoration: none;\n  outline: 0;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  text-align: center;\n  border: none;\n  -webkit-font-smoothing: antialiased;\n  box-sizing: border-box;\n  &:hover {\n    color: ${orange100};\n    opacity: 0.8;\n  }\n`;\n","import styled from 'styled-components';\nimport {\n    orange100,\n    inputTransitionSpeed,\n    inputBackground,\n    inuputHeight,\n    inputPadding,\n    inputBorderRadius,\n    inputBorderColor,\n    inputFonstSize,\n    inputFontFamily,\n    inputColor,\n    inputFocusBorderColor,\n    inputFocusBackgroundColor,\n    inputValidBorderColor,\n    inputValidBackgroundColor,\n} from '../../../theme/variables';\n\nconst Input = styled.input`\n    // display: flex;\n    // align-items: center;\n    // align-content: center;\n    // z-index: 0;\n    // -webkit-appearance: none;\n    // appearance: none;\n    // width: 100%;\n    // box-sizing: border-box;\n    // font-family: ${inputFontFamily};\n    // font-size: ${inputFonstSize};\n    // font-weight: 400;\n    // border: 0.1rem solid ${inputBorderColor};\n    // border-radius: ${inputBorderRadius};\n    // padding: ${inputPadding};\n    // height: ${inuputHeight};\n    // outline: none;\n    // background-color: ${inputBackground};\n    // transition: all ${inputTransitionSpeed} ease;\n    // caret-color: ${orange100};\n    //\n    // &::place-holder {\n    //     color: ${inputColor};\n    //     opacity: 0.64;\n    // }\n    //\n    // &.invalid {\n    //     border-color: ${inputFocusBorderColor};\n    //     background-color: ${inputFocusBackgroundColor};\n    // }\n    //\n    // &:focus {\n    //     border-color: ${inputFocusBorderColor};\n    //     background-color: ${inputFocusBackgroundColor};\n    // }\n    //\n    // &:focus:required:invalid {\n    //     border-color: ${inputFocusBorderColor};\n    //     background-color: ${inputFocusBackgroundColor};\n    // }\n    //\n    // &:required:valid {\n    //     border-color: var(--orange-tint-10);\n    //     background-color: var(--white);\n    // }\n    //\n    // &.valid {\n    //     border-color: ${inputValidBorderColor};\n    //     background-color: ${inputValidBackgroundColor};\n    // }\n\n    background: #fffcf9;\n    border: 1px solid #f3e0d2;\n    border-radius: 4px;\n    height: 4rem;\n    padding: 1rem 1.2rem;\n    display: block;\n    width: 100%;\n    margin-top: 0.6rem;\n    appearance: none;\n    box-sizing: border-box;\n    font-family: 'Mulish', sans-serif;\n    outline: none;\n\n    &.invalid {\n        border-color: #eb5757;\n    }\n`;\n\nexport default Input;\n","// Layout:: Onboarding layout component\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport OnboardingHeader from '../components/Header/OnboardingHeader';\nimport { isLoggedIn } from '../redux/auth/authSelector';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { selectUserDetails } from '../redux/user/userSelector';\nimport axios from 'axios';\n\nfunction OnboardingLayout({ children, classNames, pageTitle }) {\n  return (\n    <>\n      <div className=\"wrapper onbording\">\n        <main>\n          <section>\n            <OnboardingHeader pageTitle={pageTitle} />\n            <div className=\"ob-body\">\n              <div className={classNames}>{children}</div>\n            </div>\n          </section>\n        </main>\n      </div>\n      <ToastContainer />\n    </>\n  );\n}\n\nOnboardingLayout.propTypes = {\n  children: PropTypes.any,\n  pageTitle: PropTypes.any,\n  classNames: PropTypes.any,\n};\n\nOnboardingLayout.defaultProps = {\n  children: <p>Shopdot</p>,\n  pageTitle: 'Signin',\n  classNames: 'form-wrapper',\n};\n\nexport default OnboardingLayout;\n","// Onboarding flow:: Create Account Page\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport OnboardingLayout from '../../../layout/OnboardingLayout';\nimport { LinkMod } from '../../../components/common/A';\nimport Input from '../../../components/common/Input/divStyled';\nimport Button from '../../../components/common/Button';\nimport '../onboarding.style.scss';\n// import '../../Auth/auth.style.scss';\n\n// Validation schema of form field\nconst validationSchema = yup\n  .object()\n  .shape({\n    fname: yup.string().required('First name is required.'),\n    lname: yup.string().required('Last name is required.'),\n    email: yup\n      .string()\n      .email('Must be a valid email')\n      .max(255)\n      .required('Email is required.'),\n    password: yup.string().required('Password is required.'),\n    termsOfService: yup\n      .boolean()\n      .required('The terms and conditions must be accepted.')\n      .oneOf([true], 'The terms and conditions must be accepted.'),\n  })\n  .required();\n\nfunction CreateAccount() {\n  const navigate = useNavigate();\n  const [passwordType, setPasswordType] = useState(true);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(validationSchema) });\n\n  const onSubmit = (data) => {\n    reset();\n    navigate('/verify-email');\n  };\n  return (\n    <>\n      <OnboardingLayout pageTitle=\"Create Your ShopDot Account\">\n        <form onSubmit={handleSubmit(onSubmit)} className=\"sign__form form\">\n          <div className=\"form__field form__field--half \">\n            <Input\n              className={errors.fname ? 'invalid' : ''}\n              type=\"text\"\n              name=\"fname\"\n              placeholder=\"First name\"\n              {...register('fname', {\n                required: true,\n              })}\n            />\n            {errors.fname && (\n              <span className=\"error-text\">{errors.fname?.message}</span>\n            )}\n          </div>\n          <div className=\"form__field form__field--half \">\n            <Input\n              className={errors.lname ? 'invalid' : ''}\n              type=\"text\"\n              name=\"lname\"\n              placeholder=\"Last name\"\n              {...register('lname', {\n                required: true,\n              })}\n            />\n            {errors.lname && (\n              <span className=\"error-text\">{errors.lname?.message}</span>\n            )}\n          </div>\n          <div className=\"form__field \">\n            <Input\n              className={errors.email ? 'invalid' : ''}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email address\"\n              {...register('email', {\n                required: true,\n              })}\n            />\n            {errors.email && (\n              <span className=\"error-text\">{errors.email?.message}</span>\n            )}\n          </div>\n          <div className=\"form__field \">\n            <Input\n              className={`password ${errors.password ? 'invalid' : ''}`}\n              type={passwordType ? 'password' : 'text'}\n              name=\"password\"\n              placeholder=\"Create password\"\n              {...register('password', {\n                required: true,\n              })}\n            />\n            <span\n              className={`password-show ${passwordType ? '' : 'active'}`}\n              onClick={() => setPasswordType(!passwordType)}\n            />\n            {errors.password && (\n              <span className=\"error-text\">{errors.password?.message}</span>\n            )}\n          </div>\n\n          <div className=\"form__field checkbox\">\n            <label>\n              <Input\n                type=\"checkbox\"\n                name=\"termsOfService\"\n                {...register('termsOfService', {\n                  required: true,\n                })}\n              />\n              <small className=\"checkbox-text\">\n                By signing up for ShopDot, you are agreeing to our&nbsp;\n                <LinkMod to=\"#\">Terms </LinkMod>&nbsp;and\n                <LinkMod to=\"#\">&nbsp;Privacy Policy.</LinkMod>\n                &nbsp;\n              </small>\n            </label>\n            {errors.termsOfService && (\n              <div className=\"error-text\">{errors.termsOfService?.message}</div>\n            )}\n          </div>\n          <div className=\"form__field buttons\">\n            <Button type=\"submit\" className=\"button\">\n              Sign Up\n            </Button>\n          </div>\n        </form>\n      </OnboardingLayout>\n    </>\n  );\n}\n\nexport default CreateAccount;\n"],"names":["OnboardingHeader","_ref","pageTitle","_jsx","_Fragment","children","_jsxs","className","src","logoPng","alt","defaultProps","LinkMod","styled","_templateObject","_taggedTemplateLiteral","orange100","Link","_templateObject2","Input","inputFontFamily","inputFonstSize","inputBorderColor","inputBorderRadius","inputPadding","inuputHeight","inputBackground","inputTransitionSpeed","inputColor","inputFocusBorderColor","inputFocusBackgroundColor","inputValidBorderColor","inputValidBackgroundColor","OnboardingLayout","classNames","ToastContainer","validationSchema","yup","shape","fname","required","lname","email","max","password","termsOfService","oneOf","_errors$fname","_errors$lname","_errors$email","_errors$password","_errors$termsOfServic","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","data","_objectSpread","type","name","placeholder","message","concat","onClick","to","Button"],"sourceRoot":""}