{"version":3,"file":"static/js/6564.dc796d8d.chunk.js","mappings":"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","sources":["pages/Brand/Settings/Paid/BusinessDetails.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setBusinessDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSlice';\nimport {\n    selectBusinessDetails,\n    selectGettingPaidPreferance,\n} from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport { BusinessDetailsValidationSchema } from './ValidationSchema';\nimport rightArrow from '../../../../assets/images/icons/Vector.11.svg';\nimport {\n    businessCategoryOptions,\n    stateIncorporationOptions,\n    deliveryTimeOptions,\n    merchantOptions,\n    salesOptions,\n    categoryStyle,\n    ExampleCustomInput,\n    businessCategoryOptionsNew,\n    textIdOptions,\n    countryOptions,\n} from '../../common/utils/utils';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { isEmpty, isNil } from 'lodash';\n\nconst defaultValues = {\n    averageDeliveryTime: deliveryTimeOptions[0],\n    merchantCategoryCode: merchantOptions[0],\n    countryAddress: countryOptions[0],\n    salesMethod: salesOptions[0],\n    bankruptcy: 'no',\n};\n\nexport default function BusinessDetails({\n    isEdited,\n    setStartingTab,\n    handleChangeTab,\n    setIsEdited,\n    handleConfirmationModelClose,\n}) {\n    const businessDetails = useSelector(selectBusinessDetails);\n    const gettingPaidPreferance = useSelector(selectGettingPaidPreferance);\n    const bussinessCategoryOptions =\n        !isEmpty(gettingPaidPreferance) &&\n        !isNil(gettingPaidPreferance) &&\n        gettingPaidPreferance?.publiclyTraded === 'no'\n            ? businessCategoryOptionsNew\n            : businessCategoryOptions;\n\n    const dispatch = useDispatch();\n\n    const {\n        control,\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        watch,\n        setError,\n        clearErrors,\n        formState: { errors, isValid },\n    } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(BusinessDetailsValidationSchema),\n        defaultValues,\n    });\n\n    useEffect(() => {\n        const isFormValuePresent = Object.keys(businessDetails).length;\n        if (isFormValuePresent !== 0) {\n            const fields = [\n                'businessName',\n                'textIdType',\n                'socialSecurityNumber',\n                'businessAs',\n                'employerIdentificationNumber',\n                'bankruptcy',\n                'averageSales',\n                'averageSalePrice',\n                'productionDescription',\n                'businessCategory',\n                'salesMethod',\n                'merchantCategoryCode',\n                'averageDeliveryTime',\n                'website',\n                'businessEmail',\n                'stateOfIncorportation',\n                'phoneNumber',\n                'addressLine1',\n                'addressLine2',\n                'countryAddress',\n                'stateAddress',\n                'city',\n                'zipcode',\n            ];\n            fields.forEach((field) => setValue(field, businessDetails[field]));\n            setValue(\n                'dateOfIncorportation',\n                businessDetails['dateOfIncorportation']\n                    ? new Date(businessDetails['dateOfIncorportation'])\n                    : ''\n            );\n\n            setValue(\n                'dateOfDischarge',\n                businessDetails['dateOfDischarge']\n                    ? new Date(businessDetails['dateOfDischarge'])\n                    : ''\n            );\n        }\n\n        return () => {\n            setIsEdited(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isEdited]);\n\n    const onSubmit = (data) => {\n        console.log('Business Details(page-1)', data);\n        dispatch(setBusinessDetails(data));\n        reset();\n        handleChangeTab('2');\n    };\n\n    const handleEINChange = (event) => {\n        const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n        if (rawValue === '') {\n            // Check if the input is empty\n            setError('employerIdentificationNumber', {\n                type: 'custom',\n                message: 'Please enter an EIN',\n            });\n            return;\n        }\n        let formattedValues = '';\n        if (rawValue.length < 3) {\n            formattedValues = rawValue;\n        } else {\n            formattedValues = `${rawValue.slice(0, 2)}-${rawValue.slice(2, 9)}`;\n        }\n        setValue('employerIdentificationNumber', formattedValues);\n        if (formattedValues?.length < 2) {\n            setError('employerIdentificationNumber', {\n                type: 'custom',\n                message: 'should be in XX-XXXXXXX format.',\n            });\n        } else if (formattedValues?.length < 10) {\n            setError('employerIdentificationNumber', {\n                type: 'custom',\n                message: 'EIN should be 9 digit',\n            });\n        } else {\n            clearErrors('employerIdentificationNumber');\n            event.target.blur();\n        }\n    };\n\n    const handleSSNChange = (event) => {\n        const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n        if (rawValue === '') {\n            // Check if the input is empty\n            setError('socialSecurityNumber', {\n                type: 'custom',\n                message: 'Please enter an SSN',\n            });\n            return;\n        }\n        let formattedValues = '';\n        if (rawValue.length < 4) {\n            formattedValues = rawValue;\n        } else if (rawValue.length < 6) {\n            formattedValues = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n        } else {\n            formattedValues = `${rawValue.slice(0, 3)}-${rawValue.slice(\n                3,\n                5\n            )}-${rawValue.slice(5, 9)}`;\n        }\n        setValue('socialSecurityNumber', formattedValues);\n        if (formattedValues.length < 3) {\n            setError('socialSecurityNumber', {\n                type: 'custom',\n                message: 'should be in XXX-XX-XXXX format.',\n            });\n        } else if (formattedValues.length < 11) {\n            setError('socialSecurityNumber', {\n                type: 'custom',\n                message: 'SSN should be 9 digit',\n            });\n        } else {\n            clearErrors('socialSecurityNumber');\n            event.target.blur();\n        }\n    };\n    const handlePhoneChange = (event, i) => {\n        const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n        let formattedValue = '';\n        if (rawValue.length < 4) {\n            formattedValue = rawValue;\n        } else if (rawValue.length < 7) {\n            formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n        } else {\n            formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(\n                3,\n                6\n            )}-${rawValue.slice(6, 10)}`;\n        }\n        setValue('phoneNumber', formattedValue);\n    };\n\n    const businessCategoryWatch = watch('businessCategory');\n    const bankruptcy = watch('bankruptcy');\n    const textIdTypeWatch = watch('textIdType');\n\n    return (\n        <>\n            <form className=\"gp-right\" onSubmit={handleSubmit(onSubmit)}>\n                <h3 className=\"heading\">Business Details</h3>\n                <div className=\"form-area\">\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Legal name of business&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control mb-0\"\n                            name=\"businessName\"\n                            placeholder=\"\"\n                            {...register('businessName', { required: true })}\n                        />\n                        {errors?.businessName && (\n                            <span className=\"error-text\">\n                                {errors?.businessName?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">Doing business as</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control mb-0\"\n                            name=\"businessAs\"\n                            placeholder=\"\"\n                            {...register('businessAs', { required: true })}\n                        />\n                        <small>\n                            The operating name of your company if it&lsquo;s\n                            different than the legal name.{' '}\n                        </small>\n                        {errors?.businessAs && (\n                            <span className=\"error-text\">\n                                {errors?.businessAs?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Business website address{' '}\n                            <span className=\"asterisk-red\">*</span>{' '}\n                        </label>\n                        <input\n                            {...register('website', { required: true })}\n                            name=\"website\"\n                            type=\"text\"\n                            className=\"form-control mb-0\"\n                            id=\"\"\n                            placeholder=\"\"\n                        />\n                        {errors?.website && (\n                            <span className=\"error-text\">\n                                {errors?.website?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Business email address{' '}\n                            <span className=\"asterisk-red\">*</span>{' '}\n                        </label>\n                        <input\n                            {...register('businessEmail', { required: true })}\n                            name=\"businessEmail\"\n                            type=\"text\"\n                            className=\"form-control mb-0\"\n                            id=\"\"\n                            placeholder=\"\"\n                        />\n                        {errors?.businessEmail && (\n                            <span className=\"error-text\">\n                                {errors?.businessEmail?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4 business_category\">\n                        <label className=\"form-label\">\n                            Business category&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <Controller\n                            name=\"businessCategory\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    placeholder=\"Select Business Category\"\n                                    className=\"basic-single\"\n                                    classNamePrefix=\"select\"\n                                    styles={categoryStyle}\n                                    components={{\n                                        IndicatorSeparator: () => null,\n                                    }}\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#fbf5f0',\n                                            primary: '#bd6f34',\n                                        },\n                                    })}\n                                    options={bussinessCategoryOptions}\n                                />\n                            )}\n                        />\n                        {errors?.businessCategory && (\n                            <span className=\"error-text\">\n                                {errors?.businessCategory?.message}\n                            </span>\n                        )}\n                    </div>\n                    {(businessCategoryWatch?.value === 'single_member_llc' ||\n                        businessCategoryWatch?.value === 'sole_proprietor') && (\n                        <>\n                            <div className=\"form-input mb-4 signle_member_llc\">\n                                <label htmlFor=\"\" className=\"form-label\">\n                                    Tax ID Type&nbsp;\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n                                <Controller\n                                    name=\"textIdType\"\n                                    control={control}\n                                    render={({ field }) => (\n                                        <>\n                                            <Select\n                                                {...field}\n                                                className=\"basic-single\"\n                                                classNamePrefix=\"select\"\n                                                placeholder={'Select Text ID'}\n                                                styles={categoryStyle}\n                                                components={{\n                                                    IndicatorSeparator: () =>\n                                                        null,\n                                                }}\n                                                theme={(theme) => ({\n                                                    ...theme,\n                                                    colors: {\n                                                        ...theme.colors,\n                                                        primary25: '#fbf5f0',\n                                                        primary: '#bd6f34',\n                                                    },\n                                                })}\n                                                options={textIdOptions}\n                                            />\n                                        </>\n                                    )}\n                                />\n                                {errors?.textIdType && (\n                                    <span className=\"error-text\">\n                                        {errors?.textIdType?.message}\n                                    </span>\n                                )}\n                            </div>\n                        </>\n                    )}\n                    {(businessCategoryWatch?.value ===\n                        'c_corp_publicly_traded' ||\n                        businessCategoryWatch?.value ===\n                            'goverment_organization' ||\n                        businessCategoryWatch?.value === 'non_profit' ||\n                        businessCategoryWatch?.value === 'tax_exempt' ||\n                        businessCategoryWatch?.value === 'llc' ||\n                        businessCategoryWatch?.value === 'llp' ||\n                        businessCategoryWatch?.value === 'partnership' ||\n                        businessCategoryWatch?.value ===\n                            'c_corp_not_publicly_traded' ||\n                        businessCategoryWatch?.value === 's_crop' ||\n                        textIdTypeWatch?.value === 'ein') && (\n                        <div className=\"form-input mb-4 ein\">\n                            <label className=\"form-label\">\n                                Employer Identification Number (EIN)&nbsp;\n                                <span className=\"asterisk-red\">*</span>\n                            </label>\n                            <input\n                                type=\"tel\"\n                                placeholder=\"12-3456789\"\n                                name=\"employerIdentificationNumber\"\n                                className=\"form-control mb-0\"\n                                id=\"\"\n                                {...register('employerIdentificationNumber', {\n                                    required: true,\n                                })}\n                                onChange={(event) => handleEINChange(event)}\n                            />\n                            {errors?.employerIdentificationNumber && (\n                                <span className=\"error-text\">\n                                    {\n                                        errors?.employerIdentificationNumber\n                                            ?.message\n                                    }\n                                </span>\n                            )}\n                        </div>\n                    )}\n\n                    {(businessCategoryWatch?.value === 'single_member_llc' ||\n                        businessCategoryWatch?.value === 'sole_proprietor') &&\n                        textIdTypeWatch?.value === 'ssn' && (\n                            <div className=\"form-input mb-4\">\n                                <label htmlFor=\"\" className=\"form-label\">\n                                    Social Security Number (SSN)&nbsp;\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n                                <Controller\n                                    name=\"socialSecurityNumber\"\n                                    control={control}\n                                    render={({ field }) => (\n                                        <input\n                                            {...field}\n                                            type=\"tel\"\n                                            name=\"socialSecurityNumber\"\n                                            className=\"form-control mb-0\"\n                                            placeholder=\"123-44-5678\"\n                                            onChange={(event) => {\n                                                handleSSNChange(event);\n                                            }}\n                                        />\n                                    )}\n                                />\n                                {errors?.socialSecurityNumber && (\n                                    <span className=\"error-text\">\n                                        {errors?.socialSecurityNumber?.message}\n                                    </span>\n                                )}\n                            </div>\n                        )}\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Business phone number&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <Controller\n                            name={'phoneNumber'}\n                            control={control}\n                            render={({\n                                field: { onChange, onBlur, value },\n                            }) => (\n                                <input\n                                    type=\"tel\"\n                                    value={value}\n                                    className=\"form-control mb-0\"\n                                    placeholder=\"(123) 456-7899\"\n                                    onChange={(e) => {\n                                        onChange(e);\n                                        handlePhoneChange(e);\n                                    }}\n                                    onBlur={onBlur}\n                                />\n                            )}\n                        />\n                        {errors?.phoneNumber && (\n                            <span className=\"error-text\">\n                                {errors?.phoneNumber?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input\">\n                        <label className=\"fw-700 mb-2 mt-4 d-flex\">\n                            Business mailing address{' '}\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Address line 1{' '}\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control mb-0\"\n                            name={'addressLine1'}\n                            {...register('addressLine1', {\n                                required: true,\n                            })}\n                        />\n                        {errors?.addressLine1 && (\n                            <span className=\"error-text\">\n                                {errors?.addressLine1?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">Address line 2</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control mb-0\"\n                            name={'addressLine2'}\n                            {...register('addressLine2', {\n                                required: false,\n                            })}\n                            placeholder=\"\"\n                        />\n                        {errors?.addressLine2 && (\n                            <span className=\"error-text\">\n                                {errors?.addressLine2?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"category-form-input mb-4\">\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">\n                                Country <span className=\"asterisk-red\">*</span>\n                            </label>\n                            <Controller\n                                name={'countryAddress'}\n                                control={control}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className=\"basic-single_top\"\n                                        classNamePrefix=\"select\"\n                                        styles={categoryStyle}\n                                        components={{\n                                            IndicatorSeparator: () => null,\n                                        }}\n                                        theme={(theme) => ({\n                                            ...theme,\n                                            colors: {\n                                                ...theme.colors,\n                                                primary25: '#fbf5f0',\n                                                primary: '#bd6f34',\n                                            },\n                                        })}\n                                        options={countryOptions}\n                                    />\n                                )}\n                            />\n                            {errors?.countryAddress && (\n                                <span className=\"error-text\">\n                                    {errors?.countryAddress?.message}\n                                </span>\n                            )}\n                        </div>\n                        <div className=\"form-input mb-2\">\n                            <label className=\"form-label\">\n                                State <span className=\"asterisk-red\">*</span>\n                            </label>\n                            <Controller\n                                name={'stateAddress'}\n                                control={control}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className=\"basic-single_top\"\n                                        classNamePrefix=\"select\"\n                                        placeholder=\"Select State\"\n                                        styles={categoryStyle}\n                                        components={{\n                                            IndicatorSeparator: () => null,\n                                        }}\n                                        theme={(theme) => ({\n                                            ...theme,\n                                            colors: {\n                                                ...theme.colors,\n                                                primary25: '#fbf5f0',\n                                                primary: '#bd6f34',\n                                            },\n                                        })}\n                                        options={stateIncorporationOptions}\n                                    />\n                                )}\n                            />\n                            {errors?.stateAddress && (\n                                <span className=\"error-text\">\n                                    {errors?.stateAddress?.message}\n                                </span>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"category-form-input mb-4\">\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">\n                                City <span className=\"asterisk-red\">*</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control mb-0\"\n                                id=\"\"\n                                placeholder=\"New York\"\n                                name={'city'}\n                                {...register('city', {\n                                    required: true,\n                                })}\n                            />\n                            {errors?.city && (\n                                <span className=\"error-text\">\n                                    {errors?.city?.message}\n                                </span>\n                            )}\n                        </div>\n                        <div className=\"form-input\">\n                            <label className=\"form-label\">\n                                ZIP <span className=\"asterisk-red\">*</span>\n                            </label>\n                            <input\n                                type=\"number\"\n                                className=\"form-control mb-0\"\n                                id=\"\"\n                                placeholder=\"10014\"\n                                name={'zipcode'}\n                                {...register('zipcode', {\n                                    required: true,\n                                })}\n                            />\n                            {errors?.zipcode && (\n                                <span className=\"error-text\">\n                                    {errors?.zipcode?.message}\n                                </span>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            State of incorporation&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <Controller\n                            name=\"stateOfIncorportation\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className=\"basic-single\"\n                                    classNamePrefix=\"select\"\n                                    placeholder={'Select State'}\n                                    styles={categoryStyle}\n                                    components={{\n                                        IndicatorSeparator: () => null,\n                                    }}\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#fbf5f0',\n                                            primary: '#bd6f34',\n                                        },\n                                    })}\n                                    options={stateIncorporationOptions}\n                                />\n                            )}\n                        />\n                        {errors?.stateOfIncorportation && (\n                            <span className=\"error-text\">\n                                {errors?.stateOfIncorportation?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Date of incorporation&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n\n                        <Controller\n                            control={control}\n                            name=\"dateOfIncorportation\"\n                            render={({\n                                field: { onChange, onBlur, value },\n                                ...props\n                            }) => (\n                                <>\n                                    <DatePicker\n                                        closeOnScroll\n                                        maxDate={new Date()}\n                                        customInput={<ExampleCustomInput />}\n                                        placeholderText=\"MM-DD-YYYY\"\n                                        dateFormat=\"MM-dd-yyyy\"\n                                        showPopperArrow={false}\n                                        {...props}\n                                        onBlur={onBlur}\n                                        onChange={onChange}\n                                        selected={value}\n                                    />\n                                </>\n                            )}\n                        />\n                        {errors?.dateOfIncorportation && (\n                            <span className=\"error-text\">\n                                {errors?.dateOfIncorportation?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input return_select-item mb-4 radio-row\">\n                        <p className=\"mb-0\">\n                            Prior bankruptcy&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </p>\n                        <div className=\"pe_radio mt-2\">\n                            <div className=\"radio-flex\">\n                                <label className=\"radiobox\">\n                                    <input\n                                        type=\"radio\"\n                                        id=\"radio-return\"\n                                        name=\"bankruptcy\"\n                                        value=\"yes\"\n                                        {...register('bankruptcy', {\n                                            required: true,\n                                        })}\n                                    />\n                                    <div className=\"radiobox-text\">\n                                        <span>Yes</span>\n                                    </div>\n                                </label>\n                                <label className=\"radiobox\">\n                                    <input\n                                        type=\"radio\"\n                                        id=\"radio-return-one\"\n                                        name=\"bankruptcy\"\n                                        value=\"no\"\n                                        {...register('bankruptcy', {\n                                            required: true,\n                                        })}\n                                    />\n\n                                    <div className=\"radiobox-text\">\n                                        <span>No</span>\n                                    </div>\n                                </label>\n                                {errors?.bankruptcy && (\n                                    <span className=\"error-text\">\n                                        {errors?.bankruptcy?.message}\n                                    </span>\n                                )}\n                            </div>\n                            {bankruptcy === 'yes' && (\n                                <div className=\"radio-data-info mt-3\">\n                                    <div className=\"form-input\">\n                                        <label className=\"form-label\">\n                                            Date of discharge&nbsp;\n                                            <span className=\"asterisk-red\">\n                                                *\n                                            </span>\n                                        </label>\n\n                                        <Controller\n                                            control={control}\n                                            name=\"dateOfDischarge\"\n                                            render={({\n                                                field: {\n                                                    onChange,\n                                                    onBlur,\n                                                    value,\n                                                },\n                                                ...props\n                                            }) => (\n                                                <>\n                                                    <DatePicker\n                                                        closeOnScroll\n                                                        maxDate={new Date()}\n                                                        customInput={\n                                                            <ExampleCustomInput />\n                                                        }\n                                                        placeholderText=\"MM-DD-YYYY\"\n                                                        dateFormat=\"MM-dd-yyyy\"\n                                                        showPopperArrow={false}\n                                                        {...props}\n                                                        onBlur={onBlur}\n                                                        onChange={onChange}\n                                                        selected={value}\n                                                    />\n                                                </>\n                                            )}\n                                        />\n                                        {errors?.dateOfDischarge && (\n                                            <span className=\"error-text\">\n                                                {\n                                                    errors?.dateOfDischarge\n                                                        ?.message\n                                                }\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Estimated average sales volume on ShopDot\n                            (Monthly)&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <div className=\"wp-right\">\n                            <span className=\"doller-lbl\">$</span>\n                            <input\n                                type=\"number\"\n                                name=\"averageSales\"\n                                className=\"form-control mb-0\"\n                                id=\"\"\n                                {...register('averageSales', {\n                                    required: true,\n                                })}\n                            />\n                            {errors?.averageSales && (\n                                <span className=\"error-text\">\n                                    {errors?.averageSales?.message}\n                                </span>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Estimated average wholesale price on\n                            ShopDot&nbsp;(per item)\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <div className=\"wp-right\">\n                            <span className=\"doller-lbl\">$</span>\n                            <input\n                                type=\"number\"\n                                name=\"averageSalePrice\"\n                                className=\"form-control mb-0\"\n                                id=\"\"\n                                {...register('averageSalePrice', {\n                                    required: true,\n                                })}\n                            />\n                            {errors?.averageSalePrice && (\n                                <span className=\"error-text\">\n                                    {errors?.averageSalePrice?.message}\n                                </span>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Average delivery time&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <Controller\n                            name=\"averageDeliveryTime\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className=\"basic-single\"\n                                    classNamePrefix=\"select\"\n                                    styles={categoryStyle}\n                                    components={{\n                                        IndicatorSeparator: () => null,\n                                    }}\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#fbf5f0',\n                                            primary: '#bd6f34',\n                                        },\n                                    })}\n                                    options={deliveryTimeOptions}\n                                />\n                            )}\n                        />\n                        {errors?.averageDeliveryTime && (\n                            <span className=\"error-text\">\n                                {errors?.averageDeliveryTime?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Merchant category code&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n\n                        <Controller\n                            name=\"merchantCategoryCode\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className=\"basic-single\"\n                                    classNamePrefix=\"select\"\n                                    styles={categoryStyle}\n                                    components={{\n                                        IndicatorSeparator: () => null,\n                                    }}\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#fbf5f0',\n                                            primary: '#bd6f34',\n                                        },\n                                    })}\n                                    options={merchantOptions}\n                                />\n                            )}\n                        />\n                        {errors?.merchantCategoryCode && (\n                            <span className=\"error-text\">\n                                {errors?.merchantCategoryCode?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Sales method&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <Controller\n                            name=\"salesMethod\"\n                            control={control}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className=\"basic-single\"\n                                    classNamePrefix=\"select\"\n                                    styles={categoryStyle}\n                                    components={{\n                                        IndicatorSeparator: () => null,\n                                    }}\n                                    theme={(theme) => ({\n                                        ...theme,\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#fbf5f0',\n                                            primary: '#bd6f34',\n                                        },\n                                    })}\n                                    options={salesOptions}\n                                />\n                            )}\n                        />\n                        {errors?.salesMethod && (\n                            <span className=\"error-text\">\n                                {errors?.salesMethod?.message}\n                            </span>\n                        )}\n                    </div>\n                    <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                            Product description&nbsp;\n                            <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <textarea\n                            name=\"productionDescription\"\n                            className=\"textarea-item\"\n                            id=\"message\"\n                            rows=\"3\"\n                            cols=\"5\"\n                            required=\"\"\n                            placeholder=\"\"\n                            {...register('productionDescription', {\n                                required: true,\n                            })}\n                        ></textarea>\n                        {errors?.productionDescription && (\n                            <span className=\"error-text\">\n                                {errors?.productionDescription?.message}\n                            </span>\n                        )}\n                    </div>\n                </div>\n                <div className=\"form-area\">\n                    <div className=\"form-input form-submit\">\n                        <button\n                            type=\"button\"\n                            onClick={() => handleConfirmationModelClose()}\n                            className=\"button button-grey cancel\"\n                        >\n                            Back\n                        </button>\n                        <button\n                            className=\"button summary-icon\"\n                            type=\"submit\"\n                            disabled={!isValid}\n                        >\n                            Save and Next\n                            <img src={rightArrow} alt=\"Arrow\" />\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </>\n    );\n}\n\nBusinessDetails.propTypes = {\n    isEdited: PropTypes.bool,\n    setStartingTab: PropTypes.func,\n    handleChangeTab: PropTypes.func,\n    setIsEdited: PropTypes.func,\n    handleConfirmationModelClose: PropTypes.func,\n};\n"],"names":["defaultValues","averageDeliveryTime","deliveryTimeOptions","merchantCategoryCode","merchantOptions","countryAddress","countryOptions","salesMethod","salesOptions","bankruptcy","BusinessDetails","_ref","_errors$businessName","_errors$businessAs","_errors$website","_errors$businessEmail","_errors$businessCateg","_errors$textIdType","_errors$employerIdent","_errors$socialSecurit","_errors$phoneNumber","_errors$addressLine","_errors$addressLine2","_errors$countryAddres","_errors$stateAddress","_errors$city","_errors$zipcode","_errors$stateOfIncorp","_errors$dateOfIncorpo","_errors$bankruptcy","_errors$dateOfDischar","_errors$averageSales","_errors$averageSalePr","_errors$averageDelive","_errors$merchantCateg","_errors$salesMethod","_errors$productionDes","isEdited","handleChangeTab","setStartingTab","setIsEdited","handleConfirmationModelClose","businessDetails","useSelector","selectBusinessDetails","gettingPaidPreferance","selectGettingPaidPreferance","bussinessCategoryOptions","isEmpty","isNil","publiclyTraded","businessCategoryOptions","businessCategoryOptionsNew","dispatch","useDispatch","_useForm","useForm","mode","resolver","yupResolver","BusinessDetailsValidationSchema","control","register","handleSubmit","reset","setValue","watch","setError","clearErrors","_useForm$formState","formState","errors","isValid","useEffect","Object","keys","length","forEach","field","Date","businessCategoryWatch","textIdTypeWatch","_jsx","_Fragment","children","_jsxs","className","onSubmit","data","console","log","setBusinessDetails","_objectSpread","type","name","placeholder","required","businessName","message","businessAs","id","website","businessEmail","Controller","render","_ref2","Select","classNamePrefix","styles","categoryStyle","components","IndicatorSeparator","theme","colors","primary25","primary","options","businessCategory","value","htmlFor","_ref3","textIdOptions","textIdType","onChange","event","_formattedValues","_formattedValues2","rawValue","target","replace","formattedValues","concat","slice","blur","handleEINChange","employerIdentificationNumber","_ref4","handleSSNChange","socialSecurityNumber","_ref5","_ref5$field","onBlur","e","i","formattedValue","handlePhoneChange","phoneNumber","addressLine1","addressLine2","_ref6","_ref7","stateIncorporationOptions","stateAddress","city","zipcode","_ref8","stateOfIncorportation","_ref9","_ref9$field","props","_objectWithoutProperties","_excluded","DatePicker","closeOnScroll","maxDate","customInput","ExampleCustomInput","placeholderText","dateFormat","showPopperArrow","selected","dateOfIncorportation","_ref10","_ref10$field","_excluded2","dateOfDischarge","averageSales","averageSalePrice","_ref11","_ref12","_ref13","rows","cols","productionDescription","onClick","disabled","src","rightArrow","alt"],"sourceRoot":""}