{"version":3,"file":"static/js/6345.96b7a95c.chunk.js","mappings":"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","sources":["components/common/Input/divStyled.js","pages/Auth/CreatePassword/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n    orange100,\n    inputTransitionSpeed,\n    inputBackground,\n    inuputHeight,\n    inputPadding,\n    inputBorderRadius,\n    inputBorderColor,\n    inputFonstSize,\n    inputFontFamily,\n    inputColor,\n    inputFocusBorderColor,\n    inputFocusBackgroundColor,\n    inputValidBorderColor,\n    inputValidBackgroundColor,\n} from '../../../theme/variables';\n\nconst Input = styled.input`\n    // display: flex;\n    // align-items: center;\n    // align-content: center;\n    // z-index: 0;\n    // -webkit-appearance: none;\n    // appearance: none;\n    // width: 100%;\n    // box-sizing: border-box;\n    // font-family: ${inputFontFamily};\n    // font-size: ${inputFonstSize};\n    // font-weight: 400;\n    // border: 0.1rem solid ${inputBorderColor};\n    // border-radius: ${inputBorderRadius};\n    // padding: ${inputPadding};\n    // height: ${inuputHeight};\n    // outline: none;\n    // background-color: ${inputBackground};\n    // transition: all ${inputTransitionSpeed} ease;\n    // caret-color: ${orange100};\n    //\n    // &::place-holder {\n    //     color: ${inputColor};\n    //     opacity: 0.64;\n    // }\n    //\n    // &.invalid {\n    //     border-color: ${inputFocusBorderColor};\n    //     background-color: ${inputFocusBackgroundColor};\n    // }\n    //\n    // &:focus {\n    //     border-color: ${inputFocusBorderColor};\n    //     background-color: ${inputFocusBackgroundColor};\n    // }\n    //\n    // &:focus:required:invalid {\n    //     border-color: ${inputFocusBorderColor};\n    //     background-color: ${inputFocusBackgroundColor};\n    // }\n    //\n    // &:required:valid {\n    //     border-color: var(--orange-tint-10);\n    //     background-color: var(--white);\n    // }\n    //\n    // &.valid {\n    //     border-color: ${inputValidBorderColor};\n    //     background-color: ${inputValidBackgroundColor};\n    // }\n\n    background: #fffcf9;\n    border: 1px solid #f3e0d2;\n    border-radius: 4px;\n    height: 4rem;\n    padding: 1rem 1.2rem;\n    display: block;\n    width: 100%;\n    margin-top: 0.6rem;\n    appearance: none;\n    box-sizing: border-box;\n    font-family: 'Mulish', sans-serif;\n    outline: none;\n\n    &.invalid {\n        border-color: #eb5757;\n    }\n`;\n\nexport default Input;\n","/* eslint-disable no-unused-vars */\n\n// Auth flow:: CreatePassword page\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Header from '../../../components/Header/Header';\nimport PublicLayout from '../../../layout/PublicLayout';\nimport Input from '../../../components/common/Input/divStyled';\nimport Button from '../../../components/common/Button';\nimport { AuthApiService } from '../../../services/apis/authApis';\nimport { useSelector } from 'react-redux';\nimport { selectUserDetails } from '../../../redux/user/userSelector';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nimport '../auth.style.scss';\n\n// Validation schema of form field\nconst validationSchema = yup\n  .object()\n  .shape({\n    password: yup.string().required('Password is required.'),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'Passwords must match.')\n      .required('Password confirm is required.'),\n  })\n  .required();\n\nfunction CreatePassword() {\n  const [passwordType, setPasswordType] = useState(true);\n  const [confirmPasswordType, setConfirmPasswordType] = useState(true);\n  const useDetails = useSelector(selectUserDetails);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(validationSchema) });\n\n  const onSubmit = async (data) => {\n    const response = await AuthApiService.changePassword(data, useDetails.id);\n    if (response) {\n      navigate('/reset-password-success');\n    } else {\n      toast.error('Something went wrong');\n    }\n  };\n\n  return (\n    <>\n      <Header pageTitle=\"Create New Password\" />\n      <PublicLayout>\n        <div className=\"info-window\">\n          <div className=\"info-window__text\">\n            <p>You can now create a new password.</p>\n          </div>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"sign__form form\">\n          <div className=\"form__field form__field--floating-label\">\n            <Input\n              className=\"password\"\n              type={passwordType ? 'password' : 'text'}\n              name=\"password\"\n              {...register('password', {\n                required: true,\n              })}\n              placeholder=\"Create password\"\n            />\n            <label>Create new password</label>\n\n            <div className=\"password-message\">\n              Password is <span>strong!</span>\n            </div>\n            <span\n              className={`password-show ${passwordType ? '' : 'active'}`}\n              onClick={() => setPasswordType(!passwordType)}\n            />\n            {errors.password && (\n              <span className=\"error-text\">{errors.password?.message}</span>\n            )}\n          </div>\n          <div className=\"form__field form__field--floating-label\">\n            <Input\n              className=\"password\"\n              name=\"confirmPassword\"\n              {...register('confirmPassword', {\n                required: true,\n              })}\n              type={confirmPasswordType ? 'password' : 'text'}\n              placeholder=\"Create password\"\n            />\n            <label>Repeat password</label>\n\n            <div className=\"password-message\">Password matches!</div>\n            <span\n              className={`password-show ${confirmPasswordType ? '' : 'active'}`}\n              onClick={() => setConfirmPasswordType(!confirmPasswordType)}\n            />\n            {errors.confirmPassword && (\n              <span className=\"error-text\">\n                {errors.confirmPassword?.message}\n              </span>\n            )}\n          </div>\n\n          <div className=\"form__field buttons\">\n            <Button type=\"submit\" className=\"button mt-5\">\n              Create\n            </Button>\n          </div>\n        </form>\n      </PublicLayout>\n    </>\n  );\n}\n\nexport default CreatePassword;\n"],"names":["Input","styled","_templateObject","_taggedTemplateLiteral","inputFontFamily","inputFonstSize","inputBorderColor","inputBorderRadius","inputPadding","inuputHeight","inputBackground","inputTransitionSpeed","orange100","inputColor","inputFocusBorderColor","inputFocusBackgroundColor","inputValidBorderColor","inputValidBackgroundColor","validationSchema","yup","shape","password","required","confirmPassword","oneOf","_errors$password","_errors$confirmPasswo","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","_useState3","_useState4","confirmPasswordType","setConfirmPasswordType","useDetails","useSelector","selectUserDetails","navigate","useNavigate","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","reset","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","AuthApiService","id","sent","toast","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Header","pageTitle","PublicLayout","className","_objectSpread","type","name","placeholder","concat","onClick","message","Button"],"sourceRoot":""}