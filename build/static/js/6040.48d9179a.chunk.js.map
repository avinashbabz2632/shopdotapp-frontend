{"version":3,"file":"static/js/6040.48d9179a.chunk.js","mappings":"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","sources":["pages/Brand/images/gp-arrow-white.svg","pages/Brand/Settings/Paid/BusinessDetails.js","pages/Brand/Settings/Paid/ValidationSchema.js","utils/utils.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGpArrowWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 17,\n    height: 16,\n    viewBox: \"0 0 17 16\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5007 3.33301L9.56065 4.27301L12.614 7.33301H1.83398V8.66634H12.614L9.55398 11.7263L10.5007 12.6663L15.1673 7.99967L10.5007 3.33301Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGpArrowWhite);\nexport default __webpack_public_path__ + \"static/media/gp-arrow-white.8b53ad79358d34b6f5ed90925a4b16bb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport { useForm, useWatch, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport Select, { components } from 'react-select';\nimport * as yup from 'yup';\nimport PropTypes, { oneOf } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GpArrowWhiteIcon from '../../images/gp-arrow-white.svg';\nimport { get } from 'lodash';\nimport { setBusinessDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSlice';\nimport { selectBusinessDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport { BusinessDetailsValidationSchema } from './ValidationSchema';\nimport tAndCDoc from '../../../../assets/ShopDot-Online-Business-Services-Agreement-09-01-2022.pdf';\nimport { LinkMod } from '../../../../components/common/A';\nimport moment from 'moment';\nimport { ExampleCustomInput } from '../../../../utils/utils';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst businessCategoryOptions = [\n  { value: 'C_CORP', label: 'C_CORP - Publicly Traded' },\n  { value: 'GOVERNMENT_ORGANISATION', label: 'Government Organization' },\n  { value: 'NON_PROFIT', label: 'Non Profit' },\n  { value: 'TAX_EXEMPT', label: 'Tax Exempt' },\n];\n\nconst textIdOptions = [\n  {\n    value: 'ein',\n    label: 'Employer Identification Number (EIN)',\n  },\n  { value: 'ssn', label: 'Social Security Number (SSN)' },\n];\n\nconst stateIncorporationOptions = [\n  {\n    value: 'AL',\n    label: 'Alaska',\n  },\n  { value: 'NY', label: 'New York' },\n];\n\nconst deliveryTimeOptions = [\n  {\n    value: 'WEEK',\n    label: 'Week',\n  },\n  { value: 'FORTNIGHT', label: '2 Weeks' },\n  { value: 'MONTH', label: 'Month' },\n  { value: 'TWO_MONTHS', label: '2 Months' },\n  { value: 'OVER_TWO_MONTHS', label: 'Over 2 Months' },\n];\n\nconst merchantOptions = [\n  {\n    value: '5099',\n    label: '5099 (Durable goods - not else classified)',\n  },\n  { value: '5199', label: '5199 (Nondurable goods - not else classified)' },\n];\n\nconst salesOptions = [\n  {\n    value: 'ECOM',\n    label: '100% Digital Transaction',\n  },\n];\n\nconst defaultValues = {\n  state_of_incorporation: stateIncorporationOptions[0],\n  average_delivery_time: deliveryTimeOptions[0],\n  merchant_category_code: merchantOptions[0],\n  sales_method: salesOptions[0],\n};\nconst categoryStyle = {\n  control: (styles) => {\n    return {\n      ...styles,\n      boxShadow: 'none',\n      minHeight: '40px',\n      '&:hover': {\n        boxShadow: 'none',\n      },\n    };\n  },\n  container: (style) => {\n    return {\n      ...style,\n      marginTop: '5xp',\n      marginRight: '1px',\n    };\n  },\n};\n\nexport default function BusinessDetails({\n  isEdited,\n  setStartingTab,\n  handleChangeTab,\n  setIsEdited,\n  formData,\n}) {\n  const businessDetails = useSelector(selectBusinessDetails);\n  const dispatch = useDispatch();\n  const [incorporationDate, setIncorporationDate] = useState(null);\n  const [dischargeDate, setDischargeDate] = useState(null);\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    reset,\n    value,\n    setValue,\n    watch,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(BusinessDetailsValidationSchema),\n    defaultValues,\n  });\n  const DropdownIndicator = (props) => {\n    return (\n      <components.DropdownIndicator {...props}>\n        <i className=\"dropdown-icon\" />\n      </components.DropdownIndicator>\n    );\n  };\n\n  useEffect(() => {\n    const isFormValuePresent = Object.keys(businessDetails).length;\n    if (isFormValuePresent != null) {\n      const fields = [\n        'legal_name',\n        'doing_business_as',\n        'textIdType',\n        'ein',\n        'ssn',\n        'date_of_incorporation',\n        'prior_bankruptcy',\n        'dateOfDischarge',\n        'average_sales_volume',\n        'average_purchase',\n        'product_description',\n        'business_category',\n        'sales_method',\n        'merchant_category_code',\n        'average_delivery_time',\n        'email',\n        'store_website',\n      ];\n\n      fields.forEach((field) => setValue(field, businessDetails[field]));\n    }\n\n    return () => {\n      setIsEdited(false);\n    };\n  }, [isEdited]);\n\n  const handleEINChange = (event) => {\n    const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n    let formattedValues = '';\n    if (rawValue.length < 3) {\n      formattedValues = rawValue;\n    } else {\n      formattedValues = `${rawValue.slice(0, 2)}-${rawValue.slice(2, 9)}`;\n    }\n    setValue('ein', formattedValues);\n    if (formattedValues.length < 2) {\n      setError('ein', {\n        type: 'custom',\n        message: 'should be in XX-XXXXXXX format.',\n      });\n    } else if (formattedValues.length < 10) {\n      setError('ein', {\n        type: 'custom',\n        message: 'EIN should be 9 digit',\n      });\n    } else {\n      clearErrors('ein');\n      event.target.blur();\n    }\n  };\n\n  const handleDateChange = (date, event) => {\n    if (date) {\n      const isoDate = new Date(date).toISOString();\n      const formatedDate = moment(isoDate).format('MM-DD-YYYY');\n      setIncorporationDate(date);\n      setValue('date_of_incorporation', formatedDate);\n      clearErrors('date_of_incorporation');\n    } else {\n      setValue('date_of_incorporation', null);\n      setError('date_of_incorporation', {\n        type: 'custom',\n        message: 'Date of Incorporation is required',\n      });\n    }\n    event.target.blur();\n  };\n\n  const handleDateOfDischargeChange = (date, event) => {\n    if (date) {\n      const isoDate = new Date(date).toISOString();\n      const formatedDate = moment(isoDate).format('MM-DD-YYYY');\n      setIncorporationDate(date);\n      setValue('dateOfDischarge', formatedDate);\n      clearErrors('dateOfDischarge');\n    } else {\n      setValue('dateOfDischarge', null);\n      setError('dateOfDischarge', {\n        type: 'custom',\n        message: 'Date of Incorporation is required',\n      });\n    }\n    event.target.blur();\n  };\n\n  const onSubmit = (data) => {\n    dispatch(setBusinessDetails(data));\n    reset();\n    handleChangeTab('2');\n  };\n\n  const businessCategoryWatch = watch('business_category');\n  const textIdTypeWatch = watch('textIdType');\n  const prior_bankruptcy = watch('prior_bankruptcy');\n\n  return (\n    <>\n      <form className=\"gp-right\" onSubmit={handleSubmit(onSubmit)}>\n        <h3 className=\"heading\">Business Details</h3>\n        <p>\n          The information Priority Holdings collects about your business helps\n          them meet requirements from regulators, and their{' '}\n          <LinkMod to={tAndCDoc} target=\"_blank\">\n            Terms and Conditions\n          </LinkMod>\n          .\n        </p>\n        <div className=\"form-area\">\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Legal business name&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-0\"\n              name=\"legal_name\"\n              placeholder=\"\"\n              {...register('legal_name', { required: true })}\n            />\n            {errors.legal_name && (\n              <span className=\"error-text\">{errors.legal_name?.message}</span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Doing business as\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-0\"\n              name=\"doing_business_as\"\n              placeholder=\"\"\n              {...register('doing_business_as', { required: true })}\n            />\n            <small>\n              The operating name of your company, if it&nbsp;s different than\n              the legal name.{' '}\n            </small>\n            {errors.doing_business_as && (\n              <span className=\"error-text\">\n                {errors.doing_business_as?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Business website address&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-0\"\n              name=\"store_website\"\n              placeholder=\"\"\n              {...register('store_website', { required: true })}\n            />\n            {errors.store_website && (\n              <span className=\"error-text\">\n                {errors.store_website?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Business email address&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-0\"\n              name=\"email\"\n              placeholder=\"\"\n              {...register('email', { required: true })}\n            />\n            {errors.email && (\n              <span className=\"error-text\">{errors.email?.message}</span>\n            )}\n          </div>\n          <div className=\"form-input mb-4 business_category\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Business category&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <Controller\n              name=\"business_category\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  placeholder=\"\"\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  styles={categoryStyle}\n                  components={{\n                    IndicatorSeparator: () => null,\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#fbf5f0',\n                      primary: '#bd6f34',\n                    },\n                  })}\n                  options={businessCategoryOptions}\n                />\n              )}\n            />\n            {errors.business_category && (\n              <span className=\"error-text\">\n                {errors.business_category?.message}\n              </span>\n            )}\n          </div>\n          {/* {businessCategoryWatch?.value === 'SINGLE_MEMBER_LLC' && (\n            <>\n              <div className=\"form-input mb-4 signle_member_llc\">\n                <label htmlFor=\"\" className=\"form-label\">\n                  Tax ID Type&nbsp;\n                  <span className=\"asterisk-red\">*</span>\n                </label>\n                <Controller\n                  name=\"textIdType\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className=\"basic-single\"\n                      classNamePrefix=\"select\"\n                      placeholder=\"\"\n                      styles={categoryStyle}\n                      components={{\n                        IndicatorSeparator: () => null,\n                      }}\n                      theme={(theme) => ({\n                        ...theme,\n                        colors: {\n                          ...theme.colors,\n                          primary25: '#fbf5f0',\n                          primary: '#bd6f34',\n                        },\n                      })}\n                      options={textIdOptions}\n                    />\n                  )}\n                />\n                {errors.textIdType && (\n                  <span className=\"error-text\">\n                    {errors.textIdType?.message}\n                  </span>\n                )}\n              </div>\n            </>\n          )} */}\n          {(businessCategoryWatch?.value === 'SINGLE_MEMBER_LLC' ||\n            businessCategoryWatch?.value === 'SOLE_PROPRIETOR' ||\n            businessCategoryWatch?.value === 'LLC' ||\n            businessCategoryWatch?.value === 'LLP' ||\n            businessCategoryWatch?.value === 'PARTNERSHIP' ||\n            businessCategoryWatch?.value === 'C_CORP' ||\n            businessCategoryWatch?.value === 'S_CORP' ||\n            businessCategoryWatch?.value === 'GOVERNMENT_ORGANISATION' ||\n            businessCategoryWatch?.value === 'NON_PROFIT' ||\n            businessCategoryWatch?.value === 'TAX_EXEMPT') && (\n            <div className=\"form-input mb-4 ein\">\n              <label htmlFor=\"\" className=\"form-label\">\n                Employer Identification Number (EIN)&nbsp;\n                <span className=\"asterisk-red\">*</span>\n              </label>\n              <input\n                type=\"tel\"\n                placeholder=\"12-3456789\"\n                name=\"ein\"\n                className=\"form-control mb-0\"\n                id=\"\"\n                {...register('ein', {\n                  required: true,\n                })}\n                onChange={(event) => handleEINChange(event)}\n              />\n              {errors.ein && (\n                <span className=\"error-text\">{errors.ein?.message}</span>\n              )}\n            </div>\n          )}\n\n          {/* {(textIdTypeWatch?.value === 'ssn' ||\n            businessCategoryWatch?.value === 'SOLE_PROPRIETOR') &&\n            businessCategoryWatch?.value !== 'LLC' &&\n            businessCategoryWatch?.value !== 'LLP' &&\n            businessCategoryWatch?.value !== 'PARTNERSHIP' &&\n            businessCategoryWatch?.value !== 'C_CORP' &&\n            businessCategoryWatch?.value !== 'S_CORP' &&\n            businessCategoryWatch?.value !== 'GOVERNMENT_ORGANISATION' &&\n            businessCategoryWatch?.value !== 'NON_PROFIT' &&\n            businessCategoryWatch?.value !== 'TAX_EXEMPT' && (\n              <div className=\"form-input mb-4 ssn\">\n                <label htmlFor=\"\" className=\"form-label\">\n                  Social Security Number (SSN)&nbsp;\n                  <span className=\"asterisk-red\">*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"ssn\"\n                  className=\"form-control mb-0\"\n                  {...register('ssn', {\n                    required: true,\n                  })}\n                />\n                {errors.ssn && (\n                  <span className=\"error-text\">{errors.ssn?.message}</span>\n                )}\n              </div>\n            )} */}\n\n          <div className=\"form-input mb-4\">\n            <label className=\"form-label\">\n              State of incorporation&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <Controller\n              name=\"state_of_incorporation\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  placeholder={'Select State'}\n                  styles={categoryStyle}\n                  components={{\n                    IndicatorSeparator: () => null,\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#fbf5f0',\n                      primary: '#bd6f34',\n                    },\n                  })}\n                  options={stateIncorporationOptions}\n                />\n              )}\n            />\n            {errors.state_of_incorporation && (\n              <span className=\"error-text\">\n                {errors.state_of_incorporation?.message}\n              </span>\n            )}\n          </div>\n\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Date of incorporation&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n\n            <Controller\n              name=\"date_of_incorporation\"\n              control={control}\n              render={({ field }) => (\n                <>\n                  <DatePicker\n                    {...field}\n                    closeOnScroll\n                    maxDate={new Date()}\n                    customInput={<ExampleCustomInput />}\n                    placeholderText=\"MM-DD-YYYY\"\n                    selected={incorporationDate}\n                    onChange={(date, event) => {\n                      setIncorporationDate(date);\n                      handleDateChange(date, event);\n                    }}\n                    dateFormat=\"MM-dd-yyyy\"\n                    showPopperArrow={false}\n                  />\n                </>\n              )}\n            />\n\n            {errors.date_of_incorporation && (\n              <span className=\"error-text\">\n                {errors.date_of_incorporation?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input return_select-item mb-4\">\n            <p className=\"mb-0\">\n              Prior bankruptcy&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </p>\n            <div className=\"pe_radio mt-2\">\n              <label htmlFor=\"radio-return\" className=\"radiobox\">\n                <input\n                  type=\"radio\"\n                  control={control}\n                  name=\"prior_bankruptcy\"\n                  id=\"radio-return\"\n                  value=\"yes\"\n                  {...register('prior_bankruptcy', {\n                    required: true,\n                  })}\n                />\n                <div className=\"radiobox-text\">\n                  <span>Yes</span>\n                </div>\n              </label>\n              <label htmlFor=\"radio-return-one\" className=\"radiobox\">\n                <input\n                  control={control}\n                  type=\"radio\"\n                  name=\"prior_bankruptcy\"\n                  id=\"radio-return-one\"\n                  value=\"no\"\n                  {...register('prior_bankruptcy', {\n                    required: true,\n                  })}\n                />\n\n                <div className=\"radiobox-text\">\n                  <span>No</span>\n                </div>\n              </label>\n              {errors.prior_bankruptcy && (\n                <span className=\"error-text\">\n                  {errors.prior_bankruptcy?.message}\n                </span>\n              )}\n\n              {prior_bankruptcy === 'yes' && (\n                <div className=\"radio-data-info mt-3\">\n                  <div className=\"form-input\">\n                    <label className=\"form-label\">\n                      Date of discharge&nbsp;\n                      <span className=\"asterisk-red\">*</span>\n                    </label>\n\n                    <Controller\n                      name=\"dateOfDischarge\"\n                      control={control}\n                      render={({ field }) => (\n                        <>\n                          <DatePicker\n                            maxDate={new Date()}\n                            customInput={<ExampleCustomInput />}\n                            {...field}\n                            closeOnScroll\n                            placeholderText=\"MM-DD-YYYY\"\n                            selected={dischargeDate}\n                            onChange={(date, event) => {\n                              setDischargeDate(date);\n                              handleDateOfDischargeChange(date, event);\n                            }}\n                            dateFormat=\"MM-dd-yyyy\"\n                            showPopperArrow={false}\n                          />\n                        </>\n                      )}\n                    />\n\n                    {errors.dateOfDischarge && (\n                      <span className=\"error-text\">\n                        {errors.dateOfDischarge?.message}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"form-input mb-4\">\n            <label className=\"form-label\">\n              Estimated average sales volume on ShopDot (Monthly)&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <div className=\"wp-right\">\n              <span className=\"doller-lbl\">$</span>\n              <input\n                type=\"number\"\n                name=\"average_sales_volume\"\n                className=\"form-control mb-0\"\n                id=\"\"\n                {...register('average_sales_volume', {\n                  required: true,\n                })}\n              />\n            </div>\n            {errors.average_sales_volume && (\n              <span className=\"error-text\">\n                {errors.average_sales_volume?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Estimate average wholesale price on ShopDot&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <div className=\"wp-right\">\n              <span className=\"doller-lbl\">$</span>\n              <input\n                type=\"number\"\n                name=\"average_purchase\"\n                className=\"form-control mb-0\"\n                id=\"\"\n                {...register('average_purchase', {\n                  required: true,\n                })}\n              />\n            </div>\n            {errors.average_purchase && (\n              <span className=\"error-text\">\n                {errors.average_purchase?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Average delivery time&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <Controller\n              name=\"average_delivery_time\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  styles={categoryStyle}\n                  components={{\n                    IndicatorSeparator: () => null,\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#fbf5f0',\n                      primary: '#bd6f34',\n                    },\n                  })}\n                  options={deliveryTimeOptions}\n                />\n              )}\n            />\n            {errors.average_delivery_time && (\n              <span className=\"error-text\">\n                {errors.average_delivery_time?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Merchant category code&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n\n            <Controller\n              name=\"merchant_category_code\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  styles={categoryStyle}\n                  components={{\n                    IndicatorSeparator: () => null,\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#fbf5f0',\n                      primary: '#bd6f34',\n                    },\n                  })}\n                  options={merchantOptions}\n                />\n              )}\n            />\n            {errors.merchant_category_code && (\n              <span className=\"error-text\">\n                {errors.merchant_category_code?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Sales method&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <Controller\n              name=\"sales_method\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  styles={categoryStyle}\n                  components={{\n                    IndicatorSeparator: () => null,\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#fbf5f0',\n                      primary: '#bd6f34',\n                    },\n                  })}\n                  options={salesOptions}\n                />\n              )}\n            />\n            {errors.sales_method && (\n              <span className=\"error-text\">{errors.sales_method?.message}</span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Product description&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <textarea\n              name=\"product_description\"\n              className=\"textarea-item\"\n              id=\"message\"\n              rows=\"3\"\n              cols=\"5\"\n              required=\"\"\n              placeholder=\"\"\n              {...register('product_description', {\n                required: true,\n              })}\n            ></textarea>\n            {errors.product_description && (\n              <span className=\"error-text\">\n                {errors.product_description?.message}\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"form-area\">\n          <div className=\"form-input form-submit\">\n            <button\n              className=\"button button-grey cancel\"\n              onClick={() => setStartingTab(false)}\n            >\n              Back\n            </button>\n            <button className=\"button summary-icon\" type=\"submit\">\n              Save and Next\n              <img src={GpArrowWhiteIcon} />\n            </button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n\nBusinessDetails.propTypes = {\n  isEdited: PropTypes.String,\n  setStartingTab: PropTypes.func,\n  handleChangeTab: PropTypes.func,\n  setIsEdited: PropTypes.func,\n};\n","import * as yup from 'yup';\n\nexport const BusinessDetailsValidationSchema = yup.object().shape({\n  legal_name: yup.string().required('Legal Business name is required.'),\n  email: yup\n    .string()\n    .email('Must be a valid email.')\n    .max(255)\n    .required('Contact email is required.'),\n  store_website: yup.string().required('Must be a valid website.'),\n  doing_business_as: yup\n    .string()\n    .required('Doing Business is required.')\n    .test(\n      'legal_name',\n      'Doing Business is different than the legal name',\n      function (business) {\n        return business ? business !== this.parent.legal_name : true;\n      }\n    ),\n  business_category: yup.object().required('Business Category is required.'),\n  textIdType: yup.object().when('businessCategory', {\n    is: (businessCategory) => businessCategory?.value === 'signle_member_llc',\n    then: yup.object().nullable().required('TextID is required'),\n  }),\n  ein: yup.string().required('Employer Identification Number is required'),\n  // .when('businessCategory', {\n  //     is: (businessCategory) =>\n  //         businessCategory?.value !== 'solo_proprietor',\n  //     then: yup\n  //         .string()\n  //         .required('Employer Identification Number is required'),\n  // }),\n  ssn: yup\n    .string()\n    .when('textIdType', {\n      is: (textIdType) => textIdType?.value === 'ssn',\n      then: yup.string().required('Social Security Number is required.'),\n    })\n    .when('businessCategory', {\n      is: (businessCategory) => businessCategory?.value === 'solo_proprietor',\n      then: yup.string().required('Social Security Number is required.'),\n    }),\n  state_of_incorporation: yup\n    .object()\n    .shape({\n      label: yup.string().required('State of Incorporation is required.'),\n      value: yup.string().required('State of Incorporation is required.'),\n    })\n    .nullable()\n    .required('State of Incorporation is required.'),\n  date_of_incorporation: yup\n    .string()\n    .required('Date of Incorporation is required.'),\n  prior_bankruptcy: yup\n    .string()\n    .nullable()\n    .required('Prior Bankruptcy is required.'),\n  dateOfDischarge: yup.string().when('prior_bankruptcy', {\n    is: (prior_bankruptcy) => prior_bankruptcy === true,\n    then: yup.string().required('Date of Discharge is required.'),\n  }),\n  average_sales_volume: yup\n    .string()\n    .required('Estimated Average Sales Volume on ShopDot is required.'),\n  average_purchase: yup\n    .string()\n    .required('Estimated Average Sale Price on ShopDot is required.'),\n  average_delivery_time: yup\n    .object()\n    .shape({\n      label: yup.string().required('Average Delivery Time is required.'),\n      value: yup.string().required('Average Delivery Time is required.'),\n    })\n    .nullable()\n    .required('Average Delivery Time is required.'),\n\n  merchant_category_code: yup\n    .object()\n    .shape({\n      label: yup.string().required('Merchant Category Code is required.'),\n      value: yup.string().required('Merchant Category Code is required.'),\n    })\n    .nullable()\n    .required('Merchant Category Code is required.'),\n\n  sales_method: yup\n    .object()\n    .shape({\n      label: yup.string().required('Sales Method is required.'),\n      value: yup.string().required('Sales Method is required.'),\n    })\n    .nullable()\n    .required('Sales Method is required.'),\n  product_description: yup\n    .string()\n    .required('Product Description is required.'),\n});\n\nexport const BusinessRepresentativeValidationSchema = yup.object().shape({\n  owner_first_name: yup\n    .string()\n    .required('Legal Person first name is required.'),\n  owner_last_name: yup.string().required('Legal Person last name is required.'),\n  owner_phone: yup.string().required('Phone number is required.'),\n  // ssn: yup.string().required('SSN is required.'),\n  owner_dob: yup.string().required('Date of birth is required.'),\n  countryAddress: yup\n    .object()\n    .shape({\n      label: yup.string().required('Country is require.'),\n      value: yup.string().required('Country is require.'),\n    })\n    .nullable()\n    .required('Address State is require.'),\n  state: yup\n    .object()\n    .shape({\n      label: yup.string().required('Address State is require.'),\n      value: yup.string().required('Address State is require.'),\n    })\n    .nullable()\n    .required('Address State is require.'),\n  address_line_1: yup.string().required('Address line 1 is required.'),\n  address_line_2: yup.string(),\n  city: yup.string().required('City is required.'),\n  // citySelect: yup\n  //   .object()\n  //   .shape({\n  //     label: yup.string().required('City is required.'),\n  //     value: yup.string().required('City is required.'),\n  //   })\n  //   .nullable()\n  //   .required('City is required'),\n  zip: yup.string().required('Zip-code is required.'),\n\n  secondary_identification_type: yup\n    .object()\n    .nullable()\n    .required('Secondary Identification is required.'),\n\n  identification_state_of_issuance: yup\n    .object()\n    .when('secondary_identification_type', {\n      is: (secondary_identification_type) =>\n        secondary_identification_type?.value !== 'dl',\n      then: yup\n        .object()\n        .nullable()\n        .required('Country of issuance is required.'),\n    }),\n  // identification_state_of_issuance: yup\n  //   .object()\n  //   .when('identification_state_of_issuance', {\n  //     is: (identification_state_of_issuance) =>\n  //       identification_state_of_issuance?.value === 'dl',\n  //     then: yup.object().nullable().required('State of issuance is required.'),\n  //   }),\n\n  identification_id: yup.string().required('Id number is required.'),\n});\n\nexport const BankDetailsValidationSchema = yup.object().shape({\n  account_holder_name: yup\n    .string()\n    .required('Bank Account holder name is required.'),\n  account_type: yup\n    .object()\n    .nullable()\n    .required('Bank Account type is required.'),\n  purpose: yup.object().nullable().required('Purpose is required.'),\n  account_number: yup.string().max(12).required('Account number is required.'),\n  routing_number: yup.string().required('Routing number is require'),\n});\n\nexport const SummaryValidationSchema = yup.object().shape({\n  confirmation: yup\n    .boolean()\n    .oneOf([true], 'You need to accept the confirm details'),\n  tnc: yup\n    .boolean()\n    .oneOf([true], 'You need to accept the terms and conditions'),\n});\n\nexport const shippingValidationSchema = yup.object().shape({\n  address1: yup.string().required('Address 1 is required.'),\n  daystofulfill: yup\n    .object()\n    .nullable()\n    .required('Days to fultill  is required.'),\n  statelist: yup\n    .object()\n    .shape({\n      label: yup.string().required('State Category is required.'),\n      value: yup.string().required('State Category is required.'),\n    })\n    .nullable()\n    .required('State Category is required.'),\n  country: yup.string().required('Country is required.'),\n  city: yup.string().required('City is required.'),\n  shippingfee: yup.string().required('Shipping fee is require.'),\n  incrementalfee: yup.string().required('Incremental fee is require.'),\n  zip: yup.string().required('Zip-code is required.'),\n});\n\nexport const brandProfileValidationSchema = yup.object().shape({\n  company_name: yup.string().required('Company name is required.'),\n  company_email_address: yup\n    .string()\n    .email('Must be a valid email.')\n    .max(255)\n    .required('Contact email is required.'),\n  company_phone_number: yup\n    .string()\n    .required('Contact phone number is required.'),\n  store_name: yup.string().required('Brand name is required.'),\n  store_website: yup.string().required('Brand website is required.'),\n  brand_categories: yup\n    .array()\n    .min(1, 'At least 1 category required')\n    .max(3, 'Select max 3 category.')\n    .nullable()\n    .required('Select max 3 category.'),\n  brand_values: yup\n    .array()\n    .min(1, 'At least 1 value required')\n    .max(3, 'Select max 3 values.')\n    .nullable()\n    .required('Select max 3 values.'),\n  brand_story: yup.string().required('About the brand is required.'),\n  brand_promo: yup.string().required('Please enter valid website.'),\n});\n","/* eslint-disable react/prop-types */\n\nimport React, { forwardRef } from 'react';\n\nexport const ExampleCustomInput = forwardRef(\n    ({ value, onClick, onChange }, ref) => (\n        <input\n            value={value}\n            className=\"example-custom-input form-control mb-0\"\n            onClick={onClick}\n            onChange={onChange}\n            placeholder=\"MM-DD-YYYY\"\n            ref={ref}\n        ></input>\n    )\n);\n\nexport const transactionTypes = [\n    { value: 'All', label: 'All' },\n    { value: 'Order', label: 'Order' },\n    { value: 'Payout', label: 'Payout' },\n    { value: 'Fees', label: 'Fees' },\n    { value: 'Chargeback In', label: 'Chargeback In' },\n    { value: 'Chargeback Out', label: 'Chargeback Out' },\n    { value: 'Refund In', label: 'Refund In' },\n    { value: 'Refund Out', label: 'Refund Out' },\n];\nexport const tableData = [\n    {\n        id: 1,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 2,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 3,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 4,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 5,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 6,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 7,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 8,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 9,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 10,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 11,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 12,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 13,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 14,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Chargeback In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 15,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/02/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 16,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/03/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 17,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/04/2022',\n        transactionType: 'Chargeback In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 18,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/05/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 19,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/06/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 20,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n];\nexport const payoutHistoryReport = [\n    {\n        id: 1,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 2,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 3,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 3,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n];\n\nexport const salesOptions = [\n    {\n        value: '0',\n        label: '100% Digital Transaction',\n    },\n];\n\nexport const merchantOptions = [\n    {\n        value: '5021',\n        label: '5021 (Commercial Furniture)',\n    },\n    {\n        value: '5044',\n        label: '5044 (OFFC, Photographic, Photocopy, Microfilm EQ)',\n    },\n    { value: '5045', label: '5045 (Computers, Peripheral Equip, Software)' },\n    {\n        value: '5046',\n        label: '5046 (Commercial Equipment Not Elsewhere Classified)',\n    },\n    {\n        value: '5047',\n        label: '5047 (Lab/Med/Dental/Ophthalmic Hosp Eq &amp; Supplies)',\n    },\n    { value: '5065', label: '5065 (Electrical Parts and Equipment)' },\n    { value: '5072', label: '5072 (Hardware Equipment and Supplies)' },\n    {\n        value: '5094',\n        label: '5094 (Precious Stones, Metals, Watches, Jewelry)',\n    },\n    { value: '5099', label: '5099 (Durable Goods Not Elsewhere Classified)' },\n    {\n        value: '5111',\n        label: '5111 (Stationary, Office Supplies, Printing, WR PPR)',\n    },\n    {\n        value: '5122',\n        label: '5122 (Drugs, Drug Properties, Druggist Sundries)',\n    },\n    {\n        value: '5131',\n        label: '5131 (Piece Goods, Notions, and Other Dry Goods)',\n    },\n    {\n        value: '5137',\n        label: '5137 (Men’s, Women’s, Children’s Uniforms, COMM CLTH)',\n    },\n    { value: '5139', label: '5139 (Commercial Footwear)' },\n    { value: '5192', label: '5192 (Books, Periodicals &amp; Newspapers)' },\n    { value: '5193', label: '5193 (Florist Supplies, Nursery STK, Flowers)' },\n    {\n        value: '5199',\n        label: '5199 (Nondurable Goods Not Elsewhere Classified)',\n    },\n];\n\nexport const deliveryTimeOptions = [\n    {\n        value: 'week',\n        label: 'Week',\n    },\n    { value: '2weeks', label: '2 Weeks' },\n    { value: 'month', label: 'Month' },\n    { value: '2month', label: '2 Months' },\n    { value: '2monthplus', label: 'Over 2 Months' },\n];\n\nexport const stateIncorporationOptions = [\n    {\n        value: 'California',\n        label: 'California',\n    },\n    { value: 'Texas', label: 'Texas' },\n];\n\nexport const textIdOptions = [\n    {\n        value: 'ein',\n        label: 'Employer Identification Number (EIN)',\n    },\n    { value: 'ssn', label: 'Social Security Number (SSN)' },\n];\n\nexport const businessCategoryOptions = [\n    { value: 'c_corp-publicly_traded', label: 'C_CORP - Publicly Traded' },\n    { value: 'goverment_organization', label: 'Government Organization' },\n    { value: 'non_profit', label: 'Non Profit' },\n    { value: 'tax_exempt', label: 'Tax Exempt' },\n];\n\nexport const countryOptions = [\n    {\n        value: 'us',\n        label: 'United States',\n    },\n];\n\nexport const identityOptions = [\n    {\n        value: 'dl',\n        label: 'Driver’s License',\n    },\n    { value: 'passport', label: 'Passport' },\n    { value: 'reg_card', label: 'Alien Registration Card' },\n];\n\nexport const cityOptions = [\n    {\n        value: 'nyc',\n        label: 'New York ',\n    },\n    { value: 'la', label: 'Los Angeles' },\n];\n\nexport const categoryStyle = {\n    control: (styles) => {\n        return {\n            ...styles,\n            boxShadow: 'none',\n            minHeight: '40px',\n            '&:hover': {\n                boxShadow: 'none',\n            },\n        };\n    },\n    container: (style) => {\n        return {\n            ...style,\n            marginTop: '5px',\n            marginRight: '1px',\n        };\n    },\n};\n\nexport const accountTypeOption = [\n    { value: 'checking', label: 'Checking' },\n    {\n        value: 'saving',\n        label: 'Savings',\n    },\n];\n\nexport const accountRoleOption = [\n    { value: 'business', label: 'Business' },\n    {\n        value: 'personal',\n        label: 'Personal',\n    },\n];\n"],"names":["businessCategoryOptions","value","label","stateIncorporationOptions","deliveryTimeOptions","merchantOptions","salesOptions","defaultValues","state_of_incorporation","average_delivery_time","merchant_category_code","sales_method","categoryStyle","control","styles","_objectSpread","boxShadow","minHeight","container","style","marginTop","marginRight","BusinessDetails","_ref","_errors$legal_name","_errors$doing_busines","_errors$store_website","_errors$email","_errors$business_cate","_errors$ein","_errors$state_of_inco","_errors$date_of_incor","_errors$prior_bankrup","_errors$dateOfDischar","_errors$average_sales","_errors$average_purch","_errors$average_deliv","_errors$merchant_cate","_errors$sales_method","_errors$product_descr","isEdited","setStartingTab","handleChangeTab","setIsEdited","businessDetails","formData","useSelector","selectBusinessDetails","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","incorporationDate","setIncorporationDate","_useState3","_useState4","dischargeDate","setDischargeDate","_useForm","useForm","resolver","yupResolver","BusinessDetailsValidationSchema","register","handleSubmit","reset","setValue","watch","setError","clearErrors","errors","formState","useEffect","Object","keys","length","forEach","field","businessCategoryWatch","prior_bankruptcy","_jsx","_Fragment","children","_jsxs","className","onSubmit","data","setBusinessDetails","LinkMod","to","tAndCDoc","target","htmlFor","type","name","placeholder","required","legal_name","message","doing_business_as","store_website","email","Controller","render","_ref2","Select","classNamePrefix","components","IndicatorSeparator","theme","colors","primary25","primary","options","business_category","id","onChange","event","rawValue","replace","formattedValues","concat","slice","blur","handleEINChange","ein","_ref3","_ref4","DatePicker","closeOnScroll","maxDate","Date","customInput","ExampleCustomInput","placeholderText","selected","date","isoDate","toISOString","formatedDate","moment","format","handleDateChange","dateFormat","showPopperArrow","date_of_incorporation","_ref5","handleDateOfDischargeChange","dateOfDischarge","average_sales_volume","average_purchase","_ref6","_ref7","_ref8","rows","cols","product_description","onClick","src","GpArrowWhiteIcon","yup","shape","max","test","business","this","parent","textIdType","when","is","businessCategory","then","nullable","ssn","BusinessRepresentativeValidationSchema","owner_first_name","owner_last_name","owner_phone","owner_dob","countryAddress","state","address_line_1","address_line_2","city","zip","secondary_identification_type","identification_state_of_issuance","identification_id","BankDetailsValidationSchema","account_holder_name","account_type","purpose","account_number","routing_number","SummaryValidationSchema","confirmation","oneOf","tnc","shippingValidationSchema","address1","daystofulfill","statelist","country","shippingfee","incrementalfee","brandProfileValidationSchema","company_name","company_email_address","company_phone_number","store_name","brand_categories","min","brand_values","brand_story","brand_promo","forwardRef","ref"],"sourceRoot":""}