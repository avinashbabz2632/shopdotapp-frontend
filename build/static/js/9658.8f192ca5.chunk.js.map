{"version":3,"file":"static/js/9658.8f192ca5.chunk.js","mappings":"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","sources":["pages/Brand/images/gp-arrow-white.svg","pages/Brand/Settings/Paid/BusinessRepresentative.js","pages/Brand/Settings/Paid/ValidationSchema.js","utils/utils.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGpArrowWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 17,\n    height: 16,\n    viewBox: \"0 0 17 16\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5007 3.33301L9.56065 4.27301L12.614 7.33301H1.83398V8.66634H12.614L9.55398 11.7263L10.5007 12.6663L15.1673 7.99967L10.5007 3.33301Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGpArrowWhite);\nexport default __webpack_public_path__ + \"static/media/gp-arrow-white.8b53ad79358d34b6f5ed90925a4b16bb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { useForm, useWatch, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GpArrowWhiteIcon from '../../images/gp-arrow-white.svg';\nimport { setRepresentativeDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSlice';\nimport { selectRepresentativeDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport { BusinessRepresentativeValidationSchema } from './ValidationSchema';\nimport { ExampleCustomInput } from '../../../../utils/utils';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nconst countryOptions = [\n  {\n    value: 'US',\n    label: 'United States',\n  },\n  { value: 'CA', label: 'Canada' },\n];\n\nconst stateOptions = [\n  {\n    value: 'AL',\n    label: 'Alaska',\n  },\n  { value: 'NY', label: 'New York' },\n];\n\nconst countryOfIssurenceOptions = [\n  {\n    value: 'US',\n    label: 'United States           ',\n  },\n  { value: 'CA', label: 'Canada' },\n];\nconst identityOptions = [\n  {\n    value: 'DRIVER_LICENSE',\n    label: 'Driver’s License',\n  },\n  { value: 'PASSPORT', label: 'Passport' },\n  { value: 'ALIEN_REGISTRATION_CARD', label: 'Alien Registration Card' },\n];\n\nconst categoryStyle = {\n  control: (styles) => {\n    return {\n      ...styles,\n      boxShadow: 'none',\n      minHeight: '40px',\n      '&:hover': {\n        boxShadow: 'none',\n      },\n    };\n  },\n  container: (style) => {\n    return {\n      ...style,\n      marginTop: '5xp',\n      marginRight: '1px',\n    };\n  },\n};\n\nconst defaultValues = {\n  state: stateOptions[0],\n  citySelect: stateOptions[0],\n  countryAddress: countryOptions[0],\n};\n\nexport default function BusinessRepresentative({\n  setIsEdited,\n  isEdited,\n  handleChangeTab,\n}) {\n  const personalDetails = useSelector(selectRepresentativeDetails);\n  const [dateOfBirth, setDateOfBirth] = useState(null);\n\n  const dispatch = useDispatch();\n  const {\n    control,\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    watch,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(BusinessRepresentativeValidationSchema),\n    defaultValues,\n  });\n\n  useEffect(() => {\n    const isFormValuePresent = Object.keys(personalDetails).length;\n    if (isFormValuePresent) {\n      const fields = [\n        'owner_first_name',\n        'owner_last_name',\n        'owner_phone',\n        'ssn',\n        'owner_dob',\n        'socialSecurityNumber',\n        'state',\n        'address_line_1',\n        'address_line_2',\n        'city',\n        'citySelect',\n        'zip',\n        'identification_state_of_issuance',\n        'identification_id',\n        'secondary_identification_type',\n        'usCitizen',\n      ];\n\n      fields.forEach((field) => setValue(field, personalDetails[field]));\n    }\n\n    return () => {\n      setIsEdited(false);\n    };\n  }, [isEdited]);\n\n  const handlePhoneChange = (event) => {\n    const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n    let formattedValue = '';\n    if (rawValue.length < 4) {\n      formattedValue = rawValue;\n    } else if (rawValue.length < 7) {\n      formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n    } else {\n      formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(\n        3,\n        6\n      )}-${rawValue.slice(6, 10)}`;\n    }\n    setValue('owner_phone', formattedValue);\n    if (formattedValue === '000-000-0000') {\n      setError('owner_phone', {\n        type: 'custom',\n        message: 'Should be in XXX-XXX-XXXX format and Cannot be all zeroes.',\n      });\n    } else if (formattedValue.length < 12) {\n      setError('owner_phone', {\n        type: 'custom',\n        message: 'Phone should be 10 digits.',\n      });\n    } else {\n      clearErrors('owner_phone');\n      event.target.blur();\n    }\n  };\n\n  const handleSSNChange = (event) => {\n    const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n    let formattedValues = '';\n    if (rawValue.length < 4) {\n      formattedValues = rawValue;\n    } else if (rawValue.length < 6) {\n      formattedValues = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n    } else {\n      formattedValues = `${rawValue.slice(0, 3)}-${rawValue.slice(\n        3,\n        5\n      )}-${rawValue.slice(5, 9)}`;\n    }\n    setValue('ssn', formattedValues);\n    if (formattedValues.length < 3) {\n      setError('ssn', {\n        type: 'custom',\n        message: 'should be in XXX-XX-XXXX format.',\n      });\n    } else if (formattedValues.length < 11) {\n      setError('ssn', {\n        type: 'custom',\n        message: 'SSN should be 9 digit',\n      });\n    } else {\n      clearErrors('ssn');\n      event.target.blur();\n    }\n  };\n\n  const handleDateOfBirthChange = (date, event) => {\n    if (date) {\n      const isoDate = new Date(date).toISOString();\n      const formatedDate = moment(isoDate).format('MM/DD/YYYY');\n      setDateOfBirth(date);\n      setValue('owner_dob', formatedDate);\n      clearErrors('owner_dob');\n    } else {\n      setValue('owner_dob', null);\n      setError('owner_dob', {\n        type: 'custom',\n        message: 'Date of birth is required',\n      });\n    }\n    event.target.blur();\n  };\n\n  const onSubmit = (data) => {\n    dispatch(setRepresentativeDetails(data));\n    reset();\n    handleChangeTab('3');\n  };\n\n  const businessCategoryWatch = watch('secondary_identification_type');\n\n  return (\n    <form className=\"gp-right\" onSubmit={handleSubmit(onSubmit)}>\n      <h3 className=\"heading\">Business Representative</h3>\n      <div className=\"form-area\">\n        <div className=\"category-form-input\">\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              Legal name of person&nbsp;\n              <span className=\"asterisk-red\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-0\"\n              id=\"\"\n              name=\"owner_first_name\"\n              placeholder=\"First name\"\n              {...register('owner_first_name', { required: true })}\n            />\n            {errors.owner_first_name && (\n              <span className=\"error-text\">\n                {errors.owner_first_name?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-4\">\n            <label htmlFor=\"\" className=\"form-label\">\n              &nbsp;\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-0\"\n              id=\"\"\n              name=\"owner_last_name\"\n              placeholder=\"Last name\"\n              {...register('owner_last_name', { required: true })}\n            />\n            {errors.owner_last_name && (\n              <span className=\"error-text\">\n                {errors.owner_last_name?.message}\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Phone number&nbsp;\n            <span className=\"asterisk-red\">*</span>\n          </label>\n          <input\n            type=\"tel\"\n            className=\"form-control mb-0\"\n            name=\"owner_phone\"\n            placeholder=\"(123) 456-7899\"\n            {...register('owner_phone', { required: true })}\n            onChange={handlePhoneChange}\n          />\n          {errors.owner_phone && (\n            <span className=\"error-text\">{errors.owner_phone?.message}</span>\n          )}\n        </div>\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            SSN&nbsp;<span className=\"asterisk-red\">*</span>\n          </label>\n          <input\n            type=\"tel\"\n            placeholder=\"123-44-5678\"\n            className=\"form-control mb-0\"\n            name=\"ssn\"\n            {...register('ssn', { required: true })}\n            onChange={handleSSNChange}\n          />\n          {errors.ssn && (\n            <span className=\"error-text\">{errors.ssn?.message}</span>\n          )}\n        </div>\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Date of birth&nbsp;\n            <span className=\"asterisk-red\">*</span>\n          </label>\n          <Controller\n            name=\"owner_dob\"\n            control={control}\n            render={({ field }) => (\n              <>\n                <DatePicker\n                  {...field}\n                  closeOnScroll\n                  maxDate={new Date()}\n                  customInput={<ExampleCustomInput />}\n                  placeholderText=\"MM/DD/YYYY\"\n                  selected={dateOfBirth}\n                  showYearDropdown\n                  yearDropdownItemNumber={100}\n                  scrollableYearDropdown\n                  onChange={(date, event) => {\n                    setDateOfBirth(date);\n                    handleDateOfBirthChange(date, event);\n                  }}\n                  dateFormat=\"MM-dd-yyyy\"\n                  // showPopperArrow={false}\n                />\n              </>\n            )}\n          />\n\n          {errors.owner_dob && (\n            <span className=\"error-text\">{errors.owner_dob?.message}</span>\n          )}\n        </div>\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Address line 1 <span className=\"asterisk-red\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control mb-0\"\n            name=\"address_line_1\"\n            placeholder=\"\"\n            {...register('address_line_1', { required: true })}\n          />\n          {errors.address_line_1 && (\n            <span className=\"error-text\">{errors.address_line_1?.message}</span>\n          )}\n        </div>\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Address line 2 <span className=\"asterisk-red\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control mb-0\"\n            name=\"address_line_2\"\n            placeholder=\"\"\n            {...register('address_line_2', { required: true })}\n          />\n          {errors.address_line_2 && (\n            <span className=\"error-text\">{errors.address_line_2?.message}</span>\n          )}\n        </div>\n        <div className=\"category-form-input\">\n          <div className=\"form-input mb-4\">\n            <label className=\"form-label\">\n              Country <span className=\"asterisk-red\">*</span>\n            </label>\n            <Controller\n              name=\"countryAddress\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  styles={categoryStyle}\n                  components={{\n                    IndicatorSeparator: () => null,\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#fbf5f0',\n                      primary: '#bd6f34',\n                    },\n                  })}\n                  options={countryOptions}\n                />\n              )}\n            />\n            {errors.countryAddress && (\n              <span className=\"error-text\">\n                {errors.countryAddress?.message}\n              </span>\n            )}\n          </div>\n          <div className=\"form-input mb-2\">\n            <label className=\"form-label\">\n              State <span className=\"asterisk-red\">*</span>\n            </label>\n            <Controller\n              name=\"state\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n                  styles={categoryStyle}\n                  components={{\n                    IndicatorSeparator: () => null,\n                  }}\n                  theme={(theme) => ({\n                    ...theme,\n                    colors: {\n                      ...theme.colors,\n                      primary25: '#fbf5f0',\n                      primary: '#bd6f34',\n                    },\n                  })}\n                  options={stateOptions}\n                />\n              )}\n            />\n            {errors.state && (\n              <span className=\"error-text\">{errors.state?.message}</span>\n            )}\n          </div>\n        </div>\n        <div className=\"category-form-input\">\n          <div className=\"form-input mb-2\">\n            <label htmlFor=\"\" className=\"form-label\">\n              City <span className=\"asterisk-red\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-2 mt-0\"\n              name=\"city\"\n              {...register('city', { required: true })}\n            />\n            {errors.city && (\n              <span className=\"error-text\">{errors.city?.message}</span>\n            )}\n          </div>\n          <div className=\"form-input mb-2\">\n            <label htmlFor=\"\" className=\"form-label\">\n              ZIP <span className=\"asterisk-red\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control mb-2 mt-0\"\n              name=\"zip\"\n              {...register('zip', { required: true })}\n            />\n            {errors.zip && (\n              <span className=\"error-text\">{errors.zip?.message}</span>\n            )}\n          </div>\n        </div>\n        <div className=\"form-input mb-4 secondary_identification\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Secondary identification&nbsp;\n            <span className=\"asterisk-red\">*</span>\n          </label>\n          <Controller\n            name=\"secondary_identification_type\"\n            control={control}\n            render={({ field }) => (\n              <Select\n                {...field}\n                placeholder=\"Identification type\"\n                className=\"basic-single\"\n                classNamePrefix=\"select\"\n                styles={categoryStyle}\n                components={{ IndicatorSeparator: () => null }}\n                theme={(theme) => ({\n                  ...theme,\n                  colors: {\n                    ...theme.colors,\n                    primary25: '#fbf5f0',\n                    primary: '#bd6f34',\n                  },\n                })}\n                options={identityOptions}\n              />\n            )}\n          />\n          {errors.secondary_identification_type && (\n            <span className=\"error-text\">\n              {errors.secondary_identification_type?.message}\n            </span>\n          )}\n\n          {businessCategoryWatch?.value === 'DRIVER_LICENSE' && (\n            <div className=\"form-input mb-2 state_issuance mt-2\">\n              <Controller\n                name=\"identification_state_of_issuance\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"basic-single\"\n                    classNamePrefix=\"select\"\n                    styles={categoryStyle}\n                    components={{\n                      IndicatorSeparator: () => null,\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      colors: {\n                        ...theme.colors,\n                        primary25: '#fbf5f0',\n                        primary: '#bd6f34',\n                      },\n                    })}\n                    options={stateOptions}\n                  />\n                )}\n              />\n              {errors.identification_state_of_issuance && (\n                <span className=\"error-text\">\n                  {errors.identification_state_of_issuance?.message}\n                </span>\n              )}\n            </div>\n          )}\n\n          {(businessCategoryWatch?.value === 'PASSPORT' ||\n            businessCategoryWatch?.value === 'ALIEN_REGISTRATION_CARD') && (\n            <div className=\"form-input mb-2 country_issuance mt-4\">\n              <label htmlFor=\"\" className=\"form-label\">\n                Country of issuance\n                <span className=\"asterisk-red\">*</span>\n              </label>\n              <Controller\n                name=\"identification_state_of_issuance\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"basic-single\"\n                    classNamePrefix=\"select\"\n                    styles={categoryStyle}\n                    components={{\n                      IndicatorSeparator: () => null,\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      colors: {\n                        ...theme.colors,\n                        primary25: '#fbf5f0',\n                        primary: '#bd6f34',\n                      },\n                    })}\n                    options={countryOfIssurenceOptions}\n                  />\n                )}\n              />\n              {errors.identification_state_of_issuance && (\n                <span className=\"error-text\">\n                  {errors.identification_state_of_issuance?.message}\n                </span>\n              )}\n            </div>\n          )}\n\n          <input\n            type=\"text\"\n            className=\"form-control mb-2\"\n            name=\"identification_id\"\n            placeholder=\"ID Number\"\n            {...register('identification_id', { required: true })}\n          />\n          {errors.identification_id && (\n            <span className=\"error-text\">\n              {errors.identification_id?.message}\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"form-input return_select-item mb-4 radio-row\">\n        <p className=\"mb-0\">\n          U.S. citizen <span className=\"asterisk-red\">*</span>\n        </p>\n        <div className=\"mt-2 radio-flex\">\n          <label className=\"radiobox\">\n            <input\n              type=\"radio\"\n              id=\"citizen\"\n              name=\"usCitizen\"\n              control={control}\n              value=\"yes\"\n              {...register('usCitizen', {\n                required: true,\n              })}\n            />\n            <div className=\"radiobox-text\">\n              <span>Yes</span>\n            </div>\n          </label>\n          <label className=\"radiobox\">\n            <input\n              type=\"radio\"\n              name=\"usCitizen\"\n              id=\"citizen-one\"\n              control={control}\n              defaultChecked\n              value=\"no\"\n              {...register('usCitizen', {\n                required: true,\n              })}\n            />\n            <div className=\"radiobox-text\">\n              <span>No</span>\n            </div>\n          </label>\n        </div>\n      </div>\n      <div className=\"form-area\">\n        <div className=\"form-input form-submit\">\n          <button\n            className=\"button button-grey cancel\"\n            onClick={() => handleChangeTab('1')}\n          >\n            Back\n          </button>\n          <button className=\"button summary-icon\">\n            Save and Next\n            <img src={GpArrowWhiteIcon} />\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nBusinessRepresentative.propTypes = {\n  isEdited: PropTypes.String,\n  handleChangeTab: PropTypes.func,\n  setIsEdited: PropTypes.func,\n};\n","import * as yup from 'yup';\n\nexport const BusinessDetailsValidationSchema = yup.object().shape({\n  legal_name: yup.string().required('Legal Business name is required.'),\n  email: yup\n    .string()\n    .email('Must be a valid email.')\n    .max(255)\n    .required('Contact email is required.'),\n  store_website: yup.string().required('Must be a valid website.'),\n  doing_business_as: yup\n    .string()\n    .required('Doing Business is required.')\n    .test(\n      'legal_name',\n      'Doing Business is different than the legal name',\n      function (business) {\n        return business ? business !== this.parent.legal_name : true;\n      }\n    ),\n  business_category: yup.object().required('Business Category is required.'),\n  textIdType: yup.object().when('businessCategory', {\n    is: (businessCategory) => businessCategory?.value === 'signle_member_llc',\n    then: yup.object().nullable().required('TextID is required'),\n  }),\n  ein: yup.string().required('Employer Identification Number is required'),\n  // .when('businessCategory', {\n  //     is: (businessCategory) =>\n  //         businessCategory?.value !== 'solo_proprietor',\n  //     then: yup\n  //         .string()\n  //         .required('Employer Identification Number is required'),\n  // }),\n  ssn: yup\n    .string()\n    .when('textIdType', {\n      is: (textIdType) => textIdType?.value === 'ssn',\n      then: yup.string().required('Social Security Number is required.'),\n    })\n    .when('businessCategory', {\n      is: (businessCategory) => businessCategory?.value === 'solo_proprietor',\n      then: yup.string().required('Social Security Number is required.'),\n    }),\n  state_of_incorporation: yup\n    .object()\n    .shape({\n      label: yup.string().required('State of Incorporation is required.'),\n      value: yup.string().required('State of Incorporation is required.'),\n    })\n    .nullable()\n    .required('State of Incorporation is required.'),\n  date_of_incorporation: yup\n    .string()\n    .required('Date of Incorporation is required.'),\n  prior_bankruptcy: yup\n    .string()\n    .nullable()\n    .required('Prior Bankruptcy is required.'),\n  dateOfDischarge: yup.string().when('prior_bankruptcy', {\n    is: (prior_bankruptcy) => prior_bankruptcy === true,\n    then: yup.string().required('Date of Discharge is required.'),\n  }),\n  average_sales_volume: yup\n    .string()\n    .required('Estimated Average Sales Volume on ShopDot is required.'),\n  average_purchase: yup\n    .string()\n    .required('Estimated Average Sale Price on ShopDot is required.'),\n  average_delivery_time: yup\n    .object()\n    .shape({\n      label: yup.string().required('Average Delivery Time is required.'),\n      value: yup.string().required('Average Delivery Time is required.'),\n    })\n    .nullable()\n    .required('Average Delivery Time is required.'),\n\n  merchant_category_code: yup\n    .object()\n    .shape({\n      label: yup.string().required('Merchant Category Code is required.'),\n      value: yup.string().required('Merchant Category Code is required.'),\n    })\n    .nullable()\n    .required('Merchant Category Code is required.'),\n\n  sales_method: yup\n    .object()\n    .shape({\n      label: yup.string().required('Sales Method is required.'),\n      value: yup.string().required('Sales Method is required.'),\n    })\n    .nullable()\n    .required('Sales Method is required.'),\n  product_description: yup\n    .string()\n    .required('Product Description is required.'),\n});\n\nexport const BusinessRepresentativeValidationSchema = yup.object().shape({\n  owner_first_name: yup\n    .string()\n    .required('Legal Person first name is required.'),\n  owner_last_name: yup.string().required('Legal Person last name is required.'),\n  owner_phone: yup.string().required('Phone number is required.'),\n  // ssn: yup.string().required('SSN is required.'),\n  owner_dob: yup.string().required('Date of birth is required.'),\n  countryAddress: yup\n    .object()\n    .shape({\n      label: yup.string().required('Country is require.'),\n      value: yup.string().required('Country is require.'),\n    })\n    .nullable()\n    .required('Address State is require.'),\n  state: yup\n    .object()\n    .shape({\n      label: yup.string().required('Address State is require.'),\n      value: yup.string().required('Address State is require.'),\n    })\n    .nullable()\n    .required('Address State is require.'),\n  address_line_1: yup.string().required('Address line 1 is required.'),\n  address_line_2: yup.string(),\n  city: yup.string().required('City is required.'),\n  // citySelect: yup\n  //   .object()\n  //   .shape({\n  //     label: yup.string().required('City is required.'),\n  //     value: yup.string().required('City is required.'),\n  //   })\n  //   .nullable()\n  //   .required('City is required'),\n  zip: yup.string().required('Zip-code is required.'),\n\n  secondary_identification_type: yup\n    .object()\n    .nullable()\n    .required('Secondary Identification is required.'),\n\n  identification_state_of_issuance: yup\n    .object()\n    .when('secondary_identification_type', {\n      is: (secondary_identification_type) =>\n        secondary_identification_type?.value !== 'dl',\n      then: yup\n        .object()\n        .nullable()\n        .required('Country of issuance is required.'),\n    }),\n  // identification_state_of_issuance: yup\n  //   .object()\n  //   .when('identification_state_of_issuance', {\n  //     is: (identification_state_of_issuance) =>\n  //       identification_state_of_issuance?.value === 'dl',\n  //     then: yup.object().nullable().required('State of issuance is required.'),\n  //   }),\n\n  identification_id: yup.string().required('Id number is required.'),\n});\n\nexport const BankDetailsValidationSchema = yup.object().shape({\n  account_holder_name: yup\n    .string()\n    .required('Bank Account holder name is required.'),\n  account_type: yup\n    .object()\n    .nullable()\n    .required('Bank Account type is required.'),\n  purpose: yup.object().nullable().required('Purpose is required.'),\n  account_number: yup.string().max(12).required('Account number is required.'),\n  routing_number: yup.string().required('Routing number is require'),\n});\n\nexport const SummaryValidationSchema = yup.object().shape({\n  confirmation: yup\n    .boolean()\n    .oneOf([true], 'You need to accept the confirm details'),\n  tnc: yup\n    .boolean()\n    .oneOf([true], 'You need to accept the terms and conditions'),\n});\n\nexport const shippingValidationSchema = yup.object().shape({\n  address1: yup.string().required('Address 1 is required.'),\n  daystofulfill: yup\n    .object()\n    .nullable()\n    .required('Days to fultill  is required.'),\n  statelist: yup\n    .object()\n    .shape({\n      label: yup.string().required('State Category is required.'),\n      value: yup.string().required('State Category is required.'),\n    })\n    .nullable()\n    .required('State Category is required.'),\n  country: yup.string().required('Country is required.'),\n  city: yup.string().required('City is required.'),\n  shippingfee: yup.string().required('Shipping fee is require.'),\n  incrementalfee: yup.string().required('Incremental fee is require.'),\n  zip: yup.string().required('Zip-code is required.'),\n});\n\nexport const brandProfileValidationSchema = yup.object().shape({\n  company_name: yup.string().required('Company name is required.'),\n  company_email_address: yup\n    .string()\n    .email('Must be a valid email.')\n    .max(255)\n    .required('Contact email is required.'),\n  company_phone_number: yup\n    .string()\n    .required('Contact phone number is required.'),\n  store_name: yup.string().required('Brand name is required.'),\n  store_website: yup.string().required('Brand website is required.'),\n  brand_categories: yup\n    .array()\n    .min(1, 'At least 1 category required')\n    .max(3, 'Select max 3 category.')\n    .nullable()\n    .required('Select max 3 category.'),\n  brand_values: yup\n    .array()\n    .min(1, 'At least 1 value required')\n    .max(3, 'Select max 3 values.')\n    .nullable()\n    .required('Select max 3 values.'),\n  brand_story: yup.string().required('About the brand is required.'),\n  brand_promo: yup.string().required('Please enter valid website.'),\n});\n","/* eslint-disable react/prop-types */\n\nimport React, { forwardRef } from 'react';\n\nexport const ExampleCustomInput = forwardRef(\n    ({ value, onClick, onChange }, ref) => (\n        <input\n            value={value}\n            className=\"example-custom-input form-control mb-0\"\n            onClick={onClick}\n            onChange={onChange}\n            placeholder=\"MM-DD-YYYY\"\n            ref={ref}\n        ></input>\n    )\n);\n\nexport const transactionTypes = [\n    { value: 'All', label: 'All' },\n    { value: 'Order', label: 'Order' },\n    { value: 'Payout', label: 'Payout' },\n    { value: 'Fees', label: 'Fees' },\n    { value: 'Chargeback In', label: 'Chargeback In' },\n    { value: 'Chargeback Out', label: 'Chargeback Out' },\n    { value: 'Refund In', label: 'Refund In' },\n    { value: 'Refund Out', label: 'Refund Out' },\n];\nexport const tableData = [\n    {\n        id: 1,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 2,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 3,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 4,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 5,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 6,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 7,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 8,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 9,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 10,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Order',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 11,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 12,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 13,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 14,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Chargeback In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 15,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/02/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 16,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/03/2022',\n        transactionType: 'Refund In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 17,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/04/2022',\n        transactionType: 'Chargeback In',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 18,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/05/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 19,\n        retailerName: 'Retailer 1',\n        settlementDate: '17/06/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 20,\n        retailerName: 'Retailer 1',\n        settlementDate: '30/09/2022',\n        transactionType: 'Payout',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n];\nexport const payoutHistoryReport = [\n    {\n        id: 1,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 2,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 3,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n    {\n        id: 3,\n        retailerName: 'Retailer 1',\n        settlementDate: '23/09/2022',\n        transactionType: 'Refund',\n        referenceID: 'PG12346',\n        productCost: 90.0,\n        shipping: 10.0,\n        fees: 5.9,\n        total: 99.0,\n        account: 'Citibank-1235',\n    },\n];\n\nexport const salesOptions = [\n    {\n        value: '0',\n        label: '100% Digital Transaction',\n    },\n];\n\nexport const merchantOptions = [\n    {\n        value: '5021',\n        label: '5021 (Commercial Furniture)',\n    },\n    {\n        value: '5044',\n        label: '5044 (OFFC, Photographic, Photocopy, Microfilm EQ)',\n    },\n    { value: '5045', label: '5045 (Computers, Peripheral Equip, Software)' },\n    {\n        value: '5046',\n        label: '5046 (Commercial Equipment Not Elsewhere Classified)',\n    },\n    {\n        value: '5047',\n        label: '5047 (Lab/Med/Dental/Ophthalmic Hosp Eq &amp; Supplies)',\n    },\n    { value: '5065', label: '5065 (Electrical Parts and Equipment)' },\n    { value: '5072', label: '5072 (Hardware Equipment and Supplies)' },\n    {\n        value: '5094',\n        label: '5094 (Precious Stones, Metals, Watches, Jewelry)',\n    },\n    { value: '5099', label: '5099 (Durable Goods Not Elsewhere Classified)' },\n    {\n        value: '5111',\n        label: '5111 (Stationary, Office Supplies, Printing, WR PPR)',\n    },\n    {\n        value: '5122',\n        label: '5122 (Drugs, Drug Properties, Druggist Sundries)',\n    },\n    {\n        value: '5131',\n        label: '5131 (Piece Goods, Notions, and Other Dry Goods)',\n    },\n    {\n        value: '5137',\n        label: '5137 (Men’s, Women’s, Children’s Uniforms, COMM CLTH)',\n    },\n    { value: '5139', label: '5139 (Commercial Footwear)' },\n    { value: '5192', label: '5192 (Books, Periodicals &amp; Newspapers)' },\n    { value: '5193', label: '5193 (Florist Supplies, Nursery STK, Flowers)' },\n    {\n        value: '5199',\n        label: '5199 (Nondurable Goods Not Elsewhere Classified)',\n    },\n];\n\nexport const deliveryTimeOptions = [\n    {\n        value: 'week',\n        label: 'Week',\n    },\n    { value: '2weeks', label: '2 Weeks' },\n    { value: 'month', label: 'Month' },\n    { value: '2month', label: '2 Months' },\n    { value: '2monthplus', label: 'Over 2 Months' },\n];\n\nexport const stateIncorporationOptions = [\n    {\n        value: 'California',\n        label: 'California',\n    },\n    { value: 'Texas', label: 'Texas' },\n];\n\nexport const textIdOptions = [\n    {\n        value: 'ein',\n        label: 'Employer Identification Number (EIN)',\n    },\n    { value: 'ssn', label: 'Social Security Number (SSN)' },\n];\n\nexport const businessCategoryOptions = [\n    { value: 'c_corp-publicly_traded', label: 'C_CORP - Publicly Traded' },\n    { value: 'goverment_organization', label: 'Government Organization' },\n    { value: 'non_profit', label: 'Non Profit' },\n    { value: 'tax_exempt', label: 'Tax Exempt' },\n];\n\nexport const countryOptions = [\n    {\n        value: 'us',\n        label: 'United States',\n    },\n];\n\nexport const identityOptions = [\n    {\n        value: 'dl',\n        label: 'Driver’s License',\n    },\n    { value: 'passport', label: 'Passport' },\n    { value: 'reg_card', label: 'Alien Registration Card' },\n];\n\nexport const cityOptions = [\n    {\n        value: 'nyc',\n        label: 'New York ',\n    },\n    { value: 'la', label: 'Los Angeles' },\n];\n\nexport const categoryStyle = {\n    control: (styles) => {\n        return {\n            ...styles,\n            boxShadow: 'none',\n            minHeight: '40px',\n            '&:hover': {\n                boxShadow: 'none',\n            },\n        };\n    },\n    container: (style) => {\n        return {\n            ...style,\n            marginTop: '5px',\n            marginRight: '1px',\n        };\n    },\n};\n\nexport const accountTypeOption = [\n    { value: 'checking', label: 'Checking' },\n    {\n        value: 'saving',\n        label: 'Savings',\n    },\n];\n\nexport const accountRoleOption = [\n    { value: 'business', label: 'Business' },\n    {\n        value: 'personal',\n        label: 'Personal',\n    },\n];\n"],"names":["countryOptions","value","label","stateOptions","countryOfIssurenceOptions","identityOptions","categoryStyle","control","styles","_objectSpread","boxShadow","minHeight","container","style","marginTop","marginRight","defaultValues","state","citySelect","countryAddress","BusinessRepresentative","_ref","_errors$owner_first_n","_errors$owner_last_na","_errors$owner_phone","_errors$ssn","_errors$owner_dob","_errors$address_line_","_errors$address_line_2","_errors$countryAddres","_errors$state","_errors$city","_errors$zip","_errors$secondary_ide","_errors$identificatio","_errors$identificatio2","_errors$identificatio3","setIsEdited","isEdited","handleChangeTab","personalDetails","useSelector","selectRepresentativeDetails","_useState","useState","_useState2","_slicedToArray","dateOfBirth","setDateOfBirth","dispatch","useDispatch","_useForm","useForm","mode","resolver","yupResolver","BusinessRepresentativeValidationSchema","register","handleSubmit","reset","setValue","watch","setError","clearErrors","errors","formState","useEffect","Object","keys","length","forEach","field","businessCategoryWatch","_jsxs","className","onSubmit","data","setRepresentativeDetails","children","_jsx","htmlFor","type","id","name","placeholder","required","owner_first_name","message","owner_last_name","onChange","event","rawValue","target","replace","formattedValue","concat","slice","blur","owner_phone","formattedValues","ssn","Controller","render","_ref2","_Fragment","DatePicker","closeOnScroll","maxDate","Date","customInput","ExampleCustomInput","placeholderText","selected","showYearDropdown","yearDropdownItemNumber","scrollableYearDropdown","date","isoDate","toISOString","formatedDate","moment","format","handleDateOfBirthChange","dateFormat","owner_dob","address_line_1","address_line_2","_ref3","Select","classNamePrefix","components","IndicatorSeparator","theme","colors","primary25","primary","options","_ref4","city","zip","_ref5","secondary_identification_type","_ref6","identification_state_of_issuance","_ref7","identification_id","defaultChecked","onClick","src","GpArrowWhiteIcon","BusinessDetailsValidationSchema","yup","shape","legal_name","email","max","store_website","doing_business_as","test","business","this","parent","business_category","textIdType","when","is","businessCategory","then","nullable","ein","state_of_incorporation","date_of_incorporation","prior_bankruptcy","dateOfDischarge","average_sales_volume","average_purchase","average_delivery_time","merchant_category_code","sales_method","product_description","BankDetailsValidationSchema","account_holder_name","account_type","purpose","account_number","routing_number","SummaryValidationSchema","confirmation","oneOf","tnc","shippingValidationSchema","address1","daystofulfill","statelist","country","shippingfee","incrementalfee","brandProfileValidationSchema","company_name","company_email_address","company_phone_number","store_name","brand_categories","min","brand_values","brand_story","brand_promo","forwardRef","ref"],"sourceRoot":""}