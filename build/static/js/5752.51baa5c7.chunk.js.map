{"version":3,"file":"static/js/5752.51baa5c7.chunk.js","mappings":"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","sources":["pages/Brand/images/icons/icon-edit.svg","actions/userActions.js","pages/Brand/Settings/Paid/ValidationSchema.js","pages/Brand/Settings/Profile/index.js"],"sourcesContent":["var _rect, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    rx: 4,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.8311 9.35111L14.6489 10.1689L6.59556 18.2222H5.77778V17.4044L13.8311 9.35111ZM17.0311 4C16.8089 4 16.5778 4.08889 16.4089 4.25778L14.7822 5.88444L18.1156 9.21778L19.7422 7.59111C20.0889 7.24444 20.0889 6.68444 19.7422 6.33778L17.6622 4.25778C17.4844 4.08 17.2622 4 17.0311 4ZM13.8311 6.83556L4 16.6667V20H7.33333L17.1644 10.1689L13.8311 6.83556Z\",\n    fill: \"#283B49\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconEdit);\nexport default __webpack_public_path__ + \"static/media/icon-edit.66db4866fc239f5ff3f3b6abbb739e70.svg\";\nexport { ForwardRef as ReactComponent };","import axios from '../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as API_END_POINT from '../constants/api';\nimport { setNotificationData, setRoleUpdated } from '../redux/user/userSlice';\n\nexport function updateUserRoleAction(formData, navigate, platformName) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.USER_ROLE, formData);\n      if (response && response.data && response.data.code == 201) {\n        dispatch(setRoleUpdated());\n        if (formData.role === 'brand') {\n          dispatch(\n            addUserPlatformAction(\n              {\n                user_id: formData.user_id,\n                platform: platformName,\n              },\n              navigate\n            )\n          );\n        } else {\n          navigate('/retailer-onboarding');\n        }\n      } else {\n        toast.error('Something went worng');\n      }\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n    }\n  };\n}\n\nexport function addUserPlatformAction(formData, navigate) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.USER_PLATFORM, formData);\n      if (response && response.data && response.data.code == 201) {\n        navigate('/brand-onboarding');\n      } else {\n        navigate('/personalized-not-supported', { state: formData.platform });\n      }\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n\nexport async function uploadImageAction(formData) {\n  try {\n    const response = await axios.post(API_END_POINT.UPLOAD_IMAGE, formData, {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    });\n    if (response && response.data && response.data.code == 200) {\n      return response.data.data;\n    } else {\n      toast.error('Something went worng');\n    }\n    return response;\n  } catch (err) {\n    toast.error(\n      err && err.response && err.response.data && err.response.data.errors\n        ? err.response.data.errors\n        : 'Something went worng'\n    );\n    throw err;\n  }\n}\n\nexport function updateNotificationAction(formData) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.NOTIFICATION, formData);\n      if (response && response.data && response.data.code == 200) {\n        toast.success(response.data?.message);\n        dispatch(getNotificationAction(formData.brand_id));\n      } else {\n        toast.error('Something went worng');\n      }\n      return response;\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n\nexport function getNotificationAction(brandId) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\n        `${API_END_POINT.NOTIFICATION}/${brandId}/`\n      );\n      if (response && response.data && response.data.code == 200) {\n        if (response.data.data) {\n          dispatch(setNotificationData(response.data.data));\n        }\n      } else {\n      }\n      return response;\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n","import * as yup from 'yup';\nimport { store } from '../../../../redux/store';\n\nexport const BusinessDetailsValidationSchema = yup.object().shape({\n    businessName: yup.string().required('Legal business name is required.'),\n    businessAs: yup\n        .string()\n        .required('Doing business is required.')\n        .test(\n            'businessname',\n            'doing business is different than the legal name',\n            function (business) {\n                return business ? business !== this.parent.businessName : true;\n            }\n        ),\n    website: yup\n        .string()\n        .url('Please enter a valid URL')\n        .required('Business website address is required.'),\n    businessEmail: yup\n        .string()\n        .email('Must be a valid email.')\n        .max(255)\n        .required('Business email address is required.'),\n    businessCategory: yup\n        .object()\n        .nullable()\n        .required('Business category is required.'),\n    textIdType: yup.object().when('businessCategory', {\n        is: (businessCategory) =>\n            businessCategory?.value === 'single_member_llc' ||\n            businessCategory?.value === 'sole_proprietor',\n        then: yup.object().nullable().required('TextID is required'),\n    }),\n    // employerIdentificationNumber: yup\n    //     .object()\n    //     .nullable()\n    //     .required('Employer identification number is required'),\n    // socialSecurityNumber: yup\n    //     .object()\n    //     .nullable()\n    //     .required('Social security number is required'),\n    // employerIdentificationNumber: yup.string().when('businessCategory', {\n    //     is: (businessCategory) =>\n    //         businessCategory?.value !== 'single_member_llc' ||\n    //         businessCategory?.value !== 'sole_proprietor',\n    //     then: yup\n    //         .string()\n    //         .required('Employer identification number is required'),\n    // }),\n    // socialSecurityNumber: yup\n    //     .string()\n    //     .when('textIdType', {\n    //         is: (textIdType) => textIdType?.value === 'ssn',\n    //         then: yup.string().required('Social security number is required'),\n    //     })\n    //     .when('businessCategory', {\n    //         is: (businessCategory) =>\n    //             businessCategory?.value === 'single_member_llc' ||\n    //             businessCategory?.value === 'sole_proprietor',\n    //         then: yup.string().required('Social security number is required'),\n    //     }),\n    phoneNumber: yup\n        .string()\n        .nullable()\n        .required('Phone number is required.')\n        .min(12, 'Phone should be 10 digits.'),\n    addressLine1: yup\n        .string()\n        .nullable()\n        .required('Address line 1 is required.'),\n    countryAddress: yup.object().nullable().required('Country is require.'),\n    stateAddress: yup.object().nullable().required('State is require.'),\n    city: yup.string().required('City is required.'),\n    zipcode: yup\n        .string()\n        .nullable()\n        .notOneOf(\n            ['00000'],\n            'Should be in XXXXX format.Cannot containt all zeroes.'\n        )\n        .min(5, 'Should be in XXXXX format.')\n        .max(5, 'Zip-code should be 5 digits.')\n        .required('Zip-code is required.'),\n    stateOfIncorportation: yup\n        .object()\n        .nullable()\n        .required('State of incorporation is required.'),\n    dateOfIncorportation: yup\n        .string()\n        .nullable()\n        .required('Date of incorporation is required.'),\n    bankruptcy: yup\n        .string()\n        .nullable()\n        .required('Prior bankruptcy is required.'),\n    dateOfDischarge: yup.string().when('bankruptcy', {\n        is: (bankruptcy) => bankruptcy === 'yes',\n        then: yup\n            .string()\n            .nullable()\n            .required('Date of discharge is required.'),\n    }),\n    averageSales: yup\n        .string()\n        .required('Estimated average sales volume on shopdot is required.'),\n    averageSalePrice: yup\n        .string()\n        .required('Estimated average sale price on shopdot is required.'),\n    averageDeliveryTime: yup\n        .object()\n        .nullable()\n        .required('Average delivery time is required.'),\n    merchantCategoryCode: yup\n        .object()\n        .nullable()\n        .required('Merchant category code is required.'),\n    salesMethod: yup.object().nullable().required('Sales method is required.'),\n    productionDescription: yup\n        .string()\n        .required('Product description is required.'),\n    // phone: yup\n    //     .string()\n    //     .matches(/^\\d{10}$/, 'Phone number must be 10 digits')\n    //     .transform((value, originalValue) => {\n    //         if (!originalValue) return originalValue;\n    //         const phoneNumber = originalValue.replace(/[^\\d]/g, '');\n    //         const phoneNumberLength = phoneNumber.length;\n    //         if (phoneNumberLength < 4) return phoneNumber;\n    //         if (phoneNumberLength < 7) {\n    //             return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3)}`;\n    //         }\n    //         return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(\n    //             3,\n    //             6\n    //         )}-${phoneNumber.slice(6)}`;\n    //     }),\n    // phone: yup\n    //     .string()\n    //     .matches(phoneRegExp, 'Phone number is not in the correct format')\n    //     .transform((value, originalValue) => {\n    //         const phoneNumber = originalValue.replace(/[^\\d]/g, '');\n    //         const hasNonRepeatedConsecutiveNumbers = !/(.)\\1{2,}/.test(\n    //             phoneNumber\n    //         );\n    //         console.log(\n    //             'phoneNumber',\n    //             hasNonRepeatedConsecutiveNumbers,\n    //             phoneNumber,\n    //             value\n    //         );\n    //         if (hasNonRepeatedConsecutiveNumbers) {\n    //             const newNumber = `${phoneNumber.slice(\n    //                 0,\n    //                 3\n    //             )}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6)}`;\n    //             console.log('newNumber-------------------', newNumber);\n    //             return newNumber;\n    //         }\n    //         return originalValue;\n    //     }),\n\n    // phone: yup\n    //     .string()\n    //     .required('Phone number is required')\n    //     .transform((value, originalValue) => {\n    //         // If value is not undefined, remove all non-digit characters and format\n    //         if (value) {\n    //             const phoneNumber = originalValue.replace(/[^\\d]/g, '');\n    //             const newNumber = `${phoneNumber.slice(\n    //                 0,\n    //                 3\n    //             )}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6)}`;\n    //             return newNumber;\n    //         }\n\n    // const rawValue = value.replace(/[^\\d]/g, ''); // Remove all non-digits\n    // let formattedValue = '';\n    // if (rawValue.length < 4) {\n    //     formattedValue = rawValue;\n    // } else if (rawValue.length < 7) {\n    //     formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n    // } else {\n    //     formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(\n    //         3,\n    //         6\n    //     )}-${rawValue.slice(6, 10)}`;\n    // }\n    // If value is undefined, return empty string\n    //     return '';\n    // })\n    // .matches(/^\\d{10}$/, 'Phone number must be 10 digits'),\n\n    // phone: yup\n    //     .string()\n    //     .matches(/^\\d{10}$/, 'Phone number must be 10 digits')\n    //     .transform((value) =>\n    //         value ? value.replace(/(\\d{2})(\\d{3})(\\d{4})/, '$1-$2-$3') : ''\n    //     )\n    //     .nullable()\n    //     .required('Phone number is required'),\n\n    // phone: yup\n    //     .string()\n    //     .matches(phoneRegExp, 'Phone number must be 10 digits')\n    //     .transform((value, originalValue) =>\n    //         originalValue\n    //             ? originalValue.replace(/^(\\d{2})(\\d{3})(\\d{4})$/, '$1-$2-$3')\n    //             : ''\n    //     )\n    //     .nullable()\n    //     .required('Phone number is required'),\n});\n\nexport const getRepresentativeValidation = () => {\n    // Get the store data\n    const storeData = store.getState();\n    const { gettingPaid } = storeData;\n    const { businessDetails } = gettingPaid;\n\n    return yup.object().shape({\n        representativeDetails: yup.array().of(\n            yup.object().shape({\n                fname: yup\n                    .string()\n                    .nullable()\n                    .required('Legal person first name is required.'),\n                lname: yup\n                    .string()\n                    .nullable()\n                    .required('Legal person last name is required.'),\n                phoneNumber: yup\n                    .string()\n                    .nullable()\n                    .required('Phone number is required.')\n                    .min(12, 'Phone should be 10 digits.'),\n                ssn: yup\n                    .string()\n                    .nullable()\n                    .required('SSN is required.')\n                    .min(11, 'SSN should be 9 digit.'),\n                dob: yup\n                    .string()\n                    .nullable()\n                    .required('Date of birth is required.'),\n                email: yup\n                    .string()\n                    .email('Must be a valid email.')\n                    .max(255)\n                    .required('Email address is required.'),\n                countryAddress: yup\n                    .object()\n                    .nullable()\n                    .required('Country is require.'),\n                stateAddress: yup\n                    .object()\n                    .nullable()\n                    .required('State is require.'),\n                addressLine1: yup\n                    .string()\n                    .nullable()\n                    .required('Address line 1 is required.'),\n                city: yup.string().required('City is required.'),\n                zipcode: yup\n                    .string()\n                    .nullable()\n                    .notOneOf(\n                        ['00000'],\n                        'Should be in XXXXX format.Cannot containt all zeroes.'\n                    )\n                    .min(5, 'Should be in XXXXX format.')\n                    .max(5, 'Zip-code should be 5 digits.')\n                    .required('Zip-code is required.'),\n                secondaryIdentificationType: yup\n                    .object()\n                    .nullable()\n                    .required('Secondary identification is required.'),\n                soInsurence: yup\n                    .object()\n                    .nullable()\n                    .when('secondaryIdentificationType', {\n                        is: (secondaryIdentificationType) =>\n                            secondaryIdentificationType?.value === 'dl',\n                        then: yup\n                            .object()\n                            .nullable()\n                            .required('State of issuance is required.'),\n                    }),\n                idNumber: yup\n                    .string()\n                    .nullable()\n                    .required('Id number is required.'),\n                percentageOwnership: yup\n                    .mixed()\n                    .required('Ownership percentage must be 100%.')\n                    .test(\n                        'is-valid-settings',\n                        'Ownership percentage must be 100%.',\n                        (value, context) => {\n                            console.log('context', context);\n                            // Custom validation function for the 'percentageOwnership' field\n                            if (\n                                businessDetails?.businessCategory?.value ===\n                                'partnership'\n                            ) {\n                                if (\n                                    value !== '' &&\n                                    !isNaN(value) &&\n                                    (Number(value) === 100 ||\n                                        (Number(value) >= 25 &&\n                                            Number(value) <= 100))\n                                ) {\n                                    return true;\n                                }\n                                return context.createError({\n                                    message:\n                                        Number(value) > 100\n                                            ? 'Ownership percentage is invalid!'\n                                            : 'Ownership percentage must be 25% or more',\n                                    path: context.path,\n                                });\n                            } else if (\n                                businessDetails?.businessCategory?.value ===\n                                    'single_member_llc' ||\n                                businessDetails?.businessCategory?.value ===\n                                    'sole_proprietor'\n                            ) {\n                                if (\n                                    value !== '' &&\n                                    !isNaN(value) &&\n                                    Number(value) === 100\n                                ) {\n                                    return true;\n                                }\n                                return false;\n                            }\n                            if (\n                                value !== '' &&\n                                !isNaN(value) &&\n                                (Number(value) === 100 ||\n                                    (Number(value) >= 25 &&\n                                        Number(value) <= 100))\n                            ) {\n                                return true;\n                            }\n                            return context.createError({\n                                message:\n                                    Number(value) > 100\n                                        ? 'Ownership percentage is invalid!'\n                                        : 'Ownership percentage must be 25% or more',\n                                path: context.path,\n                            });\n                        }\n                    ),\n            })\n        ),\n    });\n};\n\nexport const BusinessRepresentativeValidationSchema = yup.object().shape({\n    representativeDetails: yup.array().of(\n        yup.object().shape({\n            fname: yup\n                .string()\n                .nullable()\n                .required('Legal person first name is required.'),\n            lname: yup\n                .string()\n                .nullable()\n                .required('Legal person last name is required.'),\n            // phoneNumber: yup\n            //     .string()\n            // .matches(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/, 'Invalid phone number')\n            // .notOneOf(['00000'], 'Should be in XXX-XXX-XXXX format and Cannot be all zeroes.')\n            // .min(10, 'Phone should be 10 digits.')\n            // .max(10, 'Phone should be 10 digits.')\n            // .required('Phone number is required.'),\n            phoneNumber: yup\n                .string()\n                .nullable()\n                .required('Phone number is required.')\n                .min(12, 'Phone should be 10 digits.'),\n            ssn: yup\n                .string()\n                .nullable()\n                .required('SSN is required.')\n                .min(11, 'SSN should be 9 digit.')\n                .max(11, 'SSN should be 9 digit.'),\n            dob: yup.string().nullable().required('Date of birth is required.'),\n            email: yup\n                .string()\n                .email('Must be a valid email.')\n                .max(255)\n                .required('Email address is required.'),\n            countryAddress: yup\n                .object()\n                .nullable()\n                .required('Country is require.'),\n            stateAddress: yup.object().nullable().required('State is require.'),\n            addressLine1: yup\n                .string()\n                .nullable()\n                .required('Address line 1 is required.'),\n            city: yup.string().required('City is required.'),\n            zipcode: yup\n                .string()\n                .nullable()\n                .notOneOf(\n                    ['00000'],\n                    'Should be in XXXXX format.Cannot containt all zeroes.'\n                )\n                .min(5, 'Should be in XXXXX format.')\n                .max(5, 'Zip-code should be 5 digits.')\n                .required('Zip-code is required.'),\n            secondaryIdentificationType: yup\n                .object()\n                .nullable()\n                .required('Secondary identification is required.'),\n            soInsurence: yup\n                .object()\n                .nullable()\n                .when('secondaryIdentificationType', {\n                    is: (secondaryIdentificationType) =>\n                        secondaryIdentificationType?.value === 'dl',\n                    then: yup\n                        .object()\n                        .nullable()\n                        .required('State of issuance is required.'),\n                }),\n            idNumber: yup\n                .string()\n                .nullable()\n                .required('Id number is required.'),\n        })\n    ),\n});\n\nexport const BankDetailsValidationSchema = yup.object().shape({\n    accountHolderName: yup\n        .string()\n        .required('Bank account holder name is required.'),\n    accountType: yup\n        .object()\n        .nullable()\n        .required('Bank account type is required.'),\n    accountRole: yup.object().nullable().required('Purpose is required.'),\n    accountNumber: yup\n        .string()\n        .required('Account number is required.')\n        .max(8, 'Account number should be 8 digits.')\n        .min(8, 'Account number should be 8 digits.'),\n    routingNumber: yup\n        .string()\n        .required('Routing number is require')\n        .max(9, 'Routing number should be 9 digits.')\n        .min(9, 'Routing number should be 9 digits.'),\n});\n\nexport const SummaryValidationSchema = yup.object().shape({\n    confirmation: yup\n        .boolean()\n        .oneOf([true], 'uou need to accept the confirm details'),\n    tnc: yup\n        .boolean()\n        .oneOf([true], 'you need to accept the terms and conditions'),\n});\n\nexport const shippingValidationSchema = yup.object().shape({\n    address1: yup.string().required('Address 1 is required.'),\n    daystofulfill: yup\n        .object()\n        .nullable()\n        .required('Days to fultill  is required.'),\n    state: yup\n        .object()\n        .shape({\n            label: yup.string().required('State is required.'),\n            value: yup.string().required('State is required.'),\n        })\n        .nullable()\n        .required('State is required.'),\n    country: yup\n        .object()\n        .shape({\n            label: yup.string().required('Country is required.'),\n            value: yup.string().required('Country is required.'),\n        })\n        .nullable()\n        .required('Country is required.'),\n    city: yup.string().required('City is required.'),\n    shippingfee: yup.string().required('Shipping fee is required.'),\n    incrementalfee: yup.string().required('Incremental fee is required.'),\n    zip: yup.string().required('Zip-code is required.'),\n});\n\nexport const brandProfileValidationSchema = yup.object().shape({\n    companyName: yup.string().required('Company name is required.'),\n    contactEmail: yup\n        .string()\n        .email('Must be a valid email.')\n        .max(255)\n        .required('Contact email is required.'),\n    contactPhone: yup.string().required('Contact phone number is required.'),\n    brandName: yup.string().required('Brand name is required.'),\n    brandWebsite: yup\n        .string()\n        .url('Please enter a valid URL')\n        .required('Brand website is required.'),\n    brandCategory: yup\n        .array()\n        .min(1, 'At least 1 category required')\n        .max(3, 'Select max 3 category.')\n        .nullable()\n        .required('Select max 3 category.'),\n    aboutTheBrand: yup.string().required('About the brand is required.'),\n    videoLink: yup.string().required('Please enter valid website.'),\n});\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { brandProfileValidationSchema } from '../Paid/ValidationSchema';\nimport EditIcon from '../../images/icons/icon-edit.svg';\nimport Brandlogo from '../../images/profile-avatar.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getBrandProfileAction,\n  getPlatformCategoryAction,\n  getPlatformValuesAction,\n  updateBrandProfileAction,\n} from '../../../../actions/brandActions';\nimport { uploadImageAction } from '../../../../actions/userActions';\nimport { selectUserDetails } from '../../../../redux/user/userSelector';\nimport {\n  selectBrandCategory,\n  selectBrandProfileDetails,\n  selectBrandValues,\n} from '../../../../redux/Brand/Profile/brandProfileSelectors';\nimport { cloneDeep, isEmpty, map, remove } from 'lodash';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function BrandProfile() {\n  const [image, setImage] = useState(Brandlogo);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(brandProfileValidationSchema),\n  });\n  const dispatch = useDispatch();\n  const useDetails = useSelector(selectUserDetails);\n  const brandCategoryList = useSelector(selectBrandCategory);\n  const brandValueList = useSelector(selectBrandValues);\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n  const [selectedCategory, setSelectCategory] = useState([]);\n  const [selectedValues, setSelectValues] = useState([]);\n  const [profileLoading, setProfileLoading] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(getPlatformCategoryAction());\n      dispatch(getPlatformValuesAction());\n      dispatch(getBrandProfileAction(useDetails.id));\n    }, 350);\n  }, []);\n\n  const initialState = async (brandData) => {\n    if (brandData?.brand_profile?.id) {\n      const categoryArray = [];\n      const valuesArray = [];\n      if (brandData.brand_categories && brandData.brand_categories.length) {\n        await map(brandData.brand_categories, (cat, key) => {\n          categoryArray.push(cat.id);\n        });\n      }\n      if (brandData.brand_values && brandData.brand_values.length) {\n        await map(brandData.brand_values, (cat, key) => {\n          valuesArray.push(cat.id);\n        });\n      }\n      setImage(brandData.brand_profile.store_logo || Brandlogo);\n      reset({\n        brand_values: valuesArray,\n        brand_categories: categoryArray,\n        company_name: brandData.brand_profile.company_name,\n        company_email_address: brandData.brand_profile.company_email_address,\n        company_phone_number: brandData.brand_profile.company_phone_number,\n        store_name: brandData.brand_profile.store_name,\n        store_website: brandData.brand_profile.store_website,\n        brand_story: brandData.brand_profile.brand_story,\n        brand_promo: brandData.brand_profile.brand_promo,\n      });\n      setTimeout(() => {\n        setSelectCategory(categoryArray);\n        setSelectValues(valuesArray);\n      }, 100);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      brandProfileDetails.brand_profile &&\n      brandProfileDetails.brand_profile.id\n    ) {\n      initialState(brandProfileDetails);\n    }\n  }, [brandProfileDetails]);\n\n  const handleCheckbox = (value, valueType) => {\n    const valueParse = JSON.parse(value);\n    const currentArray =\n      valueType === 'category' ? selectedCategory : selectedValues;\n\n    const updateArray = cloneDeep(currentArray);\n    const isSelected = updateArray.includes(valueParse);\n    if (isSelected) {\n      remove(updateArray, (r, key) => {\n        return r === valueParse;\n      });\n    } else {\n      updateArray.push(valueParse);\n    }\n    if (valueType === 'category') {\n      setSelectCategory(updateArray);\n    } else if (valueType === 'value') {\n      setSelectValues(updateArray);\n    }\n  };\n\n  const onChangeImage = (e) => {\n    if (!profileLoading) {\n      setProfileLoading(true);\n      const data = new FormData();\n      data.append('file', e.target.files[0]);\n      dispatch(\n        uploadImageAction(data)\n          .then((res) => {\n            setImage(res.url);\n          })\n          .finally(() => {\n            setProfileLoading(false);\n          })\n      );\n    }\n  };\n\n  const onSubmit = (data) => {\n    dispatch(\n      updateBrandProfileAction(\n        {\n          user_id: useDetails.id,\n          role_id: 1,\n          store_logo: image,\n          profile_picture: image,\n          ...data,\n        },\n        brandProfileDetails?.id\n      )\n    );\n    // reset();\n  };\n\n  return (\n    <div className=\"pc_tabs-content tabs_body\">\n      <div className=\"tab active\" data-target=\"Account\">\n        <div className=\"products_content\">\n          <div className=\"products_head mp-head head-with-subtitle\">\n            <div className=\"products_head-content\">\n              <div className=\"title\">\n                <h1>Brand Profile</h1>\n              </div>\n            </div>\n            <p>\n              Information entered on this page will be visible to retailers\n              within ShopDot.\n            </p>\n          </div>\n          <div className=\"products_body\">\n            <div className=\"content_area\">\n              <div id=\"account\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"account_info\">\n                    <h2>Contact Information </h2>\n                    <div className=\"form-area\">\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Company name <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"company_name\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('company_name', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.company_name && (\n                          <span className=\"error-text\">\n                            {errors?.company_name?.message}\n                          </span>\n                        )}\n                      </div>\n\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Contact email <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"company_email_address\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('company_email_address', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.company_email_address && (\n                          <span className=\"error-text\">\n                            {errors?.company_email_address?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Contact phone number{' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          className=\"form-control mb-0\"\n                          id=\"\"\n                          name=\"company_phone_number\"\n                          placeholder=\"\"\n                          {...register('company_phone_number', {\n                            required: true,\n                          })}\n                        />\n\n                        {errors?.company_phone_number && (\n                          <span className=\"error-text\">\n                            {errors?.company_phone_number?.message}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"my_store\">\n                    <h2>Brand Information </h2>\n                    <div className=\"form-area\">\n                      <div className=\"form-input form-upload-image\">\n                        <a href=\"#\" className=\"upload-logo\">\n                          <label>\n                            <input\n                              className=\"d-none\"\n                              id=\"\"\n                              type=\"file\"\n                              onChange={onChangeImage}\n                            />\n                            <img src={EditIcon} className=\"icon\" />\n                            <div className=\"profile-user-avtar\">\n                              <img src={image} />\n                            </div>\n                          </label>\n                        </a>\n                        <label>\n                          Upload logo\n                          <span className=\"asterisk-red\"> *</span>\n                          <a\n                            href=\"#\"\n                            className=\"remove-logo\"\n                            onClick={() => {\n                              if (!profileLoading) {\n                                setImage(Brandlogo);\n                              }\n                            }}\n                          >\n                            Remove logo{' '}\n                          </a>\n                          <span className=\"logo-instruction\">\n                            Format Type:\n                            <b>JPEG or PNG</b>. Maximum size is <b>5MB</b>, No\n                            less than <b>512 x 512</b> pixels and no more than{' '}\n                            <b>1024 x 1024</b> pixels.\n                          </span>\n                        </label>\n                      </div>\n                      <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                          Brand name <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"store_name\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('store_name', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.store_name && (\n                          <span className=\"error-text\">\n                            {errors?.store_name?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Brand website\n                          <span className=\"asterisk-red\">*</span>\n                          <div className=\"tooltip\">\n                            <div className=\"tooltip-icon\">\n                              <svg className=\"icon\"></svg>\n                            </div>\n                            <div className=\"tooltip_text\">\n                              <p>\n                                This is your store that is connected with\n                                ShopDot. You can connect a different store in\n                                the Integration section.\n                              </p>\n                            </div>\n                          </div>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"store_website\"\n                          placeholder=\"janebeautyparlor.com\"\n                          {...register('store_website', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.store_website && (\n                          <span className=\"error-text\">\n                            {errors?.store_website?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-checkbox mb-4\">\n                        <label className=\"form-label\">\n                          Brand category (Select up to three){' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n\n                        <div className=\"select-checkbox\">\n                          {brandCategoryList && brandCategoryList.length ? (\n                            brandCategoryList.map((item, i) => {\n                              return (\n                                <div className=\"check-item\" key={i}>\n                                  <label className=\"checkbox\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name={'brand_categories'}\n                                      checked={selectedCategory.includes(\n                                        item.id\n                                      )}\n                                      value={item.id}\n                                      {...register('brand_categories', {\n                                        onChange: (e) => {\n                                          handleCheckbox(\n                                            e.target.value,\n                                            'category'\n                                          );\n                                        },\n                                      })}\n                                    />\n                                    <div className=\"checkbox-text\">\n                                      <span>{item.name}</span>\n                                    </div>\n                                  </label>\n                                </div>\n                              );\n                            })\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                        {errors?.brand_categories && (\n                          <span className=\"error-text\">\n                            {errors?.brand_categories?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-checkbox mb-4\">\n                        <label className=\"form-label\">Brand values</label>\n                        <div className=\"select-checkbox third-col\">\n                          <div className=\"select-checkbox\">\n                            {brandValueList && brandValueList.length ? (\n                              brandValueList.map((val, i) => {\n                                return (\n                                  <div className=\"check-item\" key={i}>\n                                    <label className=\"checkbox\">\n                                      <input\n                                        type=\"checkbox\"\n                                        name={'brand_values'}\n                                        checked={selectedValues.includes(\n                                          val.id\n                                        )}\n                                        value={val.id}\n                                        {...register('brand_values', {\n                                          required: false,\n                                          onChange: (e) => {\n                                            handleCheckbox(\n                                              e.target.value,\n                                              'value'\n                                            );\n                                          },\n                                        })}\n                                      />\n                                      <div className=\"checkbox-text\">\n                                        <span>{val.name}</span>\n                                      </div>\n                                    </label>\n                                  </div>\n                                );\n                              })\n                            ) : (\n                              <div />\n                            )}\n                          </div>\n                          {errors?.brand_values && (\n                            <span className=\"error-text\">\n                              {errors?.brand_values?.message}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"form-input form-story mb-4\">\n                        <label className=\"form-label\">\n                          About the brand{' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <textarea\n                          id=\"\"\n                          rows=\"8\"\n                          required=\"\"\n                          className=\"text-area   \"\n                          name=\"brand_story\"\n                          placeholder=\"\"\n                          {...register('brand_story', {\n                            required: true,\n                          })}\n                        ></textarea>\n                        {errors?.brand_story && (\n                          <span className=\"error-text\">\n                            {errors?.brand_story?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                          Add a Youtube or Vimeo video link.\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"brand_promo\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('brand_promo', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.brand_promo && (\n                          <span className=\"error-text\">\n                            {errors?.brand_promo?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-submit\">\n                        <button\n                          onClick={() => reset()}\n                          className=\"button button-grey cancel\"\n                        >\n                          Cancel\n                        </button>\n                        <button type=\"submit\" className=\"button\">\n                          Save\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n"],"names":["updateUserRoleAction","formData","navigate","platformName","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","wrap","_context","prev","next","axios","API_END_POINT","sent","data","code","setRoleUpdated","role","addUserPlatformAction","user_id","platform","toast","t0","errors","stop","_x","apply","arguments","_ref2","_callee2","_context2","state","_x2","uploadImageAction","_x3","_uploadImageAction","_callee5","_context5","headers","abrupt","updateNotificationAction","_ref3","_callee3","_response$data","_context3","message","getNotificationAction","brand_id","_x4","brandId","_ref4","_callee4","_context4","concat","setNotificationData","_x5","BusinessDetailsValidationSchema","yup","shape","businessName","required","businessAs","test","business","this","parent","website","url","businessEmail","email","max","businessCategory","nullable","textIdType","when","is","value","then","phoneNumber","min","addressLine1","countryAddress","stateAddress","city","zipcode","notOneOf","stateOfIncorportation","dateOfIncorportation","bankruptcy","dateOfDischarge","averageSales","averageSalePrice","averageDeliveryTime","merchantCategoryCode","salesMethod","productionDescription","getRepresentativeValidation","businessDetails","store","gettingPaid","representativeDetails","of","fname","lname","ssn","dob","secondaryIdentificationType","soInsurence","idNumber","percentageOwnership","context","_businessDetails$busi","_businessDetails$busi2","_businessDetails$busi3","console","log","isNaN","Number","createError","path","BusinessRepresentativeValidationSchema","BankDetailsValidationSchema","accountHolderName","accountType","accountRole","accountNumber","routingNumber","SummaryValidationSchema","confirmation","oneOf","tnc","shippingValidationSchema","address1","daystofulfill","label","country","shippingfee","incrementalfee","zip","brandProfileValidationSchema","companyName","contactEmail","contactPhone","brandName","brandWebsite","brandCategory","aboutTheBrand","videoLink","BrandProfile","_errors$company_name","_errors$company_email","_errors$company_phone","_errors$store_name","_errors$store_website","_errors$brand_categor","_errors$brand_values","_errors$brand_story","_errors$brand_promo","_useState","useState","Brandlogo","_useState2","_slicedToArray","image","setImage","_useForm","useForm","mode","resolver","yupResolver","register","handleSubmit","reset","setValue","formState","useDispatch","useDetails","useSelector","selectUserDetails","brandCategoryList","selectBrandCategory","brandValueList","selectBrandValues","brandProfileDetails","selectBrandProfileDetails","_useState3","_useState4","selectedCategory","setSelectCategory","_useState5","_useState6","selectedValues","setSelectValues","_useState7","_useState8","profileLoading","setProfileLoading","useEffect","setTimeout","getPlatformCategoryAction","getPlatformValuesAction","getBrandProfileAction","id","initialState","brandData","_brandData$brand_prof","categoryArray","valuesArray","brand_profile","brand_categories","length","map","cat","key","push","brand_values","store_logo","company_name","company_email_address","company_phone_number","store_name","store_website","brand_story","brand_promo","handleCheckbox","valueType","valueParse","JSON","parse","currentArray","updateArray","cloneDeep","includes","remove","r","_jsxs","className","children","_jsx","onSubmit","updateBrandProfileAction","_objectSpread","role_id","profile_picture","type","name","placeholder","href","onChange","e","FormData","append","target","files","res","finally","src","EditIcon","onClick","item","i","checked","val","rows","ToastContainer"],"sourceRoot":""}