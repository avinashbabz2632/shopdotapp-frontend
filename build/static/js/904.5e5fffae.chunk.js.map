{"version":3,"file":"static/js/904.5e5fffae.chunk.js","mappings":"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","sources":["assets/images/icons/Vector.11.svg","pages/Brand/Settings/Paid/ValidationSchema.js","pages/Brand/common/utils/utils.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgVector11(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 10,\n    viewBox: \"0 0 14 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.99967 0.333252L8.05967 1.27325L11.113 4.33325H0.333008V5.66659H11.113L8.05301 8.72659L8.99967 9.66659L13.6663 4.99992L8.99967 0.333252Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVector11);\nexport default __webpack_public_path__ + \"static/media/Vector.11.12423128bc07938c1618e6f713188127.svg\";\nexport { ForwardRef as ReactComponent };","import * as yup from 'yup';\nimport { store } from '../../../../redux/store';\n\nexport const BusinessDetailsValidationSchema = yup.object().shape({\n  businessName: yup.string().required('Legal business name is required.'),\n  businessAs: yup\n    .string()\n    .required('Doing business is required.')\n    .test(\n      'businessname',\n      'doing business is different than the legal name',\n      function (business) {\n        return business ? business !== this.parent.businessName : true;\n      }\n    ),\n  website: yup\n    .string()\n    .url('Please enter a valid URL')\n    .required('Business website address is required.'),\n  businessEmail: yup\n    .string()\n    .email('Must be a valid email.')\n    .max(255)\n    .required('Business email address is required.'),\n  businessCategory: yup\n    .object()\n    .nullable()\n    .required('Business category is required.'),\n  textIdType: yup.object().when('businessCategory', {\n    is: (businessCategory) =>\n      businessCategory?.value === 'single_member_llc' ||\n      businessCategory?.value === 'sole_proprietor',\n    then: yup.object().nullable().required('TextID is required'),\n  }),\n  // employerIdentificationNumber: yup\n  //     .object()\n  //     .nullable()\n  //     .required('Employer identification number is required'),\n  // socialSecurityNumber: yup\n  //     .object()\n  //     .nullable()\n  //     .required('Social security number is required'),\n  // employerIdentificationNumber: yup.string().when('businessCategory', {\n  //     is: (businessCategory) =>\n  //         businessCategory?.value !== 'single_member_llc' ||\n  //         businessCategory?.value !== 'sole_proprietor',\n  //     then: yup\n  //         .string()\n  //         .required('Employer identification number is required'),\n  // }),\n  // socialSecurityNumber: yup\n  //     .string()\n  //     .when('textIdType', {\n  //         is: (textIdType) => textIdType?.value === 'ssn',\n  //         then: yup.string().required('Social security number is required'),\n  //     })\n  //     .when('businessCategory', {\n  //         is: (businessCategory) =>\n  //             businessCategory?.value === 'single_member_llc' ||\n  //             businessCategory?.value === 'sole_proprietor',\n  //         then: yup.string().required('Social security number is required'),\n  //     }),\n  phoneNumber: yup\n    .string()\n    .nullable()\n    .required('Phone number is required.')\n    .min(12, 'Phone should be 10 digits.'),\n  addressLine1: yup.string().nullable().required('Address line 1 is required.'),\n  countryAddress: yup.object().nullable().required('Country is require.'),\n  stateAddress: yup.object().nullable().required('State is require.'),\n  city: yup.string().required('City is required.'),\n  zipcode: yup\n    .string()\n    .nullable()\n    .notOneOf(\n      ['00000'],\n      'Should be in XXXXX format.Cannot containt all zeroes.'\n    )\n    .min(5, 'Should be in XXXXX format.')\n    .max(5, 'Zip-code should be 5 digits.')\n    .required('Zip-code is required.'),\n  stateOfIncorportation: yup\n    .object()\n    .nullable()\n    .required('State of incorporation is required.'),\n  dateOfIncorportation: yup\n    .string()\n    .nullable()\n    .required('Date of incorporation is required.'),\n  bankruptcy: yup.string().nullable().required('Prior bankruptcy is required.'),\n  dateOfDischarge: yup.string().when('bankruptcy', {\n    is: (bankruptcy) => bankruptcy === 'yes',\n    then: yup.string().nullable().required('Date of discharge is required.'),\n  }),\n  averageSales: yup\n    .string()\n    .required('Estimated average sales volume on shopdot is required.'),\n  averageSalePrice: yup\n    .string()\n    .required('Estimated average sale price on shopdot is required.'),\n  averageDeliveryTime: yup\n    .object()\n    .nullable()\n    .required('Average delivery time is required.'),\n  merchantCategoryCode: yup\n    .object()\n    .nullable()\n    .required('Merchant category code is required.'),\n  salesMethod: yup.object().nullable().required('Sales method is required.'),\n  productionDescription: yup\n    .string()\n    .required('Product description is required.'),\n  // phone: yup\n  //     .string()\n  //     .matches(/^\\d{10}$/, 'Phone number must be 10 digits')\n  //     .transform((value, originalValue) => {\n  //         if (!originalValue) return originalValue;\n  //         const phoneNumber = originalValue.replace(/[^\\d]/g, '');\n  //         const phoneNumberLength = phoneNumber.length;\n  //         if (phoneNumberLength < 4) return phoneNumber;\n  //         if (phoneNumberLength < 7) {\n  //             return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3)}`;\n  //         }\n  //         return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(\n  //             3,\n  //             6\n  //         )}-${phoneNumber.slice(6)}`;\n  //     }),\n  // phone: yup\n  //     .string()\n  //     .matches(phoneRegExp, 'Phone number is not in the correct format')\n  //     .transform((value, originalValue) => {\n  //         const phoneNumber = originalValue.replace(/[^\\d]/g, '');\n  //         const hasNonRepeatedConsecutiveNumbers = !/(.)\\1{2,}/.test(\n  //             phoneNumber\n  //         );\n  //         console.log(\n  //             'phoneNumber',\n  //             hasNonRepeatedConsecutiveNumbers,\n  //             phoneNumber,\n  //             value\n  //         );\n  //         if (hasNonRepeatedConsecutiveNumbers) {\n  //             const newNumber = `${phoneNumber.slice(\n  //                 0,\n  //                 3\n  //             )}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6)}`;\n  //             console.log('newNumber-------------------', newNumber);\n  //             return newNumber;\n  //         }\n  //         return originalValue;\n  //     }),\n\n  // phone: yup\n  //     .string()\n  //     .required('Phone number is required')\n  //     .transform((value, originalValue) => {\n  //         // If value is not undefined, remove all non-digit characters and format\n  //         if (value) {\n  //             const phoneNumber = originalValue.replace(/[^\\d]/g, '');\n  //             const newNumber = `${phoneNumber.slice(\n  //                 0,\n  //                 3\n  //             )}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6)}`;\n  //             return newNumber;\n  //         }\n\n  // const rawValue = value.replace(/[^\\d]/g, ''); // Remove all non-digits\n  // let formattedValue = '';\n  // if (rawValue.length < 4) {\n  //     formattedValue = rawValue;\n  // } else if (rawValue.length < 7) {\n  //     formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n  // } else {\n  //     formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(\n  //         3,\n  //         6\n  //     )}-${rawValue.slice(6, 10)}`;\n  // }\n  // If value is undefined, return empty string\n  //     return '';\n  // })\n  // .matches(/^\\d{10}$/, 'Phone number must be 10 digits'),\n\n  // phone: yup\n  //     .string()\n  //     .matches(/^\\d{10}$/, 'Phone number must be 10 digits')\n  //     .transform((value) =>\n  //         value ? value.replace(/(\\d{2})(\\d{3})(\\d{4})/, '$1-$2-$3') : ''\n  //     )\n  //     .nullable()\n  //     .required('Phone number is required'),\n\n  // phone: yup\n  //     .string()\n  //     .matches(phoneRegExp, 'Phone number must be 10 digits')\n  //     .transform((value, originalValue) =>\n  //         originalValue\n  //             ? originalValue.replace(/^(\\d{2})(\\d{3})(\\d{4})$/, '$1-$2-$3')\n  //             : ''\n  //     )\n  //     .nullable()\n  //     .required('Phone number is required'),\n});\n\nexport const getRepresentativeValidation = () => {\n  // Get the store data\n  const storeData = store.getState();\n  const { gettingPaid } = storeData;\n  const { businessDetails } = gettingPaid;\n\n  return yup.object().shape({\n    representativeDetails: yup.array().of(\n      yup.object().shape({\n        fname: yup\n          .string()\n          .nullable()\n          .required('Legal person first name is required.'),\n        lname: yup\n          .string()\n          .nullable()\n          .required('Legal person last name is required.'),\n        phoneNumber: yup\n          .string()\n          .nullable()\n          .required('Phone number is required.')\n          .min(12, 'Phone should be 10 digits.'),\n        ssn: yup\n          .string()\n          .nullable()\n          .required('SSN is required.')\n          .min(11, 'SSN should be 9 digit.'),\n        dob: yup.string().nullable().required('Date of birth is required.'),\n        email: yup\n          .string()\n          .email('Must be a valid email.')\n          .max(255)\n          .required('Email address is required.'),\n        countryAddress: yup.object().nullable().required('Country is require.'),\n        stateAddress: yup.object().nullable().required('State is require.'),\n        addressLine1: yup\n          .string()\n          .nullable()\n          .required('Address line 1 is required.'),\n        city: yup.string().required('City is required.'),\n        zipcode: yup\n          .string()\n          .nullable()\n          .notOneOf(\n            ['00000'],\n            'Should be in XXXXX format.Cannot containt all zeroes.'\n          )\n          .min(5, 'Should be in XXXXX format.')\n          .max(5, 'Zip-code should be 5 digits.')\n          .required('Zip-code is required.'),\n        secondaryIdentificationType: yup\n          .object()\n          .nullable()\n          .required('Secondary identification is required.'),\n        soInsurence: yup\n          .object()\n          .nullable()\n          .when('secondaryIdentificationType', {\n            is: (secondaryIdentificationType) =>\n              secondaryIdentificationType?.value === 'dl',\n            then: yup\n              .object()\n              .nullable()\n              .required('State of issuance is required.'),\n          }),\n        idNumber: yup.string().nullable().required('Id number is required.'),\n        percentageOwnership: yup\n          .mixed()\n          .required('Ownership percentage must be 100%.')\n          .test(\n            'is-valid-settings',\n            'Ownership percentage must be 100%.',\n            (value, context) => {\n              console.log('context', context);\n              // Custom validation function for the 'percentageOwnership' field\n              if (businessDetails?.businessCategory?.value === 'partnership') {\n                if (\n                  value !== '' &&\n                  !isNaN(value) &&\n                  (Number(value) === 100 ||\n                    (Number(value) >= 25 && Number(value) <= 100))\n                ) {\n                  return true;\n                }\n                return context.createError({\n                  message:\n                    Number(value) > 100\n                      ? 'Ownership percentage is invalid!'\n                      : 'Ownership percentage must be 25% or more',\n                  path: context.path,\n                });\n              } else if (\n                businessDetails?.businessCategory?.value ===\n                  'single_member_llc' ||\n                businessDetails?.businessCategory?.value === 'sole_proprietor'\n              ) {\n                if (value !== '' && !isNaN(value) && Number(value) === 100) {\n                  return true;\n                }\n                return false;\n              }\n              if (\n                value !== '' &&\n                !isNaN(value) &&\n                (Number(value) === 100 ||\n                  (Number(value) >= 25 && Number(value) <= 100))\n              ) {\n                return true;\n              }\n              return context.createError({\n                message:\n                  Number(value) > 100\n                    ? 'Ownership percentage is invalid!'\n                    : 'Ownership percentage must be 25% or more',\n                path: context.path,\n              });\n            }\n          ),\n      })\n    ),\n  });\n};\n\nexport const BusinessRepresentativeValidationSchema = yup.object().shape({\n  representativeDetails: yup.array().of(\n    yup.object().shape({\n      fname: yup\n        .string()\n        .nullable()\n        .required('Legal person first name is required.'),\n      lname: yup\n        .string()\n        .nullable()\n        .required('Legal person last name is required.'),\n      // phoneNumber: yup\n      //     .string()\n      // .matches(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/, 'Invalid phone number')\n      // .notOneOf(['00000'], 'Should be in XXX-XXX-XXXX format and Cannot be all zeroes.')\n      // .min(10, 'Phone should be 10 digits.')\n      // .max(10, 'Phone should be 10 digits.')\n      // .required('Phone number is required.'),\n      phoneNumber: yup\n        .string()\n        .nullable()\n        .required('Phone number is required.')\n        .min(12, 'Phone should be 10 digits.'),\n      ssn: yup\n        .string()\n        .nullable()\n        .required('SSN is required.')\n        .min(11, 'SSN should be 9 digit.')\n        .max(11, 'SSN should be 9 digit.'),\n      dob: yup.string().nullable().required('Date of birth is required.'),\n      email: yup\n        .string()\n        .email('Must be a valid email.')\n        .max(255)\n        .required('Email address is required.'),\n      countryAddress: yup.object().nullable().required('Country is require.'),\n      stateAddress: yup.object().nullable().required('State is require.'),\n      addressLine1: yup\n        .string()\n        .nullable()\n        .required('Address line 1 is required.'),\n      city: yup.string().required('City is required.'),\n      zipcode: yup\n        .string()\n        .nullable()\n        .notOneOf(\n          ['00000'],\n          'Should be in XXXXX format.Cannot containt all zeroes.'\n        )\n        .min(5, 'Should be in XXXXX format.')\n        .max(5, 'Zip-code should be 5 digits.')\n        .required('Zip-code is required.'),\n      secondaryIdentificationType: yup\n        .object()\n        .nullable()\n        .required('Secondary identification is required.'),\n      soInsurence: yup\n        .object()\n        .nullable()\n        .when('secondaryIdentificationType', {\n          is: (secondaryIdentificationType) =>\n            secondaryIdentificationType?.value === 'dl',\n          then: yup\n            .object()\n            .nullable()\n            .required('State of issuance is required.'),\n        }),\n      idNumber: yup.string().nullable().required('Id number is required.'),\n    })\n  ),\n});\n\nexport const BankDetailsValidationSchema = yup.object().shape({\n  accountHolderName: yup\n    .string()\n    .required('Bank account holder name is required.'),\n  accountType: yup\n    .object()\n    .nullable()\n    .required('Bank account type is required.'),\n  accountRole: yup.object().nullable().required('Purpose is required.'),\n  accountNumber: yup\n    .string()\n    .required('Account number is required.')\n    .max(8, 'Account number should be 8 digits.')\n    .min(8, 'Account number should be 8 digits.'),\n  routingNumber: yup\n    .string()\n    .required('Routing number is require')\n    .max(9, 'Routing number should be 9 digits.')\n    .min(9, 'Routing number should be 9 digits.'),\n});\n\nexport const SummaryValidationSchema = yup.object().shape({\n  confirmation: yup\n    .boolean()\n    .oneOf([true], 'uou need to accept the confirm details'),\n  tnc: yup\n    .boolean()\n    .oneOf([true], 'you need to accept the terms and conditions'),\n});\n\nexport const shippingValidationSchema = yup.object().shape({\n  address1: yup.string().required('Address 1 is required.'),\n  daystofulfill: yup\n    .object()\n    .nullable()\n    .required('Days to fultill  is required.'),\n  state: yup\n    .object()\n    .shape({\n      label: yup.string().required('State is required.'),\n      value: yup.string().required('State is required.'),\n    })\n    .nullable()\n    .required('State is required.'),\n  country: yup\n    .object()\n    .shape({\n      label: yup.string().required('Country is required.'),\n      value: yup.string().required('Country is required.'),\n    })\n    .nullable()\n    .required('Country is required.'),\n  city: yup.string().required('City is required.'),\n  shippingfee: yup.string().required('Shipping fee is required.'),\n  incrementalfee: yup.string().required('Incremental fee is required.'),\n  zip: yup.string().required('Zip-code is required.'),\n});\n\nexport const brandProfileValidationSchema = yup.object().shape({\n  company_name: yup.string().required('Company name is required.'),\n  company_email_address: yup\n    .string()\n    .email('Must be a valid email.')\n    .max(255)\n    .required('Contact email is required.'),\n  company_phone_number: yup\n    .string()\n    .nullable()\n    .required('Contact phone number is required.')\n    .min(12, 'Contact phone should be 10 digits.'),\n  store_name: yup.string().required('Brand name is required.'),\n  store_website: yup\n    .string()\n    .url('Please enter a valid URL')\n    .required('Brand website is required.'),\n  brand_categories: yup\n    .array()\n    .min(1, 'At least 1 category required')\n    .nullable()\n    .required('Select max 3 category.'),\n  brand_values: yup\n    .array()\n    .min(1, 'At least 1 value required')\n    .nullable()\n    .required('Select max 3 values.'),\n  brand_story: yup.string().required('About the brand is required.'),\n  brand_promo: yup.string().url('Please enter a valid URL'),\n});\n","/* eslint-disable react/prop-types */\n\nimport React, { forwardRef } from 'react';\n\nexport const ExampleCustomInput = forwardRef(\n  ({ value, onClick, onChange }, ref) => (\n    <input\n      value={value}\n      className=\"example-custom-input form-control mb-0\"\n      onClick={onClick}\n      onChange={onChange}\n      placeholder=\"MM-DD-YYYY\"\n      ref={ref}\n    ></input>\n  )\n);\n\nexport const transactionTypes = [\n  { value: 'All', label: 'All' },\n  { value: 'Order', label: 'Order' },\n  { value: 'Payout', label: 'Payout' },\n  { value: 'Fees', label: 'Fees' },\n  { value: 'Chargeback In', label: 'Chargeback In' },\n  { value: 'Chargeback Out', label: 'Chargeback Out' },\n  { value: 'Refund In', label: 'Refund In' },\n  { value: 'Refund Out', label: 'Refund Out' },\n];\nexport const tableData = [\n  {\n    id: 1,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Order',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 2,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Refund In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 3,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Order',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 4,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Refund In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 5,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Order',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 6,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Refund In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 7,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Refund In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 8,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Order',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 9,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Order',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 10,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Order',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 11,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Payout',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 12,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Payout',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 13,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Payout',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 14,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Chargeback In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 15,\n    retailerName: 'Retailer 1',\n    settlementDate: '17/02/2022',\n    transactionType: 'Refund In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 16,\n    retailerName: 'Retailer 1',\n    settlementDate: '17/03/2022',\n    transactionType: 'Refund In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 17,\n    retailerName: 'Retailer 1',\n    settlementDate: '17/04/2022',\n    transactionType: 'Chargeback In',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 18,\n    retailerName: 'Retailer 1',\n    settlementDate: '17/05/2022',\n    transactionType: 'Payout',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 19,\n    retailerName: 'Retailer 1',\n    settlementDate: '17/06/2022',\n    transactionType: 'Payout',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 20,\n    retailerName: 'Retailer 1',\n    settlementDate: '30/09/2022',\n    transactionType: 'Payout',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n];\nexport const payoutHistoryReport = [\n  {\n    id: 1,\n    retailerName: 'Retailer 1',\n    settlementDate: '23/09/2022',\n    transactionType: 'Refund',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 2,\n    retailerName: 'Retailer 1',\n    settlementDate: '23/09/2022',\n    transactionType: 'Refund',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 3,\n    retailerName: 'Retailer 1',\n    settlementDate: '23/09/2022',\n    transactionType: 'Refund',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n  {\n    id: 3,\n    retailerName: 'Retailer 1',\n    settlementDate: '23/09/2022',\n    transactionType: 'Refund',\n    referenceID: 'PG12346',\n    productCost: 90.0,\n    shipping: 10.0,\n    fees: 5.9,\n    total: 99.0,\n    account: 'Citibank-1235',\n  },\n];\n\nexport const salesOptions = [\n  {\n    value: '0',\n    label: '100% Digital Transaction',\n  },\n];\n\nexport const merchantOptions = [\n  {\n    value: '5021',\n    label: '5021 (Commercial Furniture)',\n  },\n  {\n    value: '5044',\n    label: '5044 (OFFC, Photographic, Photocopy, Microfilm EQ)',\n  },\n  { value: '5045', label: '5045 (Computers, Peripheral Equip, Software)' },\n  {\n    value: '5046',\n    label: '5046 (Commercial Equipment Not Elsewhere Classified)',\n  },\n  {\n    value: '5047',\n    label: '5047 (Lab/Med/Dental/Ophthalmic Hosp Eq &amp; Supplies)',\n  },\n  { value: '5065', label: '5065 (Electrical Parts and Equipment)' },\n  { value: '5072', label: '5072 (Hardware Equipment and Supplies)' },\n  {\n    value: '5094',\n    label: '5094 (Precious Stones, Metals, Watches, Jewelry)',\n  },\n  { value: '5099', label: '5099 (Durable Goods Not Elsewhere Classified)' },\n  {\n    value: '5111',\n    label: '5111 (Stationary, Office Supplies, Printing, WR PPR)',\n  },\n  {\n    value: '5122',\n    label: '5122 (Drugs, Drug Properties, Druggist Sundries)',\n  },\n  {\n    value: '5131',\n    label: '5131 (Piece Goods, Notions, and Other Dry Goods)',\n  },\n  {\n    value: '5137',\n    label: '5137 (Men’s, Women’s, Children’s Uniforms, COMM CLTH)',\n  },\n  { value: '5139', label: '5139 (Commercial Footwear)' },\n  { value: '5192', label: '5192 (Books, Periodicals &amp; Newspapers)' },\n  { value: '5193', label: '5193 (Florist Supplies, Nursery STK, Flowers)' },\n  {\n    value: '5199',\n    label: '5199 (Nondurable Goods Not Elsewhere Classified)',\n  },\n];\n\nexport const deliveryTimeOptions = [\n  {\n    value: 'WEEK',\n    label: 'Week',\n  },\n  { value: 'FORTNIGHT', label: '2 Weeks' },\n  { value: 'MONTH', label: 'Month' },\n  { value: 'TWO_MONTHS', label: '2 Months' },\n  { value: 'OVER_TWO_MONTHS', label: 'Over 2 Months' },\n];\n\nexport const stateIncorporationOptions = [\n  {\n    value: 'California',\n    label: 'California',\n  },\n  { value: 'Texas', label: 'Texas' },\n];\n\nexport const textIdOptions = [\n  {\n    value: 'ein',\n    label: 'Employer Identification Number (EIN)',\n  },\n  { value: 'ssn', label: 'Social Security Number (SSN)' },\n];\n\nexport const businessCategoryOptions = [\n  { value: 'C_CORP', label: 'C_CORP - Publicly Traded' },\n  { value: 'GOVERNMENT_ORGANISATION', label: 'Government Organization' },\n  { value: 'NON_PROFIT', label: 'Non Profit' },\n  { value: 'TAX_EXEMPT', label: 'Tax Exempt' },\n];\n\nexport const businessCategoryOptionsNew = [\n  { value: 'SINGLE_MEMBER_LLC', label: 'Single Member LLC' },\n  { value: 'SOLE_PROPRIETOR', label: 'Sole Proprietor' },\n  { value: 'LLC', label: 'LLC' },\n  { value: 'LLP', label: 'LLP' },\n  { value: 'PARTNERSHIP', label: 'Partnership' },\n  { value: 'C_CORP', label: 'C_CORP' },\n  { value: 'S_CORP', label: 'S_CORP' },\n  { value: 'C_CORP', label: 'C_CORP - Publicly Traded' },\n  { value: 'GOVERNMENT_ORGANISATION', label: 'Government Organization' },\n  { value: 'NON_PROFIT', label: 'Non Profit' },\n  { value: 'TAX_EXEMPT', label: 'Tax Exempt' },\n];\n\nexport const countryOptions = [\n  {\n    value: 'US',\n    label: 'United States',\n  },\n];\n\nexport const identityOptions = [\n  {\n    value: 'DRIVER_LICENSE',\n    label: 'Driver’s License',\n  },\n  { value: 'PASSPORT', label: 'Passport' },\n  { value: 'ALIEN_REGISTRATION_CARD', label: 'Alien Registration Card' },\n];\n\nexport const cityOptions = [\n  {\n    value: 'nyc',\n    label: 'New York ',\n  },\n  { value: 'la', label: 'Los Angeles' },\n];\n\nexport const categoryStyle = {\n  control: (styles) => {\n    return {\n      ...styles,\n      boxShadow: 'none',\n      minHeight: '40px',\n      '&:hover': {\n        boxShadow: 'none',\n      },\n    };\n  },\n  container: (style) => {\n    return {\n      ...style,\n      marginTop: '5px',\n      marginRight: '1px',\n    };\n  },\n};\n\nexport const accountTypeOption = [\n  { value: 'CHECKING', label: 'Current' },\n  {\n    value: 'SAVINGS',\n    label: 'Savings',\n  },\n];\n\nexport const accountRoleOption = [\n  { value: 'CORPORATE', label: 'Business' },\n  {\n    value: 'CONSUMER',\n    label: 'Personal',\n  },\n];\n"],"names":["BusinessDetailsValidationSchema","yup","shape","businessName","required","businessAs","test","business","this","parent","website","url","businessEmail","email","max","businessCategory","nullable","textIdType","when","is","value","then","phoneNumber","min","addressLine1","countryAddress","stateAddress","city","zipcode","notOneOf","stateOfIncorportation","dateOfIncorportation","bankruptcy","dateOfDischarge","averageSales","averageSalePrice","averageDeliveryTime","merchantCategoryCode","salesMethod","productionDescription","getRepresentativeValidation","businessDetails","store","gettingPaid","representativeDetails","of","fname","lname","ssn","dob","secondaryIdentificationType","soInsurence","idNumber","percentageOwnership","context","_businessDetails$busi","_businessDetails$busi2","_businessDetails$busi3","console","log","isNaN","Number","createError","message","path","BusinessRepresentativeValidationSchema","BankDetailsValidationSchema","accountHolderName","accountType","accountRole","accountNumber","routingNumber","SummaryValidationSchema","confirmation","oneOf","tnc","shippingValidationSchema","address1","daystofulfill","state","label","country","shippingfee","incrementalfee","zip","brandProfileValidationSchema","company_name","company_email_address","company_phone_number","store_name","store_website","brand_categories","brand_values","brand_story","brand_promo","ExampleCustomInput","forwardRef","_ref","ref","onClick","onChange","_jsx","className","placeholder","salesOptions","merchantOptions","deliveryTimeOptions","stateIncorporationOptions","textIdOptions","businessCategoryOptions","businessCategoryOptionsNew","countryOptions","identityOptions","categoryStyle","control","styles","_objectSpread","boxShadow","minHeight","container","style","marginTop","marginRight","accountTypeOption","accountRoleOption"],"sourceRoot":""}