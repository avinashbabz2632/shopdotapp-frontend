{"version":3,"file":"static/js/9770.2eb6fe42.chunk.js","mappings":"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","sources":["pages/Brand/images/icons/info.svg","redux/Brand/Preference/preferenceSelector.js","pages/Brand/Settings/Preferences/index.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgInfo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.99958 0C4.47746 0 0 4.47746 0 9.99958C0 15.5217 4.47746 20 9.99958 20C15.5217 20 20 15.5217 20 9.99958C20 4.47746 15.5217 0 9.99958 0ZM12.0813 15.498C11.5666 15.7012 11.1568 15.8552 10.8495 15.9619C10.5431 16.0686 10.1867 16.1219 9.78116 16.1219C9.1581 16.1219 8.67302 15.9695 8.32762 15.6656C7.98222 15.3617 7.81037 14.9765 7.81037 14.5084C7.81037 14.3263 7.82307 14.1401 7.84847 13.9505C7.87471 13.7608 7.91619 13.5475 7.97291 13.3079L8.61714 11.0324C8.67386 10.814 8.72296 10.6066 8.7619 10.4135C8.80085 10.2188 8.81947 10.0402 8.81947 9.87767C8.81947 9.58815 8.75937 9.38497 8.64 9.27069C8.51894 9.1564 8.29122 9.10053 7.95175 9.10053C7.78582 9.10053 7.61481 9.12508 7.43958 9.17672C7.26603 9.23005 7.11534 9.27831 6.99175 9.32571L7.1619 8.62476C7.58349 8.45291 7.9873 8.30561 8.37249 8.1837C8.75767 8.06011 9.12169 7.99915 9.46455 7.99915C10.0834 7.99915 10.5608 8.14984 10.8969 8.44783C11.2313 8.74667 11.3998 9.13524 11.3998 9.6127C11.3998 9.71175 11.3879 9.88614 11.3651 10.135C11.3422 10.3848 11.299 10.6125 11.2364 10.8216L10.5956 13.0904C10.5431 13.2724 10.4965 13.4806 10.4542 13.7134C10.4127 13.9462 10.3924 14.124 10.3924 14.2434C10.3924 14.5448 10.4593 14.7505 10.5947 14.8597C10.7285 14.9689 10.963 15.0239 11.2948 15.0239C11.4514 15.0239 11.6267 14.996 11.8248 14.9418C12.0212 14.8876 12.1634 14.8394 12.2531 14.7979L12.0813 15.498ZM11.9678 6.2891C11.669 6.56677 11.3092 6.70561 10.8885 6.70561C10.4686 6.70561 10.1062 6.56677 9.80487 6.2891C9.50519 6.01143 9.35365 5.67365 9.35365 5.27915C9.35365 4.8855 9.50603 4.54688 9.80487 4.26667C10.1062 3.98561 10.4686 3.84593 10.8885 3.84593C11.3092 3.84593 11.6698 3.98561 11.9678 4.26667C12.2667 4.54688 12.4165 4.8855 12.4165 5.27915C12.4165 5.6745 12.2667 6.01143 11.9678 6.2891Z\",\n    fill: \"#283B49\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInfo);\nexport default __webpack_public_path__ + \"static/media/info.6b6d6ceb4e4be005c910c2459c4393f4.svg\";\nexport { ForwardRef as ReactComponent };","export const selectPreferenceData = (state) => state.preference.preferenceData;\n","import React, { useEffect } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Select from 'react-select';\nimport Info from '../../images/icons/info.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getPreferencesAction,\n  updatePreferences,\n} from '../../../../actions/brandActions';\nimport { selectUserDetails } from '../../../../redux/user/userSelector';\nimport { ToastContainer } from 'react-toastify';\nimport { selectBrandProfileDetails } from '../../../../redux/Brand/Profile/brandProfileSelectors';\nimport { selectPreferenceData } from '../../../../redux/Brand/Preference/preferenceSelector';\n\nexport const PreferencesValidationSchema = yup.object().shape({\n  wholesalePercentage: yup\n    .number()\n    .typeError('Wholesale Price Percentage is required.')\n    .required('Wholesale Price Percentage is required.')\n    .min(0, 'Minimum atleast 0')\n    .max(100, 'Allowed maximum is 100'),\n\n  inventoryPercentage: yup\n    .number()\n    .typeError('Inventory Buffer Percentage is required.')\n    .required('Inventory Buffer Percentage is required.')\n    .min(0, 'Minimum atleast 0')\n    .max(100, 'Allowed maximum is 100'),\n  retunRefundPolicy: yup\n    .string()\n    .nullable()\n    .required('Prior Bankruptcy is required.'),\n  requirementsForRetailers: yup\n    .string()\n    .nullable()\n    .required('Requirements for retailers is required.'),\n});\n\nconst categoryStyle = {\n  control: (styles) => {\n    return {\n      ...styles,\n      boxShadow: 'none',\n      minHeight: '40px',\n      '&:hover': {\n        boxShadow: 'none',\n      },\n    };\n  },\n  container: (style) => {\n    return {\n      ...style,\n      marginTop: '5xp',\n      marginRight: '1px',\n    };\n  },\n};\nconst options = [\n  {\n    value: 'Allow for flexible retail pricing',\n    label: 'Allow for flexible retail pricing',\n  },\n  {\n    value: 'Enforce retail price',\n    label: 'Enforce retail price',\n  },\n];\n\nexport default function BrandPreference() {\n  const {\n    register,\n    watch,\n    reset,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(PreferencesValidationSchema),\n    defaultValues: {\n      wholesalePercentage: 50,\n      inventoryPercentage: 70,\n      returnPricing: options[0],\n      retunRefundPolicy: 'yes',\n      connectBrand: null,\n    },\n  });\n  const dispatch = useDispatch();\n  const useDetails = useSelector(selectUserDetails);\n  const preferenceData = useSelector(selectPreferenceData);\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n  const wholesalePercentage = watch('wholesalePercentage');\n  const inventoryPercentage = watch('inventoryPercentage');\n\n  useEffect(() => {\n    dispatch(getPreferencesAction(brandProfileDetails?.brand_profile?.id));\n  }, []);\n\n  useEffect(() => {\n    if (preferenceData) {\n      console.log(preferenceData, 'preferenceData');\n      initalCall();\n    }\n  }, [preferenceData]);\n\n  const initalCall = () => {\n    reset({\n      wholesalePercentage: preferenceData.wholesale_pricing,\n      inventoryPercentage: preferenceData.wholesale_pricing,\n      inventoryPercentage: preferenceData.inventory_buffer,\n      retunRefundPolicy: preferenceData.return_policy,\n      requirementsForRetailers: preferenceData.connect_brand,\n    });\n  };\n  const onSubmit = (data) => {\n    const formData = {\n      brand_id: brandProfileDetails?.brand_profile?.id,\n      wholesalePricing: data.wholesalePercentage,\n      // retailerPricing: data.returnPricing.value,\n      retailerPricing: data.inventoryPercentage,\n      inventoryBuffer: data.inventoryPercentage,\n      returnPolicy: data.retunRefundPolicy,\n      connectBrand: data.requirementsForRetailers,\n    };\n    if (formData.connectBrand == '') {\n      delete formData.connectBrand;\n    }\n    dispatch(updatePreferences(formData));\n  };\n\n  return (\n    <div className=\"pc_tabs-content tabs_body\">\n      <div className=\"products_content\">\n        <div className=\"products_head mp-head\">\n          <div className=\"products_head-content\">\n            <div className=\"title\">\n              <h1 className=\"m-0\">Preferences</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"products_body\">\n          <div className=\"content_area\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div id=\"preferences\">\n                <div className=\"preferences_info\">\n                  <h2>\n                    <span>\n                      Wholesale Pricing <span className=\"asterisk-red\">*</span>\n                    </span>\n                    <div className=\"tooltip\">\n                      <div className=\"tooltip-icon\">\n                        <img src={Info} className=\"icon\" />\n                      </div>\n                      <div className=\"tooltip_text\">\n                        <p className=\"mb-0\">\n                          When products are imported into ShopDot, we will\n                          calculate the wholesale pricing (WSP) by using this\n                          percentage of the MSRP. You can still make edits to\n                          WSP on the product variant level. Modifying this\n                          percentage will not have an effect on the WSP for\n                          products that have already been imported into ShopDot.\n                        </p>\n                      </div>\n                    </div>\n                  </h2>\n                  <div className=\"form-area form-area-full\">\n                    <div className=\"form-input preferences-item\">\n                      <h4>\n                        Set your wholesale price based on a percentage of the\n                        retail price.\n                      </h4>\n                    </div>\n                    <div className=\"form-input preferences-slider\">\n                      <div className=\"wp-item mt-5\">\n                        <div className=\"wp-left\">\n                          Wholesale Price Percentage\n                        </div>\n                        <div className=\"wp-right\">\n                          <span className=\"percentage-lbl\">%</span>\n                          <input\n                            type=\"number\"\n                            name=\"wholesalePercentage\"\n                            className=\"slider\"\n                            {...register('wholesalePercentage')}\n                          />\n                        </div>\n                        {errors?.wholesalePercentage && (\n                          <span className=\"error-text\">\n                            {errors?.wholesalePercentage?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"wp-item srp\">\n                        <div className=\"wp-left \">\n                          <span className=\"samle-retail-price\">\n                            Sample Retail Price\n                          </span>\n                          <label>\n                            <span>$</span>100\n                          </label>\n                        </div>\n                        <div className=\"wp-right\">\n                          <p>\n                            WSP is the wholesale price that retailers will pay\n                            you for the product.\n                          </p>\n                          <label>\n                            <span>$</span>\n                            <span id=\"wpValue\">{wholesalePercentage}</span>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2>\n                  <span>\n                    Retail Pricing <span className=\"asterisk-red\">*</span>{' '}\n                  </span>\n                </h2>\n                <div className=\"form-area\">\n                  <div className=\"form-input preferences-item\">\n                    <div className=\"retail-flex-item\">\n                      <label>Retail Pricing Flexibility</label>\n                      <div className=\"tooltip\">\n                        <div className=\"tooltip-icon\">\n                          <img src={Info} className=\"icon\" />\n                        </div>\n                        <div className=\"tooltip_text\">\n                          <p className=\"mb-0\">\n                            This information will be displayed on your brand\n                            profile.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <Controller\n                      name=\"returnPricing\"\n                      control={control}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          placeholder=\"\"\n                          className=\"basic-single\"\n                          classNamePrefix=\"select\"\n                          styles={categoryStyle}\n                          components={{\n                            IndicatorSeparator: () => null,\n                          }}\n                          theme={(theme) => ({\n                            ...theme,\n                            colors: {\n                              ...theme.colors,\n                              primary25: '#fbf5f0',\n                              primary: '#bd6f34',\n                            },\n                          })}\n                          options={options}\n                        />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2>\n                  <span>\n                    Inventory Buffer <span className=\"asterisk-red\">*</span>{' '}\n                  </span>\n                </h2>\n                <div className=\"form-area form-area-full\">\n                  <div className=\"form-input preferences-item\">\n                    <h4>\n                      Set a percentage of the inventory in your eCommerce store\n                      that will be published and sold in ShopDot.\n                    </h4>\n                  </div>\n                  <div className=\"form-input preferences-slider\">\n                    <div className=\"wp-item mt-5\">\n                      <div className=\"wp-left\">Inventory Buffer Percentage</div>\n                      <div className=\"wp-right\">\n                        <span className=\"percentage-lbl\">%</span>\n                        <input\n                          type=\"number\"\n                          name=\"inventoryPercentage\"\n                          className=\"slider\"\n                          {...register('inventoryPercentage')}\n                        />\n                      </div>\n                      {errors?.inventoryPercentage && (\n                        <span className=\"error-text\">\n                          {errors?.inventoryPercentage?.message}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"wp-item srp\">\n                      <div className=\"wp-left \">\n                        <span className=\"samle-retail-price\">\n                          Sample Shopify Inventory\n                        </span>\n                        <label>100</label>\n                      </div>\n                      <div className=\"wp-right\">\n                        <p>\n                          ShopDot Inventory is the inventory available to your\n                          retailers in ShopDot.\n                        </p>\n                        <label id=\"ibValue\">{inventoryPercentage}</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2>\n                  <span>\n                    Return and Refund Policy{' '}\n                    <span className=\"asterisk-red\">*</span>\n                  </span>\n                </h2>\n                <div className=\"form-area form-area-full\">\n                  <div className=\"form-input return_select-item\">\n                    <h4>\n                      <span>\n                        You can use this section to define the standard return\n                        and refund policy for your ShopDot orders.\n                      </span>\n                      <div className=\"tooltip\">\n                        <div className=\"tooltip-icon\">\n                          <img src={Info} className=\"icon\" />\n                        </div>\n                        <div className=\"tooltip_text\">\n                          <p className=\"mb-0\">\n                            This return and refund policy is universal and will\n                            apply to all of your products.\n                          </p>\n                        </div>\n                      </div>\n                    </h4>\n                    <div className=\"pe_radio mt-2\">\n                      <label className=\"radiobox\">\n                        <input\n                          type=\"radio\"\n                          control={control}\n                          name=\"retunRefundPolicy\"\n                          value=\"yes\"\n                          {...register('retunRefundPolicy', {\n                            required: true,\n                          })}\n                        />\n                        <div className=\"radiobox-text\">\n                          <span> No returns or refunds</span>\n                        </div>\n                      </label>\n                      <label className=\"radiobox\">\n                        <input\n                          type=\"radio\"\n                          control={control}\n                          name=\"retunRefundPolicy\"\n                          value=\"no\"\n                          {...register('retunRefundPolicy', {\n                            required: true,\n                          })}\n                        />\n\n                        <div className=\"radiobox-text\">\n                          <span>\n                            Returns and refunds are accepted on a case-by-case\n                            basis\n                          </span>\n                          <div className=\"tooltip\">\n                            <div className=\"tooltip-icon\">\n                              <img src={Info} className=\"icon\" />\n                            </div>\n                            <div className=\"tooltip_text\">\n                              <p className=\"mb-0\">\n                                Retailers will have to message you to see if an\n                                order is eligible for a return or refund.\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </label>\n                      {errors?.retunRefundPolicy && (\n                        <span className=\"error-text\">\n                          {errors?.retunRefundPolicy?.message}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2 className=\"box-shadow-none\">\n                  <span>\n                    Requirements for retailers who want to connect with your\n                    brand{' '}\n                  </span>\n                </h2>\n                <div className=\"form-area form-area-full\">\n                  <div className=\"form-input\">\n                    <textarea\n                      name=\"requirementsForRetailers\"\n                      rows=\"8\"\n                      className=\"text-area\"\n                      placeholder=\"\"\n                      {...register('requirementsForRetailers', {\n                        required: false,\n                      })}\n                    ></textarea>\n                  </div>\n                  {errors?.requirementsForRetailers && (\n                    <span className=\"error-text\">\n                      {errors?.requirementsForRetailers?.message}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-area\">\n                <div className=\"form-input form-submit\">\n                  <button\n                    className=\"button button-grey cancel\"\n                    onClick={() => reset()}\n                  >\n                    Cancel\n                  </button>\n                  <button className=\"button\" type=\"submit\">\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n"],"names":["selectPreferenceData","state","preference","preferenceData","PreferencesValidationSchema","yup","shape","wholesalePercentage","typeError","required","min","max","inventoryPercentage","retunRefundPolicy","nullable","requirementsForRetailers","categoryStyle","control","styles","_objectSpread","boxShadow","minHeight","container","style","marginTop","marginRight","options","value","label","BrandPreference","_errors$wholesalePerc","_errors$inventoryPerc","_errors$retunRefundPo","_errors$requirementsF","_useForm","useForm","resolver","yupResolver","defaultValues","returnPricing","connectBrand","register","watch","reset","handleSubmit","errors","formState","dispatch","useDispatch","useSelector","selectUserDetails","brandProfileDetails","selectBrandProfileDetails","useEffect","_brandProfileDetails$","getPreferencesAction","brand_profile","id","console","log","initalCall","_reset","wholesale_pricing","_defineProperty","inventory_buffer","return_policy","connect_brand","_jsxs","className","children","_jsx","onSubmit","data","_brandProfileDetails$2","formData","brand_id","wholesalePricing","retailerPricing","inventoryBuffer","returnPolicy","updatePreferences","src","Info","type","name","message","Controller","render","_ref","field","Select","placeholder","classNamePrefix","components","IndicatorSeparator","theme","colors","primary25","primary","rows","onClick","ToastContainer"],"sourceRoot":""}