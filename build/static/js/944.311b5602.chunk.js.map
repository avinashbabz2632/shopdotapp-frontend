{"version":3,"file":"static/js/944.311b5602.chunk.js","mappings":"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","sources":["pages/Brand/images/icons/plus.svg","pages/Brand/Settings/Paid/BusinessRepresentative.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.8332 6.83335H6.83317V11.8334H5.1665V6.83335H0.166504V5.16669H5.1665V0.166687H6.83317V5.16669H11.8332V6.83335Z\",\n    fill: \"#B5521C\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.d69a2b61fa926f539faf46788604006f.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable react/prop-types */\nimport React, { useEffect, Fragment, useMemo } from 'react';\nimport Select from 'react-select';\nimport { useForm, Controller, useFieldArray } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setRepresentativeDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSlice';\nimport {\n    selectGettingPaidPreferance,\n    selectRepresentativeDetails,\n    selectBusinessDetails,\n} from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport {\n    BusinessRepresentativeValidationSchema,\n    getRepresentativeValidation,\n} from './ValidationSchema';\nimport rightArrow from '../../../../assets/images/icons/Vector.11.svg';\nimport info from '../../images/icons/icon-info-red.svg';\nimport plusprimary from '../../images/icons/plus.svg';\nimport {\n    countryOptions,\n    stateIncorporationOptions,\n    identityOptions,\n    categoryStyle,\n    ExampleCustomInput,\n} from '../../common/utils/utils';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport default function BusinessRepresentative({\n    setIsEdited,\n    isEdited,\n    handleChangeTab,\n    handleConfirmationModelClose,\n}) {\n    const businessDetails = useSelector(selectBusinessDetails);\n    const personalDetails = useSelector(selectRepresentativeDetails);\n    const gettingPaidPreferance = useSelector(selectGettingPaidPreferance);\n    const dispatch = useDispatch();\n\n    const {\n        control,\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        setError,\n        watch,\n        clearErrors,\n        formState: { errors, isValid },\n    } = useForm({\n        resolver: yupResolver(\n            gettingPaidPreferance?.publiclyTraded === 'yes'\n                ? BusinessRepresentativeValidationSchema\n                : getRepresentativeValidation()\n        ),\n        defaultValues: {\n            representativeDetails: [\n                {\n                    fname: '',\n                    lname: '',\n                    phoneNumber: '',\n                    ssn: '',\n                    dob: '',\n                    email: '',\n                    addressLine1: '',\n                    addressLine2: '',\n                    countryAddress: countryOptions[0],\n                    stateAddress: null,\n                    zipcode: '',\n                    secondaryIdentificationType: null,\n                    soInsurence: null,\n                    idNumber: '',\n                    UScitizen: 'yes',\n                    percentageOwnership: '',\n                },\n            ],\n        },\n        mode: 'onChange',\n        shouldFocusError: true,\n    });\n\n    const { fields, append, remove } = useFieldArray({\n        control,\n        name: 'representativeDetails',\n    });\n\n    useEffect(() => {\n        const isFormValuePresent =\n            personalDetails && personalDetails.length > 0;\n        if (isFormValuePresent) {\n            reset({\n                representativeDetails: personalDetails.map((ele) => {\n                    return { ...ele, dob: new Date(ele?.dob) };\n                }),\n            });\n        }\n\n        return () => {\n            setIsEdited(false);\n        };\n    }, [isEdited]);\n\n    const onSubmit = (data) => {\n        console.log(\n            'Business Representative(page-2)',\n            data?.representativeDetails\n        );\n        dispatch(setRepresentativeDetails(data?.representativeDetails));\n        reset();\n        handleChangeTab('3');\n    };\n\n    const handlePhoneChange = (event, i) => {\n        const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n        let formattedValue = '';\n        if (rawValue.length < 4) {\n            formattedValue = rawValue;\n        } else if (rawValue.length < 7) {\n            formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n        } else {\n            formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(\n                3,\n                6\n            )}-${rawValue.slice(6, 10)}`;\n        }\n        setValue(`representativeDetails.${i}.phoneNumber`, formattedValue);\n        if (formattedValue === '000-000-0000') {\n            setError(`representativeDetails.${i}.phoneNumber`, {\n                type: 'custom',\n                message:\n                    'Should be in XXX-XXX-XXXX format and Cannot be all zeroes.',\n            });\n        } else if (formattedValue.length < 12) {\n            setError(`representativeDetails.${i}.phoneNumber`, {\n                type: 'custom',\n                message: 'Phone should be 10 digits.',\n            });\n        } else {\n            clearErrors(`representativeDetails.${i}.phoneNumber`);\n            event.target.blur();\n        }\n    };\n\n    const handleSSNChange = (event, i) => {\n        const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n        let formattedValues = '';\n        if (rawValue.length < 4) {\n            formattedValues = rawValue;\n        } else if (rawValue.length < 6) {\n            formattedValues = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n        } else {\n            formattedValues = `${rawValue.slice(0, 3)}-${rawValue.slice(\n                3,\n                5\n            )}-${rawValue.slice(5, 9)}`;\n        }\n        setValue(`representativeDetails.${i}.ssn`, formattedValues);\n\n        if (!formattedValues) {\n            setError(`representativeDetails.${i}.ssn`, {\n                type: 'custom',\n                message: 'SSN is required',\n            });\n        } else if (formattedValues.length < 3) {\n            setError(`representativeDetails.${i}.ssn`, {\n                type: 'custom',\n                message: 'SSN should be in XXX-XX-XXXX format.',\n            });\n        } else if (formattedValues.length < 11) {\n            setError(`representativeDetails.${i}.ssn`, {\n                type: 'custom',\n                message: 'SSN should be 9 digits',\n            });\n        } else {\n            clearErrors(`representativeDetails.${i}.ssn`);\n            event.target.blur();\n        }\n    };\n\n    const representativeDetailsWatch = watch('representativeDetails');\n\n    const getTotalPercentage = () => {\n        const percentage =\n            (representativeDetailsWatch &&\n                representativeDetailsWatch\n                    .map((ele) => ele?.percentageOwnership)\n                    .reduce(\n                        (acc, currentPrice) => acc + parseFloat(currentPrice),\n                        0\n                    )) ||\n            0;\n        return percentage;\n    };\n\n    const checkTotalPercentage = () => {\n        const totalCent = getTotalPercentage();\n        const isAbletoAddNew = totalCent < 100;\n        return isAbletoAddNew;\n    };\n\n    const disabledSubmitButton = () => {\n        const totalCent = getTotalPercentage();\n        if (gettingPaidPreferance?.publiclyTraded === 'no') {\n            if (businessDetails?.businessCategory?.value === 'partnership') {\n                if (totalCent >= 50) {\n                    return false;\n                }\n                return true;\n            } else if (\n                businessDetails?.businessCategory?.value !==\n                    'single_member_llc' ||\n                businessDetails?.businessCategory?.value !== 'sole_proprietor'\n            ) {\n                if (totalCent >= 25) {\n                    return false;\n                }\n                return true;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    const handleAddRepresentative = (e) => {\n        e.stopPropagation();\n        const isAbletoAddNew = checkTotalPercentage();\n        if (isAbletoAddNew) {\n            append({\n                fname: '',\n                lname: '',\n                phoneNumber: '',\n                ssn: '',\n                dob: '',\n                email: '',\n                addressLine1: '',\n                addressLine2: '',\n                countryAddress: countryOptions[0],\n                stateAddress: null,\n                zipcode: '',\n                secondaryIdentificationType: null,\n                soInsurence: null,\n                idNumber: '',\n                UScitizen: 'yes',\n                percentageOwnership: '',\n            });\n        }\n    };\n\n    return (\n        <form className=\"gp-right\" onSubmit={handleSubmit(onSubmit)}>\n            {fields.map((item, index) => {\n                return (\n                    <Fragment key={item?.id}>\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                            <h3 className=\"heading\">\n                                Business Representative{' '}\n                                <span>#{index + 1}</span>\n                            </h3>\n                        </div>\n                        {gettingPaidPreferance?.publiclyTraded === 'no' ? (\n                            index === 0 ? (\n                                <p>\n                                    As business owner and authorized signer\n                                    please complete the information below.\n                                </p>\n                            ) : (\n                                <p>\n                                    As a business owner complete the information\n                                    below.\n                                </p>\n                            )\n                        ) : (\n                            <p>\n                                As an authorized signer complete the information\n                                below.\n                            </p>\n                        )}\n                        <div className=\"form-area position-relative\">\n                            <button\n                                onClick={() => remove(index)}\n                                className={`button remove-br ${\n                                    index === 0 ? 'd-none' : 'd-block'\n                                }`}\n                            >\n                                Remove\n                            </button>\n                            <div className=\"category-form-input\">\n                                <div className=\"form-input mb-4\">\n                                    <label className=\"form-label\">\n                                        Legal name of business\n                                        representative.&nbsp;\n                                        <span className=\"asterisk-red\">*</span>\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mb-0\"\n                                        id=\"\"\n                                        placeholder=\"First name\"\n                                        name={`representativeDetails.${index}.fname`}\n                                        {...register(\n                                            `representativeDetails.${index}.fname`,\n                                            {\n                                                required: true,\n                                            }\n                                        )}\n                                    />\n                                    {errors?.representativeDetails?.[index]\n                                        ?.fname && (\n                                        <span className=\"error-text\">\n                                            {\n                                                errors?.representativeDetails?.[\n                                                    index\n                                                ]?.fname?.message\n                                            }\n                                        </span>\n                                    )}\n                                </div>\n                                <div className=\"form-input mb-4\">\n                                    <label className=\"form-label\">&nbsp;</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mb-0\"\n                                        id=\"\"\n                                        placeholder=\"Last name\"\n                                        name={`representativeDetails.${index}.lname`}\n                                        {...register(\n                                            `representativeDetails.${index}.lname`,\n                                            {\n                                                required: true,\n                                            }\n                                        )}\n                                    />\n                                    {errors?.representativeDetails?.[index]\n                                        ?.lname && (\n                                        <span className=\"error-text\">\n                                            {\n                                                errors?.representativeDetails?.[\n                                                    index\n                                                ]?.lname?.message\n                                            }\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"form-input mb-4\">\n                                <label className=\"form-label\">\n                                    Phone number&nbsp;\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n                                <Controller\n                                    name={`representativeDetails.${index}.phoneNumber`}\n                                    control={control}\n                                    render={({\n                                        field: { onChange, onBlur, value },\n                                    }) => (\n                                        <input\n                                            type=\"tel\"\n                                            value={value}\n                                            className=\"form-control mb-0\"\n                                            placeholder=\"(123) 456-7899\"\n                                            onChange={(e) => {\n                                                onChange(e);\n                                                handlePhoneChange(e, index);\n                                            }}\n                                            onBlur={onBlur}\n                                        />\n                                    )}\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.phoneNumber && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.phoneNumber?.message\n                                        }\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"form-input mb-4\">\n                                <label className=\"form-label\">\n                                    Social Security Number (SSN)&nbsp;\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n                                <Controller\n                                    name={`representativeDetails.${index}.ssn`}\n                                    control={control}\n                                    render={({\n                                        field: { onChange, onBlur, value },\n                                    }) => (\n                                        <input\n                                            type=\"tel\"\n                                            value={value}\n                                            placeholder=\"123-44-5678\"\n                                            className=\"form-control mb-0\"\n                                            onChange={(e) => {\n                                                onChange(e);\n                                                handleSSNChange(e, index);\n                                            }}\n                                            onBlur={onBlur}\n                                        />\n                                    )}\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.ssn && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.ssn?.message\n                                        }\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"form-input mb-4\">\n                                <label className=\"form-label\">\n                                    Date of birth&nbsp;\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n\n                                <Controller\n                                    name={`representativeDetails.${index}.dob`}\n                                    control={control}\n                                    render={({\n                                        field: { onChange, onBlur, value },\n                                        ...props\n                                    }) => (\n                                        <>\n                                            <DatePicker\n                                                closeOnScroll\n                                                maxDate={new Date()}\n                                                customInput={\n                                                    <ExampleCustomInput />\n                                                }\n                                                placeholderText=\"MM-DD-YYYY\"\n                                                dateFormat=\"MM-dd-yyyy\"\n                                                showPopperArrow={false}\n                                                {...props}\n                                                onBlur={onBlur}\n                                                onChange={onChange}\n                                                selected={value}\n                                            />\n                                        </>\n                                    )}\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.dob && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.dob?.message\n                                        }\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"form-input mb-4\">\n                                <label className=\"form-label\">\n                                    Email address{' '}\n                                    <span className=\"asterisk-red\">*</span>{' '}\n                                </label>\n                                <input\n                                    name={`representativeDetails.${index}.email`}\n                                    type=\"text\"\n                                    className=\"form-control mb-0\"\n                                    placeholder=\"yourname@email.com\"\n                                    {...register(\n                                        `representativeDetails.${index}.email`,\n                                        {\n                                            required: true,\n                                        }\n                                    )}\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.email && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.email?.message\n                                        }\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"form-input mb-4\">\n                                <label className=\"form-label\">\n                                    Address line 1{' '}\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control mb-0\"\n                                    name={`representativeDetails.${index}.addressLine1`}\n                                    {...register(\n                                        `representativeDetails.${index}.addressLine1`,\n                                        {\n                                            required: true,\n                                        }\n                                    )}\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.addressLine1 && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.addressLine1?.message\n                                        }\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"form-input mb-4\">\n                                <label className=\"form-label\">\n                                    Address line 2\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control mb-0\"\n                                    name={`representativeDetails.${index}.addressLine2`}\n                                    {...register(\n                                        `representativeDetails.${index}.addressLine2`,\n                                        {\n                                            required: false,\n                                        }\n                                    )}\n                                    placeholder=\"\"\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.addressLine2 && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.addressLine2?.message\n                                        }\n                                    </span>\n                                )}\n                            </div>\n                            <div className=\"category-form-input mb-4\">\n                                <div className=\"form-input\">\n                                    <label className=\"form-label\">\n                                        Country{' '}\n                                        <span className=\"asterisk-red\">*</span>\n                                    </label>\n                                    <Controller\n                                        name={`representativeDetails.${index}.countryAddress`}\n                                        control={control}\n                                        render={({ field }) => (\n                                            <Select\n                                                {...field}\n                                                className=\"basic-single_top\"\n                                                classNamePrefix=\"select\"\n                                                styles={categoryStyle}\n                                                components={{\n                                                    IndicatorSeparator: () =>\n                                                        null,\n                                                }}\n                                                theme={(theme) => ({\n                                                    ...theme,\n                                                    colors: {\n                                                        ...theme.colors,\n                                                        primary25: '#fbf5f0',\n                                                        primary: '#bd6f34',\n                                                    },\n                                                })}\n                                                options={countryOptions}\n                                            />\n                                        )}\n                                    />\n                                    {errors?.representativeDetails?.[index]\n                                        ?.countryAddress && (\n                                        <span className=\"error-text\">\n                                            {\n                                                errors?.representativeDetails?.[\n                                                    index\n                                                ]?.countryAddress?.message\n                                            }\n                                        </span>\n                                    )}\n                                </div>\n                                <div className=\"form-input mb-2\">\n                                    <label className=\"form-label\">\n                                        State{' '}\n                                        <span className=\"asterisk-red\">*</span>\n                                    </label>\n                                    <Controller\n                                        name={`representativeDetails.${index}.stateAddress`}\n                                        control={control}\n                                        render={({ field }) => (\n                                            <Select\n                                                {...field}\n                                                className=\"basic-single_top\"\n                                                classNamePrefix=\"select\"\n                                                placeholder=\"Select State\"\n                                                styles={categoryStyle}\n                                                components={{\n                                                    IndicatorSeparator: () =>\n                                                        null,\n                                                }}\n                                                theme={(theme) => ({\n                                                    ...theme,\n                                                    colors: {\n                                                        ...theme.colors,\n                                                        primary25: '#fbf5f0',\n                                                        primary: '#bd6f34',\n                                                    },\n                                                })}\n                                                options={\n                                                    stateIncorporationOptions\n                                                }\n                                            />\n                                        )}\n                                    />\n                                    {errors?.representativeDetails?.[index]\n                                        ?.stateAddress && (\n                                        <span className=\"error-text\">\n                                            {\n                                                errors?.representativeDetails?.[\n                                                    index\n                                                ]?.stateAddress?.message\n                                            }\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"category-form-input mb-4\">\n                                <div className=\"form-input\">\n                                    <label className=\"form-label\">\n                                        City{' '}\n                                        <span className=\"asterisk-red\">*</span>\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mb-0\"\n                                        id=\"\"\n                                        placeholder=\"New York\"\n                                        name={`representativeDetails.${index}.city`}\n                                        {...register(\n                                            `representativeDetails.${index}.city`,\n                                            {\n                                                required: true,\n                                            }\n                                        )}\n                                    />\n                                    {errors?.representativeDetails?.[index]\n                                        ?.city && (\n                                        <span className=\"error-text\">\n                                            {\n                                                errors?.representativeDetails?.[\n                                                    index\n                                                ]?.city?.message\n                                            }\n                                        </span>\n                                    )}\n                                </div>\n                                <div className=\"form-input\">\n                                    <label className=\"form-label\">\n                                        ZIP{' '}\n                                        <span className=\"asterisk-red\">*</span>\n                                    </label>\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control mb-0\"\n                                        id=\"\"\n                                        placeholder=\"10014\"\n                                        name={`representativeDetails.${index}.zipcode`}\n                                        {...register(\n                                            `representativeDetails.${index}.zipcode`,\n                                            {\n                                                required: true,\n                                            }\n                                        )}\n                                    />\n                                    {errors?.representativeDetails?.[index]\n                                        ?.zipcode && (\n                                        <span className=\"error-text\">\n                                            {\n                                                errors?.representativeDetails?.[\n                                                    index\n                                                ]?.zipcode?.message\n                                            }\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"form-input mb-4 secondary_identification mt-3\">\n                                <label className=\"form-label\">\n                                    Secondary identification&nbsp;\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n                                <Controller\n                                    name={`representativeDetails.${index}.secondaryIdentificationType`}\n                                    control={control}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            placeholder=\"Identification type\"\n                                            className=\"basic-single\"\n                                            classNamePrefix=\"select\"\n                                            styles={categoryStyle}\n                                            components={{\n                                                IndicatorSeparator: () => null,\n                                            }}\n                                            theme={(theme) => ({\n                                                ...theme,\n                                                colors: {\n                                                    ...theme.colors,\n                                                    primary25: '#fbf5f0',\n                                                    primary: '#bd6f34',\n                                                },\n                                            })}\n                                            options={identityOptions}\n                                        />\n                                    )}\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.secondaryIdentificationType && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.secondaryIdentificationType\n                                                ?.message\n                                        }\n                                    </span>\n                                )}\n                                {representativeDetailsWatch?.[index]\n                                    ?.secondaryIdentificationType?.value ===\n                                    'dl' && (\n                                    <div className=\"form-input mb-2 state_issuance mt-2\">\n                                        <Controller\n                                            name={`representativeDetails.${index}.soInsurence`}\n                                            control={control}\n                                            render={({ field }) => (\n                                                <Select\n                                                    {...field}\n                                                    placeholder=\"Select State\"\n                                                    className=\"basic-single\"\n                                                    classNamePrefix=\"select\"\n                                                    styles={categoryStyle}\n                                                    components={{\n                                                        IndicatorSeparator:\n                                                            () => null,\n                                                    }}\n                                                    theme={(theme) => ({\n                                                        ...theme,\n                                                        colors: {\n                                                            ...theme.colors,\n                                                            primary25:\n                                                                '#fbf5f0',\n                                                            primary: '#bd6f34',\n                                                        },\n                                                    })}\n                                                    options={\n                                                        stateIncorporationOptions\n                                                    }\n                                                />\n                                            )}\n                                        />\n                                        {errors?.representativeDetails?.[index]\n                                            ?.soInsurence && (\n                                            <span className=\"error-text\">\n                                                {\n                                                    errors\n                                                        ?.representativeDetails?.[\n                                                        index\n                                                    ]?.soInsurence?.message\n                                                }\n                                            </span>\n                                        )}\n                                    </div>\n                                )}\n\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control mb-2\"\n                                    placeholder=\"ID Number\"\n                                    name={`representativeDetails.${index}.idNumber`}\n                                    {...register(\n                                        `representativeDetails.${index}.idNumber`,\n                                        {\n                                            required: true,\n                                        }\n                                    )}\n                                />\n                                {errors?.representativeDetails?.[index]\n                                    ?.idNumber && (\n                                    <span className=\"error-text\">\n                                        {\n                                            errors?.representativeDetails?.[\n                                                index\n                                            ]?.idNumber?.message\n                                        }\n                                    </span>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"form-input return_select-item mb-4 radio-row\">\n                            <p className=\"mb-0\">\n                                U.S. citizen{' '}\n                                <span className=\"asterisk-red\">*</span>\n                            </p>\n                            <div className=\"mt-2 radio-flex\">\n                                <label className=\"radiobox\">\n                                    <input\n                                        type=\"radio\"\n                                        id=\"citizen\"\n                                        control={control}\n                                        value=\"yes\"\n                                        name={`representativeDetails.${index}.UScitizen`}\n                                        {...register(\n                                            `representativeDetails.${index}.UScitizen`,\n                                            {\n                                                required: true,\n                                            }\n                                        )}\n                                    />\n                                    <div className=\"radiobox-text\">\n                                        <span>Yes</span>\n                                    </div>\n                                </label>\n                                <label className=\"radiobox\">\n                                    <input\n                                        type=\"radio\"\n                                        id=\"citizen-one\"\n                                        control={control}\n                                        value=\"no\"\n                                        name={`representativeDetails.${index}.UScitizen`}\n                                        {...register(\n                                            `representativeDetails.${index}.UScitizen`,\n                                            {\n                                                required: true,\n                                            }\n                                        )}\n                                    />\n                                    <div className=\"radiobox-text\">\n                                        <span>No</span>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                        <div>\n                            <div\n                                className={`form-input mb-4 percentage-input form-area ${\n                                    gettingPaidPreferance?.publiclyTraded ===\n                                    'no'\n                                        ? 'd-block'\n                                        : 'd-none'\n                                }`}\n                            >\n                                <label className=\"form-label\">\n                                    Percentage ownership&nbsp;\n                                    <span className=\"asterisk-red\">*</span>\n                                </label>\n                                <div className=\"wp-right\">\n                                    <span className=\"percentage-lbl\">%</span>\n                                    <Controller\n                                        name={`representativeDetails.${index}.percentageOwnership`}\n                                        control={control}\n                                        rules={{\n                                            required: true,\n                                        }}\n                                        render={({\n                                            field: { onChange, onBlur, value },\n                                        }) => (\n                                            <input\n                                                type=\"number\"\n                                                value={value}\n                                                placeholder=\"14\"\n                                                className=\"form-control\"\n                                                onChange={(e) => {\n                                                    onChange(e);\n                                                }}\n                                                onBlur={onBlur}\n                                            />\n                                        )}\n                                    />\n                                </div>\n                            </div>\n                            {errors?.representativeDetails?.[index]\n                                ?.percentageOwnership && (\n                                <div className=\"form-area\">\n                                    <div\n                                        className=\"alert alert-error sd_alert-error\"\n                                        role=\"alert\"\n                                    >\n                                        <div className=\"icon\">\n                                            <img src={info} alt=\"info\" />\n                                        </div>\n                                        <div>\n                                            {\n                                                errors?.representativeDetails?.[\n                                                    index\n                                                ]?.percentageOwnership?.message\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </Fragment>\n                );\n            })}\n            <div className=\"form-area position-relative\">\n                {gettingPaidPreferance?.publiclyTraded === 'no' &&\n                    (businessDetails?.businessCategory?.value ===\n                    'partnership' ? (\n                        <p>\n                            <strong>\n                                Complete for any individuals with 25% or more\n                                ownership. If none, add additional business\n                                owners (with less that 25% ownership share)\n                                until the combined total of all reported\n                                business owners&apos; share of the business is\n                                greater than 50%.\n                            </strong>\n                        </p>\n                    ) : businessDetails?.businessCategory?.value !==\n                          'single_member_llc' &&\n                      businessDetails?.businessCategory?.value !==\n                          'sole_proprietor' ? (\n                        <p>\n                            <strong>\n                                Complete for any individuals with 25% or more\n                                ownership of the business entity.\n                            </strong>\n                        </p>\n                    ) : null)}\n\n                {gettingPaidPreferance?.publiclyTraded === 'no' &&\n                    businessDetails?.businessCategory?.value !==\n                        'single_member_llc' &&\n                    businessDetails?.businessCategory?.value !==\n                        'sole_proprietor' && (\n                        <button\n                            type=\"button\"\n                            onClick={(e) => handleAddRepresentative(e)}\n                            className={\n                                'button button-border large add-owner mt-0'\n                            }\n                        >\n                            <img className=\"icon\" src={plusprimary} /> Add a\n                            business owner\n                        </button>\n                    )}\n            </div>\n\n            <div className=\"form-area\">\n                <div className=\"form-input form-submit\">\n                    <button\n                        type=\"button\"\n                        className=\"button button-grey cancel\"\n                        onClick={() => handleConfirmationModelClose()}\n                    >\n                        Back\n                    </button>\n                    <button\n                        className=\"button summary-icon\"\n                        type=\"submit\"\n                        disabled={!isValid || disabledSubmitButton()}\n                    >\n                        Save and Next\n                        <img src={rightArrow} alt=\"Arrow\" />\n                    </button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nBusinessRepresentative.propTypes = {\n    isEdited: PropTypes.bool,\n    handleChangeTab: PropTypes.func,\n    setIsEdited: PropTypes.func,\n    handleConfirmationModelClose: PropTypes.func,\n};\n"],"names":["BusinessRepresentative","_ref","_businessDetails$busi4","_businessDetails$busi5","_businessDetails$busi6","_businessDetails$busi7","_businessDetails$busi8","setIsEdited","isEdited","handleChangeTab","handleConfirmationModelClose","businessDetails","useSelector","selectBusinessDetails","personalDetails","selectRepresentativeDetails","gettingPaidPreferance","selectGettingPaidPreferance","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","publiclyTraded","BusinessRepresentativeValidationSchema","getRepresentativeValidation","defaultValues","representativeDetails","fname","lname","phoneNumber","ssn","dob","email","addressLine1","addressLine2","countryAddress","countryOptions","stateAddress","zipcode","secondaryIdentificationType","soInsurence","idNumber","UScitizen","percentageOwnership","mode","shouldFocusError","control","register","handleSubmit","reset","setValue","setError","watch","clearErrors","_useForm$formState","formState","errors","isValid","_useFieldArray","useFieldArray","name","fields","append","remove","useEffect","length","map","ele","_objectSpread","Date","representativeDetailsWatch","getTotalPercentage","reduce","acc","currentPrice","parseFloat","handleAddRepresentative","e","stopPropagation","_jsxs","className","onSubmit","data","console","log","setRepresentativeDetails","children","item","index","_errors$representativ","_errors$representativ2","_errors$representativ3","_errors$representativ4","_errors$representativ5","_errors$representativ6","_errors$representativ7","_errors$representativ8","_errors$representativ9","_errors$representativ10","_errors$representativ11","_errors$representativ12","_errors$representativ13","_errors$representativ14","_errors$representativ15","_errors$representativ16","_errors$representativ17","_errors$representativ18","_errors$representativ19","_errors$representativ20","_errors$representativ21","_errors$representativ22","_errors$representativ23","_errors$representativ24","_errors$representativ25","_errors$representativ26","_errors$representativ27","_errors$representativ28","_errors$representativ29","_errors$representativ30","_errors$representativ31","_errors$representativ32","_errors$representativ33","_errors$representativ34","_errors$representativ35","_errors$representativ36","_errors$representativ37","_errors$representativ38","_errors$representativ39","_errors$representativ40","_errors$representativ41","_errors$representativ42","_errors$representativ43","_errors$representativ44","_errors$representativ45","_errors$representativ46","_errors$representativ47","_errors$representativ48","_errors$representativ49","_errors$representativ50","_errors$representativ51","_errors$representativ52","_errors$representativ53","_errors$representativ54","_errors$representativ55","_errors$representativ56","_errors$representativ57","_errors$representativ58","_errors$representativ59","_errors$representativ60","_errors$representativ61","_errors$representativ62","_errors$representativ63","_errors$representativ64","_errors$representativ65","_representativeDetail","_representativeDetail2","_errors$representativ66","_errors$representativ67","_errors$representativ68","_errors$representativ69","_errors$representativ70","_errors$representativ71","_errors$representativ72","_errors$representativ73","_errors$representativ74","_errors$representativ75","_errors$representativ76","_errors$representativ77","_errors$representativ78","_errors$representativ79","_errors$representativ80","Fragment","_jsx","onClick","concat","type","id","placeholder","required","message","Controller","render","_ref2","_ref2$field","field","onChange","onBlur","value","event","i","rawValue","target","replace","formattedValue","slice","blur","handlePhoneChange","_ref3","_ref3$field","formattedValues","handleSSNChange","_ref4","_ref4$field","props","_objectWithoutProperties","_excluded","_Fragment","DatePicker","closeOnScroll","maxDate","customInput","ExampleCustomInput","placeholderText","dateFormat","showPopperArrow","selected","_ref5","Select","classNamePrefix","styles","categoryStyle","components","IndicatorSeparator","theme","colors","primary25","primary","options","_ref6","stateIncorporationOptions","city","_ref7","identityOptions","_ref8","rules","_ref9","_ref9$field","role","src","info","alt","businessCategory","plusprimary","disabled","_businessDetails$busi","_businessDetails$busi2","_businessDetails$busi3","totalCent","disabledSubmitButton","rightArrow"],"sourceRoot":""}