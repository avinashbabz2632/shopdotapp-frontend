{"version":3,"file":"static/js/7130.eb55a093.chunk.js","mappings":"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","sources":["pages/Brand/images/icons/icon-info-red.svg","pages/Brand/Settings/Paid/businessOwnerModel.js","pages/Brand/Settings/Paid/AuthorizedSignerModel.js","pages/Brand/Settings/Paid/ConfirmationModel.js","pages/Brand/Settings/Paid/index.js","redux/Brand/GettingPaid/gettingPaidSelector.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconInfoRed(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 60,\n    height: 60,\n    viewBox: \"0 0 60 60\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27 39H33V45H27V39ZM27 15H33V33H27V15ZM29.97 0C13.41 0 0 13.44 0 30C0 46.56 13.41 60 29.97 60C46.56 60 60 46.56 60 30C60 13.44 46.56 0 29.97 0ZM30 54C16.74 54 6 43.26 6 30C6 16.74 16.74 6 30 6C43.26 6 54 16.74 54 30C54 43.26 43.26 54 30 54Z\",\n    fill: \"#d33e3e\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconInfoRed);\nexport default __webpack_public_path__ + \"static/media/icon-info-red.a6ae908a21e4fa18331dada2321e25a2.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport closeBlackIcon from '../../images/icons/close-icon.svg';\nimport info from '../../images/icons/icon-info-red.svg';\nimport { Link } from 'react-router-dom';\n\nfunction BusinessOwnerModel(props) {\n    return (\n        <>\n            <Modal\n                ariaHideApp={false}\n                isOpen={props.modalIsOpen}\n                onRequestClose={props.opencloseRetailerModal}\n            >\n                <div className=\"popup popup-confirm popup-authorized-owner active\">\n                    <div className=\"popup_wrapper\">\n                        <div className=\"popup_content\">\n                            <div\n                                className=\"popup-close\"\n                                onClick={props.opencloseRetailerModal}\n                            >\n                                <div className=\"icon close\">\n                                    <img src={closeBlackIcon} alt=\"Close\" />\n                                </div>\n                            </div>\n                            <div className=\"popup_content-header\">\n                                <img\n                                    src={info}\n                                    alt=\"Close\"\n                                    className=\"icon_info icon\"\n                                />\n                                <div className=\"h1\">Add Business Owner</div>\n                            </div>\n                            <div className=\"popup_content-body text-center\">\n                                <p className=\"mb-4\">\n                                    Please add a business owner (25% or more\n                                    ownership) who is authorized to complete and\n                                    sign the Priority application.{' '}\n                                    <Link\n                                        to=\"/brand/setting/users\"\n                                        className=\"link-text\"\n                                    >\n                                        Click here\n                                    </Link>{' '}\n                                    to add the business owner now.\n                                </p>\n                            </div>\n                            <div className=\"popup_content-footer\">\n                                <button\n                                    className=\"popup-close button button-dark\"\n                                    onClick={props.opencloseRetailerModal}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n}\n\nexport default React.memo(BusinessOwnerModel);\n\nBusinessOwnerModel.propTypes = {\n    modalIsOpen: PropTypes.bool,\n    opencloseRetailerModal: PropTypes.func,\n};\n","import React from 'react';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport closeBlackIcon from '../../images/icons/close-icon.svg';\nimport info from '../../images/icons/icon-info-red.svg';\nimport { Link } from 'react-router-dom';\n\nfunction AuthorizedSignerModel(props) {\n  return (\n    <>\n      <Modal\n        ariaHideApp={false}\n        isOpen={props.modalIsOpen}\n        onRequestClose={props.opencloseRetailerModal}\n      >\n        <div className=\"popup popup-confirm popup-authorized-signer active\">\n          <div className=\"popup_wrapper\">\n            <div className=\"popup_content\">\n              <div\n                className=\"popup-close\"\n                onClick={props.opencloseRetailerModal}\n              >\n                <div className=\"icon close\">\n                  <img src={closeBlackIcon} alt=\"Close\" />\n                </div>\n              </div>\n              <div className=\"popup_content-header\">\n                <img src={info} alt=\"Close\" className=\"icon_info icon\" />\n                <div className=\"h1\">Add Authorized Signer</div>\n              </div>\n              <div className=\"popup_content-body text-center\">\n                <p className=\"mb-4\">\n                  {props.type2\n                    ? `Please add a business owner (25% or more ownership) who is authorized to complete and sign the Priority application. `\n                    : `Please add an authorized signer as a ShopDot user to complete and sign the application. `}\n                  <Link to=\"/brand/setting/users\" className=\"link-text\">\n                    Click here\n                  </Link>{' '}\n                  {props.type2\n                    ? `to add the business owner now.`\n                    : `to add this person so they can complete the application.`}\n                </p>\n              </div>\n              <div className=\"popup_content-footer\">\n                <button\n                  onClick={() => props.opencloseRetailerModal()}\n                  className=\"popup-close button button-dark\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default AuthorizedSignerModel;\nAuthorizedSignerModel.propTypes = {\n  modalIsOpen: PropTypes.bool,\n  opencloseRetailerModal: PropTypes.func,\n};\n","import React from 'react';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport closeBlackIcon from '../../images/icons/close-icon.svg';\nimport info from '../../images/icons/icon-info-red.svg';\n\nfunction ConfirmationModel(props) {\n    return (\n        <>\n            <Modal\n                ariaHideApp={false}\n                isOpen={props.modalIsOpen}\n                onRequestClose={props.closeConfirmationModal}\n                handleConfirmModel={props.handleConfirmModel}\n            >\n                <div className=\"popup popup-confirm popup-confirm-push active\">\n                    <div className=\"popup_wrapper\">\n                        <div className=\"popup_content\">\n                            <div className=\"popup-close\">\n                                <img\n                                    src={closeBlackIcon}\n                                    alt=\"close\"\n                                    className=\"icon close\"\n                                    onClick={() =>\n                                        props.closeConfirmationModal()\n                                    }\n                                />\n                            </div>\n                            <div className=\"popup_content-header\">\n                                <img\n                                    src={info}\n                                    alt=\"info\"\n                                    className=\"icon icon_info\"\n                                />\n                                <div className=\"h1\">Confirmation Required</div>\n                            </div>\n                            <div className=\"popup_content-body text-center\">\n                                <p>\n                                    Do you want to discard your changes? <br />\n                                    Your changes will be not saved if you click\n                                    the <span className=\"link-text\">\n                                        Back\n                                    </span>{' '}\n                                    button.\n                                </p>\n                            </div>\n                            <div className=\"popup_content-footer\">\n                                <button\n                                    className=\"button button-dark ignore-cancel\"\n                                    onClick={() =>\n                                        props.closeConfirmationModal()\n                                    }\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    onClick={() => props.handleConfirmModel()}\n                                    className=\"button button-orange push\"\n                                >\n                                    Confirm\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n}\n\nexport default React.memo(ConfirmationModel);\nConfirmationModel.propTypes = {\n    modalIsOpen: PropTypes.bool,\n    closeConfirmationModal: PropTypes.func,\n    handleConfirmModel: PropTypes.func,\n};\n","import React, { lazy, useState, Suspense, useCallback, useEffect } from 'react';\nimport gpLogo from '../../images/gp-logo.jpg';\nimport BusinessOwnerModel from './businessOwnerModel';\nimport AuthorizedSignerModel from './AuthorizedSignerModel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setGettingPaidPreferance,\n  setRepresentativeDetails,\n  setBankDetails,\n  setBusinessDetails,\n  gettingPaidResetToInitial,\n} from '../../../../redux/Brand/GettingPaid2/gettingPaidSlice';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport merchantServices from '../../../../../src/assets/merchant.pdf';\nimport ConfirmationModel from './ConfirmationModel';\nimport { isEmpty, isNil } from 'lodash';\nimport {\n  selectBusinessDetails,\n  selectRepresentativeDetails,\n  selectBankDetails,\n} from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport { selectBrandProfileDetails } from '../../../../redux/Brand/Profile/brandProfileSelectors';\n\n//paid component\nconst BusinessDetails = lazy(() => import('./BusinessDetails'));\nconst BankDetails = lazy(() => import('./BankDetails'));\nconst Summary = lazy(() => import('./Summary'));\nconst BusinessRepresentative = lazy(() => import('./BusinessRepresentative'));\nconst GettingPaid = lazy(() => import('./GettingPaid'));\nconst EditBankDetails = lazy(() => import('./EditBankDetails'));\n\nexport default function BrandPaid() {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [modalOpen, setOpen] = useState(false);\n  const [isConfirmBackModel, setIsConfirmBackModel] = useState(false);\n  const [tabCode, setTabCode] = useState('1');\n  const [startingTab, setStartingTab] = useState(false);\n  const [isCompleteApplication, setIsCompleteApplication] = useState(false);\n  const [editBankDetails, setEditBankDetails] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [isEdited, setIsEdited] = useState(false);\n  const [isModelOpen, setIsModelOpen] = useState(false);\n  const businessDetails = useSelector(selectBusinessDetails);\n  const personalDetails = useSelector(selectRepresentativeDetails);\n  const bankDetails = useSelector(selectBankDetails);\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  // eslint-disable-next-line no-shadow\n  const handleChangeTab = (tabCode) => {\n    const myDiv = document.getElementById('content-wrapper');\n    myDiv.scrollTop = 0;\n    setTabCode(tabCode);\n  };\n\n  useEffect(() => {\n    const paymentId = brandProfileDetails?.payment_detail?.id;\n    if (paymentId) {\n      setIsCompleteApplication(true);\n      if (\n        brandProfileDetails?.payment_detail?.external_account_status &&\n        brandProfileDetails?.payment_detail?.merchant_status\n      ) {\n        setIsActive(true);\n      }\n    }\n  }, [brandProfileDetails]);\n\n  const publiclyTraded = watch('publiclyTraded');\n  const authorizedSign = watch('authorizedSign');\n  const businessOwner = watch('businessOwner');\n  useEffect(() => {\n    if (authorizedSign === 'no') {\n      setOpen(true);\n    } else if (publiclyTraded === 'no' && authorizedSign === 'no') {\n      setIsOpen(true);\n    } else if (\n      publiclyTraded === 'no' &&\n      authorizedSign === 'yes' &&\n      businessOwner === 'no'\n    ) {\n      setIsOpen(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [publiclyTraded, authorizedSign, businessOwner]);\n\n  const onSubmit = (data) => {\n    dispatch(setGettingPaidPreferance(data));\n    setStartingTab(true);\n  };\n  const opencloseRetailerModal = useCallback(() => {\n    setIsOpen(!modalIsOpen);\n  }, [modalIsOpen]);\n\n  const opencloseModal = useCallback(() => {\n    setOpen(!modalOpen);\n  }, [modalOpen]);\n\n  const handleConfirmationModelClose = useCallback(() => {\n    setIsConfirmBackModel(false);\n  }, [isConfirmBackModel]);\n\n  const handleConfirmationModelOpen = useCallback(() => {\n    setIsConfirmBackModel(true);\n  }, [isConfirmBackModel]);\n\n  const handleConfirmModel = useCallback(() => {\n    if (Number(tabCode) === 1) {\n      setStartingTab(false);\n      dispatch(setBusinessDetails({}));\n    } else {\n      handleChangeTab(Number(tabCode) - 1);\n      if (Number(tabCode) === 2) {\n        dispatch(setRepresentativeDetails([]));\n      }\n      if (Number(tabCode) === 3) {\n        dispatch(setBankDetails({}));\n      }\n    }\n    setIsConfirmBackModel(false);\n  }, [isConfirmBackModel]);\n\n  const renderTab = () => {\n    const renderComponent = {\n      1: (\n        <BusinessDetails\n          isEdited={isEdited}\n          setIsEdited={setIsEdited}\n          setStartingTab={setStartingTab}\n          handleChangeTab={handleChangeTab}\n          handleConfirmationModelClose={handleConfirmationModelOpen}\n        />\n      ),\n      2: (\n        <BusinessRepresentative\n          isEdited={isEdited}\n          setIsEdited={setIsEdited}\n          handleChangeTab={handleChangeTab}\n          handleConfirmationModelClose={handleConfirmationModelOpen}\n        />\n      ),\n      3: (\n        <BankDetails\n          isEdited={isEdited}\n          setIsEdited={setIsEdited}\n          handleChangeTab={handleChangeTab}\n          handleConfirmationModelClose={handleConfirmationModelOpen}\n        />\n      ),\n      4: (\n        <Summary\n          setIsEdited={setIsEdited}\n          handleChangeTab={handleChangeTab}\n          setIsCompleteApplication={() => {\n            setIsCompleteApplication(true);\n            setIsModelOpen(true);\n          }}\n          handleConfirmationModelClose={handleConfirmationModelOpen}\n        />\n      ),\n    };\n    return renderComponent[tabCode];\n  };\n\n  const renderStartingTab = () => {\n    return (\n      <>\n        <div className=\"form-input preferences-item\">\n          <h4 className=\"gp-intro-text\">\n            {' '}\n            <span>\n              ShopDot, Inc. works with Priority Technology Holdings, Inc.\n              (&#34;PRTH&#34;) to provide merchant accounts for businesses.\n              Priority helps process your retailer&apos;s payment transactions\n              and deposits the funds into your account. To enable merchant\n              account services through Priority, please complete the following\n              application. See Priority{' '}\n              <Link\n                to={merchantServices}\n                className=\"link-text fw-700\"\n                target=\"_blank\"\n              >\n                Terms and Conditions\n              </Link>\n              .\n            </span>\n          </h4>\n        </div>\n        <div className=\"\">\n          <div className=\"gp-note\">\n            <h3 className=\"mb-2\">Before Starting</h3>\n            <p>\n              Please review the{' '}\n              <Link\n                to=\"https://help.shopdotapp.com/en/articles/6549763-getting-paid\"\n                target=\"_blank\"\n                className=\"link-text fw-700\"\n              >\n                Setup Guide\n              </Link>{' '}\n              before starting the application. Once you submit your application,\n              you will need to contact us at{' '}\n              <a\n                href=\"mailto:support@shopdotapp.com\"\n                className=\"fw-700 text-none\"\n              >\n                support@shopdotapp.com\n              </a>{' '}\n              to make any changes.\n            </p>\n          </div>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-input return_select-item radio-business radio-row mt-4\">\n            <p className=\"mb-0\">\n              Is your business a publicly traded C_Corporation or non-profit?{' '}\n            </p>\n            <div className=\"mt-2 radio-flex\">\n              <label className=\"radiobox\">\n                <input\n                  type=\"radio\"\n                  {...register('publiclyTraded')}\n                  value=\"yes\"\n                />\n                <div className=\"radiobox-text\">\n                  <span>Yes</span>\n                </div>\n              </label>\n              <label className=\"radiobox\">\n                <input\n                  type=\"radio\"\n                  {...register('publiclyTraded')}\n                  value=\"no\"\n                />\n                <div className=\"radiobox-text\">\n                  <span>No</span>\n                </div>\n              </label>\n            </div>\n          </div>\n          <div className=\"form-input return_select-item radio-authorizedsign radio-row\">\n            <p className=\"mb-0\">Are you an authorized signer? </p>\n            <div className=\"mt-2 radio-flex\">\n              <label className=\"radiobox\">\n                <input\n                  type=\"radio\"\n                  {...register('authorizedSign')}\n                  value=\"yes\"\n                />\n                <div className=\"radiobox-text\">\n                  <span>Yes</span>\n                </div>\n              </label>\n              <label className=\"radiobox\">\n                <input\n                  type=\"radio\"\n                  {...register('authorizedSign')}\n                  value=\"no\"\n                />\n                <div className=\"radiobox-text\">\n                  <span>No</span>\n                </div>\n              </label>\n            </div>\n            <p className=\"mt-3\">\n              This application must be completed by an <b>authorized signer</b>{' '}\n              with authority to sign the Priority{' '}\n              <Link\n                to={merchantServices}\n                className=\"link-text fw-700\"\n                target=\"_blank\"\n              >\n                Terms and Conditions\n              </Link>{' '}\n              on behalf of the company.\n            </p>\n          </div>\n          {watch('publiclyTraded') === 'no' &&\n            watch('authorizedSign') === 'yes' && (\n              <div\n                className=\"form-input return_select-item radio-businessowner radio-row\"\n                style={{ display: 'block' }}\n              >\n                <p className=\"mb-0\">Are you a business owner? </p>\n                <div className=\"mt-2 radio-flex\">\n                  <label className=\"radiobox\">\n                    <input\n                      type=\"radio\"\n                      {...register('businessOwner')}\n                      value=\"yes\"\n                    />\n                    <div className=\"radiobox-text\">\n                      <span>Yes</span>\n                    </div>\n                  </label>\n                  <label className=\"radiobox\">\n                    <input\n                      type=\"radio\"\n                      {...register('businessOwner')}\n                      value=\"no\"\n                    />\n                    <div className=\"radiobox-text\">\n                      <span>No</span>\n                    </div>\n                  </label>\n                </div>\n\n                <p className=\"mt-3\">\n                  This application must be completed by a <b>business owner</b>{' '}\n                  who owns 25% or more of the business entity. In addition, any\n                  person or legal entity with 25% or more ownership must be\n                  identified and provide basic information for the application.\n                </p>\n              </div>\n            )}\n          {(publiclyTraded === 'yes' &&\n            authorizedSign === 'no' &&\n            brandProfileDetails?.brand_profile?.id) ||\n          (publiclyTraded === 'no' &&\n            authorizedSign === 'yes' &&\n            businessOwner === 'yes') ||\n          (publiclyTraded === 'yes' && authorizedSign === 'yes') ? (\n            <div className=\"form-input mb-3\">\n              <button\n                type=\"submit\"\n                className=\"button btn-lg StartApplicationOwner\"\n                style={{ display: 'inline-flex' }}\n                onClick={() => {\n                  console.log('12355');\n                  dispatch(gettingPaidResetToInitial());\n                }}\n              >\n                Start Application\n              </button>\n            </div>\n          ) : (\n            <div className=\"form-input mb-3\">\n              <button\n                type=\"submit\"\n                className=\"button btn-lg StartApplicationOwner\"\n                disabled=\"disabled\"\n                style={{ display: 'inline-flex' }}\n                onClick={() => {\n                  console.log('123');\n                  dispatch(gettingPaidResetToInitial());\n                }}\n              >\n                Start Application\n              </button>\n            </div>\n          )}\n        </form>\n\n        <BusinessOwnerModel\n          modalIsOpen={modalIsOpen}\n          opencloseRetailerModal={opencloseRetailerModal}\n        />\n        <AuthorizedSignerModel\n          modalIsOpen={modalOpen}\n          type2={publiclyTraded === 'no' && authorizedSign === 'no'}\n          opencloseRetailerModal={opencloseModal}\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className=\"pc_tabs-content tabs_body\">\n      <div className=\"tab active\" data-target=\"Integration\">\n        <div className=\"products_content\">\n          <div className=\"products_body\" id=\"content-wrapper\">\n            <div className=\"content_area overflow-hidden\">\n              <h2 className=\"heading\">\n                Getting Paid\n                <img src={gpLogo} className=\"company-logo\" />\n              </h2>\n              <div id=\"gettingpaid\">\n                <div className=\"gettingpaid_info\">\n                  {!isCompleteApplication &&\n                    !editBankDetails &&\n                    startingTab && (\n                      <div className=\"gettingpaid-tab\">\n                        <div className=\"gp-left\">\n                          <div className=\"gp-link-area\">\n                            <a\n                              className={tabCode == '1' ? 'active' : ''}\n                              onClick={() => handleChangeTab('1')}\n                            >\n                              Business Details\n                            </a>\n                            <a\n                              className={tabCode == '2' ? 'active' : ''}\n                              onClick={() => {\n                                !isNil(businessDetails) &&\n                                  !isEmpty(businessDetails) &&\n                                  handleChangeTab('2');\n                              }}\n                            >\n                              Business Representative\n                            </a>\n                          </div>\n                          <div className=\"gp-link-area\">\n                            <a\n                              className={tabCode == '3' ? 'active' : ''}\n                              onClick={() => {\n                                !isNil(personalDetails) &&\n                                  !isEmpty(personalDetails) &&\n                                  handleChangeTab('3');\n                              }}\n                            >\n                              Bank Details\n                            </a>\n                          </div>\n                          <div className=\"gp-link-area\">\n                            <a\n                              className={tabCode == '4' ? 'active' : ''}\n                              onClick={() => {\n                                !isNil(bankDetails) &&\n                                  !isEmpty(bankDetails) &&\n                                  handleChangeTab('4');\n                              }}\n                            >\n                              Summary\n                            </a>\n                          </div>\n                        </div>\n                        <Suspense fallback={null}>\n                          {!isCompleteApplication && renderTab()}\n                        </Suspense>\n                      </div>\n                    )}\n                  {isCompleteApplication && !editBankDetails && (\n                    <GettingPaid\n                      isModelOpen={isModelOpen}\n                      setIsModelOpen={setIsModelOpen}\n                      setEditBankDetails={setEditBankDetails}\n                      handleChangeTab={handleChangeTab}\n                      setIsCompleteApplication={setIsCompleteApplication}\n                      merchantStatus={\n                        brandProfileDetails?.payment_detail?.merchant_status\n                      }\n                      externalStatus={\n                        brandProfileDetails?.payment_detail\n                          ?.external_account_status\n                      }\n                    />\n                  )}\n                  {editBankDetails && (\n                    <EditBankDetails setEditBankDetails={setEditBankDetails} />\n                  )}\n                  {!isCompleteApplication &&\n                    !startingTab &&\n                    !editBankDetails &&\n                    renderStartingTab()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ConfirmationModel\n        modalIsOpen={isConfirmBackModel}\n        closeConfirmationModal={handleConfirmationModelClose}\n        handleConfirmModel={handleConfirmModel}\n      />\n    </div>\n  );\n}\n","export const selectBankDetails = (state) => state.gettingPaid.bankDetails;\n\nexport const selectBusinessDetails = (state) =>\n    state.gettingPaid.businessDetails;\n\nexport const selectRepresentativeDetails = (state) =>\n    state.gettingPaid.representativeDetails;\n\nexport const selectGettingPaidPreferance = (state) =>\n    state.gettingPaid.gettingPaidPreferance;\n"],"names":["BusinessOwnerModel","props","_jsx","_Fragment","children","Modal","ariaHideApp","isOpen","modalIsOpen","onRequestClose","opencloseRetailerModal","className","_jsxs","onClick","src","closeBlackIcon","alt","info","Link","to","React","type2","ConfirmationModel","closeConfirmationModal","handleConfirmModel","BusinessDetails","lazy","BankDetails","Summary","BusinessRepresentative","GettingPaid","EditBankDetails","BrandPaid","_brandProfileDetails$5","_brandProfileDetails$6","_useState","useState","_useState2","_slicedToArray","setIsOpen","_useState3","_useState4","modalOpen","setOpen","_useState5","_useState6","isConfirmBackModel","setIsConfirmBackModel","_useState7","_useState8","tabCode","setTabCode","_useState9","_useState10","startingTab","setStartingTab","_useState11","_useState12","isCompleteApplication","setIsCompleteApplication","_useState13","_useState14","editBankDetails","setEditBankDetails","_useState15","_useState16","setIsActive","_useState17","_useState18","isEdited","setIsEdited","_useState19","_useState20","isModelOpen","setIsModelOpen","businessDetails","useSelector","selectBusinessDetails","personalDetails","selectRepresentativeDetails","bankDetails","selectBankDetails","brandProfileDetails","selectBrandProfileDetails","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","watch","handleChangeTab","formState","errors","document","getElementById","scrollTop","useEffect","_brandProfileDetails$","_brandProfileDetails$2","_brandProfileDetails$3","payment_detail","id","external_account_status","merchant_status","publiclyTraded","authorizedSign","businessOwner","onSubmit","data","setGettingPaidPreferance","useCallback","opencloseModal","handleConfirmationModelClose","handleConfirmationModelOpen","Number","setBusinessDetails","setRepresentativeDetails","setBankDetails","gpLogo","isNil","isEmpty","Suspense","fallback","merchantStatus","externalStatus","_brandProfileDetails$4","merchantServices","target","href","_objectSpread","type","value","style","display","brand_profile","console","log","gettingPaidResetToInitial","disabled","AuthorizedSignerModel","renderStartingTab","state","gettingPaid","representativeDetails","selectGettingPaidPreferance","gettingPaidPreferance"],"sourceRoot":""}