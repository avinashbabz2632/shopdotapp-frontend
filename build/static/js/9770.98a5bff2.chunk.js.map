{"version":3,"file":"static/js/9770.98a5bff2.chunk.js","mappings":"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","sources":["redux/Brand/Preference/preferenceSelector.js","pages/Brand/Settings/Preferences/index.js"],"sourcesContent":["export const selectPreferenceData = (state) => state.preference.preferenceData;\n","import React, { useEffect } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Select from 'react-select';\nimport Info from '../../images/icons/info.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getPreferencesAction,\n  updatePreferences,\n} from '../../../../actions/brandActions';\nimport { selectUserDetails } from '../../../../redux/user/userSelector';\nimport { ToastContainer } from 'react-toastify';\nimport { selectBrandProfileDetails } from '../../../../redux/Brand/Profile/brandProfileSelectors';\nimport { selectPreferenceData } from '../../../../redux/Brand/Preference/preferenceSelector';\n\nexport const PreferencesValidationSchema = yup.object().shape({\n  wholesalePercentage: yup\n    .number()\n    .typeError('Wholesale Price Percentage is required.')\n    .required('Wholesale Price Percentage is required.')\n    .min(0, 'Minimum atleast 0')\n    .max(100, 'Allowed maximum is 100'),\n\n  inventoryPercentage: yup\n    .number()\n    .typeError('Inventory Buffer Percentage is required.')\n    .required('Inventory Buffer Percentage is required.')\n    .min(1, 'Minimum atleast 1')\n    .max(100, 'Allowed maximum is 100'),\n  retunRefundPolicy: yup\n    .string()\n    .nullable()\n    .required('Prior Bankruptcy is required.'),\n  // requirementsForRetailers: yup\n  //   .string()\n  //   .nullable()\n  //   .required('Requirements for retailers is required.'),\n});\n\nconst categoryStyle = {\n  control: (styles) => {\n    return {\n      ...styles,\n      boxShadow: 'none',\n      minHeight: '40px',\n      '&:hover': {\n        boxShadow: 'none',\n      },\n    };\n  },\n  container: (style) => {\n    return {\n      ...style,\n      marginTop: '5xp',\n      marginRight: '1px',\n    };\n  },\n};\nconst options = [\n  {\n    value: 'Allow for flexible retail pricing',\n    label: 'Allow for flexible retail pricing',\n  },\n  {\n    value: 'Enforce retail price',\n    label: 'Enforce retail price',\n  },\n];\n\nexport default function BrandPreference() {\n  const {\n    register,\n    watch,\n    reset,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(PreferencesValidationSchema),\n    defaultValues: {\n      wholesalePercentage: 50,\n      inventoryPercentage: 70,\n      returnPricing: options[1],\n      retunRefundPolicy: 'yes',\n      connectBrand: null,\n    },\n  });\n  const dispatch = useDispatch();\n  const useDetails = useSelector(selectUserDetails);\n  const preferenceData = useSelector(selectPreferenceData);\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n  const wholesalePercentage = watch('wholesalePercentage');\n  const inventoryPercentage = watch('inventoryPercentage');\n\n  useEffect(() => {\n    if (brandProfileDetails?.brand_profile?.id) {\n      dispatch(getPreferencesAction(brandProfileDetails?.brand_profile?.id));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (preferenceData) {\n      console.log(preferenceData, 'preferenceData');\n      initalCall();\n    }\n  }, [preferenceData]);\n\n  const initalCall = () => {\n    if (preferenceData?.wholesale_pricing) {\n      reset({\n        wholesalePercentage: preferenceData.wholesale_pricing,\n        inventoryPercentage: preferenceData.wholesale_pricing,\n        inventoryPercentage: preferenceData.inventory_buffer,\n        retunRefundPolicy: preferenceData.return_policy,\n        requirementsForRetailers: preferenceData.connect_brand,\n      });\n    }\n  };\n  const onSubmit = (data) => {\n    const formData = {\n      brand_id: brandProfileDetails?.brand_profile?.id,\n      wholesalePricing: data.wholesalePercentage,\n      // retailerPricing: data.returnPricing.value,\n      retailerPricing: data.inventoryPercentage,\n      inventoryBuffer: data.inventoryPercentage,\n      returnPolicy: data.retunRefundPolicy,\n      connectBrand: data.requirementsForRetailers,\n    };\n    if (formData.connectBrand == '') {\n      delete formData.connectBrand;\n    }\n    dispatch(updatePreferences(formData));\n  };\n\n  return (\n    <div className=\"pc_tabs-content tabs_body\">\n      <div className=\"products_content\">\n        <div className=\"products_head mp-head\">\n          <div className=\"products_head-content\">\n            <div className=\"title\">\n              <h1 className=\"m-0\">Preferences</h1>\n            </div>\n          </div>\n        </div>\n        <div className=\"products_body\">\n          <div className=\"content_area\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div id=\"preferences\">\n                <div className=\"preferences_info\">\n                  <h2>\n                    <span>\n                      Wholesale Pricing <span className=\"asterisk-red\">*</span>\n                    </span>\n                    <div className=\"tooltip\">\n                      <div className=\"tooltip-icon\">\n                        <img src={Info} className=\"icon\" />\n                      </div>\n                      <div className=\"tooltip_text\">\n                        <p className=\"mb-0\">\n                          When products are imported into ShopDot, we will\n                          calculate the wholesale pricing (WSP) by using this\n                          percentage of the MSRP. You can still make edits to\n                          WSP on the product variant level. Modifying this\n                          percentage will not have an effect on the WSP for\n                          products that have already been imported into ShopDot.\n                        </p>\n                      </div>\n                    </div>\n                  </h2>\n                  <div className=\"form-area form-area-full\">\n                    <div className=\"form-input preferences-item\">\n                      <h4>\n                        Set your wholesale price based on a percentage of the\n                        retail price.\n                      </h4>\n                    </div>\n                    <div className=\"form-input preferences-slider\">\n                      <div className=\"wp-item mt-5\">\n                        <div className=\"wp-left\">\n                          Wholesale Price Percentage\n                        </div>\n                        <div className=\"wp-right\">\n                          <span className=\"percentage-lbl\">%</span>\n                          <input\n                            type=\"number\"\n                            name=\"wholesalePercentage\"\n                            className=\"slider\"\n                            {...register('wholesalePercentage')}\n                          />\n                        </div>\n                        {errors?.wholesalePercentage && (\n                          <span className=\"error-text\">\n                            {errors?.wholesalePercentage?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"wp-item srp\">\n                        <div className=\"wp-left \">\n                          <span className=\"samle-retail-price\">\n                            Sample Retail Price\n                          </span>\n                          <label>\n                            <span>$</span>100\n                          </label>\n                        </div>\n                        <div className=\"wp-right\">\n                          <p>\n                            WSP is the wholesale price that retailers will pay\n                            you for the product.\n                          </p>\n                          <label>\n                            <span>$</span>\n                            <span id=\"wpValue\">{wholesalePercentage}</span>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2>\n                  <span>\n                    Retail Pricing <span className=\"asterisk-red\">*</span>{' '}\n                  </span>\n                </h2>\n                <div className=\"form-area\">\n                  <div className=\"form-input preferences-item\">\n                    <div className=\"retail-flex-item\">\n                      <label>Retail Pricing Flexibility</label>\n                      <div className=\"tooltip\">\n                        <div className=\"tooltip-icon\">\n                          <img src={Info} className=\"icon\" />\n                        </div>\n                        <div className=\"tooltip_text\">\n                          <p className=\"mb-0\">\n                            This information will be displayed on your brand\n                            profile.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <Controller\n                      name=\"returnPricing\"\n                      control={control}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          placeholder=\"\"\n                          className=\"basic-single\"\n                          classNamePrefix=\"select\"\n                          styles={categoryStyle}\n                          components={{\n                            IndicatorSeparator: () => null,\n                          }}\n                          theme={(theme) => ({\n                            ...theme,\n                            colors: {\n                              ...theme.colors,\n                              primary25: '#fbf5f0',\n                              primary: '#bd6f34',\n                            },\n                          })}\n                          options={options}\n                        />\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2>\n                  <span>\n                    Inventory Buffer <span className=\"asterisk-red\">*</span>{' '}\n                  </span>\n                </h2>\n                <div className=\"form-area form-area-full\">\n                  <div className=\"form-input preferences-item\">\n                    <h4>\n                      Set a percentage of the inventory in your eCommerce store\n                      that will be published and sold in ShopDot.\n                    </h4>\n                  </div>\n                  <div className=\"form-input preferences-slider\">\n                    <div className=\"wp-item mt-5\">\n                      <div className=\"wp-left\">Inventory Buffer Percentage</div>\n                      <div className=\"wp-right\">\n                        <span className=\"percentage-lbl\">%</span>\n                        <input\n                          type=\"number\"\n                          name=\"inventoryPercentage\"\n                          className=\"slider\"\n                          {...register('inventoryPercentage')}\n                        />\n                      </div>\n                      {errors?.inventoryPercentage && (\n                        <span className=\"error-text\">\n                          {errors?.inventoryPercentage?.message}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"wp-item srp\">\n                      <div className=\"wp-left \">\n                        <span className=\"samle-retail-price\">\n                          Sample Shopify Inventory\n                        </span>\n                        <label>100</label>\n                      </div>\n                      <div className=\"wp-right\">\n                        <p>\n                          ShopDot Inventory is the inventory available to your\n                          retailers in ShopDot.\n                        </p>\n                        <label id=\"ibValue\">{inventoryPercentage}</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2>\n                  <span>\n                    Return and Refund Policy{' '}\n                    <span className=\"asterisk-red\">*</span>\n                  </span>\n                </h2>\n                <div className=\"form-area form-area-full\">\n                  <div className=\"form-input return_select-item\">\n                    <h4>\n                      <span>\n                        You can use this section to define the standard return\n                        and refund policy for your ShopDot orders.\n                      </span>\n                      <div className=\"tooltip\">\n                        <div className=\"tooltip-icon\">\n                          <img src={Info} className=\"icon\" />\n                        </div>\n                        <div className=\"tooltip_text\">\n                          <p className=\"mb-0\">\n                            This return and refund policy is universal and will\n                            apply to all of your products.\n                          </p>\n                        </div>\n                      </div>\n                    </h4>\n                    <div className=\"pe_radio mt-2\">\n                      <label className=\"radiobox\">\n                        <input\n                          type=\"radio\"\n                          control={control}\n                          name=\"retunRefundPolicy\"\n                          value=\"no\"\n                          {...register('retunRefundPolicy', {\n                            required: true,\n                          })}\n                        />\n                        <div className=\"radiobox-text\">\n                          <span> No returns or refunds</span>\n                        </div>\n                      </label>\n                      <label className=\"radiobox\">\n                        <input\n                          type=\"radio\"\n                          control={control}\n                          name=\"retunRefundPolicy\"\n                          value=\"yes\"\n                          {...register('retunRefundPolicy', {\n                            required: true,\n                          })}\n                        />\n\n                        <div className=\"radiobox-text\">\n                          <span>\n                            Returns and refunds are accepted on a case-by-case\n                            basis\n                          </span>\n                          <div className=\"tooltip\">\n                            <div className=\"tooltip-icon\">\n                              <img src={Info} className=\"icon\" />\n                            </div>\n                            <div className=\"tooltip_text\">\n                              <p className=\"mb-0\">\n                                Retailers will have to message you to see if an\n                                order is eligible for a return or refund.\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </label>\n                      {errors?.retunRefundPolicy && (\n                        <span className=\"error-text\">\n                          {errors?.retunRefundPolicy?.message}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"preferences_info mt-4\">\n                <h2 className=\"box-shadow-none\">\n                  <span>\n                    Requirements for retailers who want to connect with your\n                    brand{' '}\n                  </span>\n                </h2>\n                <div className=\"form-area form-area-full\">\n                  <div className=\"form-input\">\n                    <textarea\n                      name=\"requirementsForRetailers\"\n                      rows=\"8\"\n                      className=\"text-area\"\n                      placeholder=\"\"\n                      {...register('requirementsForRetailers', {\n                        required: false,\n                      })}\n                    ></textarea>\n                  </div>\n                  {errors?.requirementsForRetailers && (\n                    <span className=\"error-text\">\n                      {errors?.requirementsForRetailers?.message}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-area\">\n                <div className=\"form-input form-submit\">\n                  <button\n                    className=\"button button-grey cancel\"\n                    onClick={() => reset()}\n                  >\n                    Cancel\n                  </button>\n                  <button className=\"button\" type=\"submit\">\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n"],"names":["selectPreferenceData","state","preference","preferenceData","PreferencesValidationSchema","yup","shape","wholesalePercentage","typeError","required","min","max","inventoryPercentage","retunRefundPolicy","nullable","categoryStyle","control","styles","_objectSpread","boxShadow","minHeight","container","style","marginTop","marginRight","options","value","label","BrandPreference","_errors$wholesalePerc","_errors$inventoryPerc","_errors$retunRefundPo","_errors$requirementsF","_useForm","useForm","resolver","yupResolver","defaultValues","returnPricing","connectBrand","register","watch","reset","handleSubmit","errors","formState","dispatch","useDispatch","useSelector","selectUserDetails","brandProfileDetails","selectBrandProfileDetails","useEffect","_brandProfileDetails$","_brandProfileDetails$2","brand_profile","id","getPreferencesAction","console","log","initalCall","_reset","wholesale_pricing","_defineProperty","inventory_buffer","return_policy","connect_brand","_jsxs","className","children","_jsx","onSubmit","data","_brandProfileDetails$3","formData","brand_id","wholesalePricing","retailerPricing","inventoryBuffer","returnPolicy","requirementsForRetailers","updatePreferences","src","Info","type","name","message","Controller","render","_ref","field","Select","placeholder","classNamePrefix","components","IndicatorSeparator","theme","colors","primary25","primary","rows","onClick","ToastContainer"],"sourceRoot":""}