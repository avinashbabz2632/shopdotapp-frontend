{"version":3,"file":"static/js/772.13d6a441.chunk.js","mappings":"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","sources":["pages/Brand/images/gp-arrow-white.svg","pages/Brand/Settings/Paid/BankDetails.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGpArrowWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 17,\n    height: 16,\n    viewBox: \"0 0 17 16\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5007 3.33301L9.56065 4.27301L12.614 7.33301H1.83398V8.66634H12.614L9.55398 11.7263L10.5007 12.6663L15.1673 7.99967L10.5007 3.33301Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGpArrowWhite);\nexport default __webpack_public_path__ + \"static/media/gp-arrow-white.8b53ad79358d34b6f5ed90925a4b16bb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react';\nimport Select from 'react-select';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GpArrowWhiteIcon from '../../images/gp-arrow-white.svg';\nimport { setBankDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSlice';\nimport { selectBankDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport { BankDetailsValidationSchema } from './ValidationSchema';\n\nconst accountTypeOption = [\n  { value: 'CURRENT', label: 'Current' },\n  {\n    value: 'SAVINGS',\n    label: 'Savings',\n  },\n];\n\nconst accountRoleOption = [\n  { value: 'CORPORATE', label: 'Business' },\n  {\n    value: 'CONSUMER',\n    label: 'Personal',\n  },\n];\n\nconst categoryStyle = {\n  control: (styles) => {\n    return {\n      ...styles,\n      boxShadow: 'none',\n      minHeight: '40px',\n      '&:hover': {\n        boxShadow: 'none',\n      },\n    };\n  },\n  container: (style) => {\n    return {\n      ...style,\n      marginTop: '5xp',\n      marginRight: '1px',\n    };\n  },\n};\n\nconst defaultValues = {\n  account_type: accountTypeOption[0],\n  purpose: accountRoleOption[0],\n};\n\nexport default function BankDetails({\n  isEdited,\n  setIsEdited,\n  handleChangeTab,\n  formData,\n}) {\n  const bankDetails = useSelector(selectBankDetails);\n  const dispatch = useDispatch();\n  const {\n    control,\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(BankDetailsValidationSchema),\n    defaultValues,\n  });\n\n  useEffect(() => {\n    const isFormValuePresent = Object.keys(bankDetails).length;\n    if (isFormValuePresent) {\n      const fields = [\n        'account_holder_name',\n        'account_type',\n        'purpose',\n        'account_number',\n        'socialSecurityNumber',\n        'routing_number',\n      ];\n\n      fields.forEach((field) => setValue(field, bankDetails[field]));\n    }\n\n    return () => {\n      setIsEdited(false);\n    };\n  }, [isEdited]);\n\n  const onSubmit = (data) => {\n    dispatch(setBankDetails(data));\n    reset();\n    handleChangeTab('4');\n  };\n\n  return (\n    <form className=\"gp-right\" onSubmit={handleSubmit(onSubmit)}>\n      <h3 className=\"heading\">Bank Details</h3>\n      <p>Link your account to seamlessly receive payouts.</p>\n      <div className=\"form-area\">\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Name of the bank account holder&nbsp;\n            <span className=\"asterisk-red\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control mb-0\"\n            name=\"account_holder_name\"\n            placeholder=\"\"\n            {...register('account_holder_name', { required: true })}\n          />\n          {errors.account_holder_name && (\n            <span className=\"error-text\">\n              {errors.account_holder_name?.message}\n            </span>\n          )}\n        </div>\n\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Bank account type&nbsp;\n            <span className=\"asterisk-red\">*</span>\n          </label>\n          <Controller\n            name=\"account_type\"\n            control={control}\n            render={({ field }) => (\n              <Select\n                {...field}\n                className=\"basic-single\"\n                classNamePrefix=\"select\"\n                styles={categoryStyle}\n                components={{ IndicatorSeparator: () => null }}\n                theme={(theme) => ({\n                  ...theme,\n                  colors: {\n                    ...theme.colors,\n                    primary25: '#fbf5f0',\n                    primary: '#bd6f34',\n                  },\n                })}\n                options={accountTypeOption}\n              />\n            )}\n          />\n          {errors.account_type && (\n            <span className=\"error-text\">{errors.account_type?.message}</span>\n          )}\n        </div>\n\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Purpose&nbsp;<span className=\"asterisk-red\">*</span>\n          </label>\n          <Controller\n            name=\"purpose\"\n            control={control}\n            render={({ field }) => (\n              <Select\n                {...field}\n                className=\"basic-single\"\n                classNamePrefix=\"select\"\n                styles={categoryStyle}\n                components={{ IndicatorSeparator: () => null }}\n                theme={(theme) => ({\n                  ...theme,\n                  colors: {\n                    ...theme.colors,\n                    primary25: '#fbf5f0',\n                    primary: '#bd6f34',\n                  },\n                })}\n                options={accountRoleOption}\n              />\n            )}\n          />\n          {errors.purpose && (\n            <span className=\"error-text\">{errors.purpose?.message}</span>\n          )}\n        </div>\n\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Account number&nbsp;\n            <span className=\"asterisk-red\">*</span>\n          </label>\n          <input\n            type=\"number\"\n            className=\"form-control mb-0\"\n            name=\"account_number\"\n            placeholder=\"\"\n            {...register('account_number', { required: true })}\n          />\n          {errors.account_number && (\n            <span className=\"error-text\">{errors.account_number?.message}</span>\n          )}\n        </div>\n\n        <div className=\"form-input mb-4\">\n          <label htmlFor=\"\" className=\"form-label\">\n            Routing number&nbsp;\n            <span className=\"asterisk-red\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control mb-0\"\n            name=\"routing_number\"\n            placeholder=\"\"\n            {...register('routing_number', { required: true })}\n          />\n          {errors.routing_number && (\n            <span className=\"error-text\">{errors.routing_number?.message}</span>\n          )}\n          <small>\n            9-digit Routing number of the account used for ACH transactions.\n          </small>\n        </div>\n      </div>\n      <div className=\"form-area\">\n        <div className=\"form-input form-submit\">\n          <button\n            className=\"button button-grey cancel\"\n            onClick={() => handleChangeTab('2')}\n          >\n            Back\n          </button>\n          <button className=\"button summary-icon\">\n            Save and Next\n            <img src={GpArrowWhiteIcon} />\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nBankDetails.propTypes = {\n  isEdited: PropTypes.String,\n  handleChangeTab: PropTypes.func,\n  setIsEdited: PropTypes.func,\n};\n"],"names":["accountTypeOption","value","label","accountRoleOption","categoryStyle","control","styles","_objectSpread","boxShadow","minHeight","container","style","marginTop","marginRight","defaultValues","account_type","purpose","BankDetails","_ref","_errors$account_holde","_errors$account_type","_errors$purpose","_errors$account_numbe","_errors$routing_numbe","isEdited","setIsEdited","handleChangeTab","bankDetails","formData","useSelector","selectBankDetails","dispatch","useDispatch","_useForm","useForm","mode","resolver","yupResolver","BankDetailsValidationSchema","register","handleSubmit","reset","setValue","errors","formState","useEffect","Object","keys","length","forEach","field","_jsxs","className","onSubmit","data","setBankDetails","children","_jsx","htmlFor","type","name","placeholder","required","account_holder_name","message","Controller","render","_ref2","Select","classNamePrefix","components","IndicatorSeparator","theme","colors","primary25","primary","options","_ref3","account_number","routing_number","onClick","src","GpArrowWhiteIcon"],"sourceRoot":""}