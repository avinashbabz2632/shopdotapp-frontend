{"version":3,"file":"static/js/772.850e32a2.chunk.js","mappings":"4RAgBMA,EAAgB,CAClBC,YAAaC,EAAAA,GAAkB,GAC/BC,YAAaC,EAAAA,GAAkB,IAGpB,SAASC,EAAWC,GAK/B,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAJCC,EAAQN,EAARM,SACAC,EAAWP,EAAXO,YACAC,EAAeR,EAAfQ,gBACAC,EAA4BT,EAA5BS,6BAEMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAWC,EAAAA,EAAAA,MACjBC,GAOIC,EAAAA,EAAAA,IAAQ,CACRC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,IACtB1B,cAAAA,IATA2B,EAAON,EAAPM,QACAC,EAAQP,EAARO,SACAC,EAAYR,EAAZQ,aACAC,EAAKT,EAALS,MACAC,EAAQV,EAARU,SAAQC,EAAAX,EACRY,UAAaC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,SAOzBC,EAAAA,EAAAA,YAAU,WAEN,GAD2BC,OAAOC,KAAKtB,GAAauB,OAC5B,CACL,CACX,oBACA,cACA,cACA,gBACA,iBAGGC,SAAQ,SAACC,GAAK,OAAKV,EAASU,EAAOzB,EAAYyB,GAAO,GACjE,CAEA,OAAO,WACH5B,GAAY,EAChB,CACJ,GAAG,CAACD,IASJ,OACI8B,EAAAA,EAAAA,MAAA,QAAMC,UAAU,WAAWC,SAAUf,GARxB,SAACgB,GACdC,QAAQC,IAAI,uBAAwBF,GACpC1B,GAAS6B,EAAAA,EAAAA,IAAeH,IACxBf,IACAhB,EAAgB,IACpB,IAGgEmC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAIP,UAAU,UAASM,SAAC,kBACxBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sDACHP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWM,SAAA,EACtBP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBM,SAAA,EAC5BP,EAAAA,EAAAA,MAAA,SAAOS,QAAQ,GAAGR,UAAU,aAAYM,SAAA,CAAC,uCAErCC,EAAAA,EAAAA,KAAA,QAAMP,UAAU,eAAcM,SAAC,UAEnCC,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,GAAA,CACIC,KAAK,OACLV,UAAU,oBACVW,KAAK,oBACLC,YAAY,IACR3B,EAAS,oBAAqB,CAAE4B,UAAU,MAEjDtB,EAAOuB,oBACJP,EAAAA,EAAAA,KAAA,QAAMP,UAAU,aAAYM,SACC,QADD1C,EACvB2B,EAAOuB,yBAAiB,IAAAlD,OAAA,EAAxBA,EAA0BmD,cAKvChB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBM,SAAA,EAC5BP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYM,SAAA,CAAC,yBAE1BC,EAAAA,EAAAA,KAAA,QAAMP,UAAU,eAAcM,SAAC,UAEnCC,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CACPL,KAAK,cACL3B,QAASA,EACTiC,OAAQ,SAAAC,GAAA,IAAGpB,EAAKoB,EAALpB,MAAK,OACZS,EAAAA,EAAAA,KAACY,EAAAA,IAAMV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCX,GAAK,IACTc,YAAY,2BACZZ,UAAU,eACVoB,gBAAgB,SAChBC,OAAQC,EAAAA,GACRC,WAAY,CAAEC,mBAAoB,kBAAM,IAAI,GAC5CC,MAAO,SAACA,GAAK,OAAAhB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNgB,GAAK,IACRC,QAAMjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCgB,EAAMC,QAAM,IACfC,UAAW,UACXC,QAAS,aACZ,EAELC,QAAStE,EAAAA,KACX,IAGTgC,EAAOjC,cACJiD,EAAAA,EAAAA,KAAA,QAAMP,UAAU,aAAYM,SACL,QADKzC,EACvB0B,EAAOjC,mBAAW,IAAAO,OAAA,EAAlBA,EAAoBkD,cAIjChB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCM,SAAA,EACjDP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,4BAA2BM,SAAA,CAAC,WAEzCC,EAAAA,EAAAA,KAAA,QAAMP,UAAU,eAAcM,SAAC,UAEnCC,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CACPL,KAAK,cACL3B,QAASA,EACTiC,OAAQ,SAAAa,GAAA,IAAGhC,EAAKgC,EAALhC,MAAK,OACZS,EAAAA,EAAAA,KAACY,EAAAA,IAAMV,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCX,GAAK,IACTc,YAAY,2BACZZ,UAAU,eACVoB,gBAAgB,SAChBW,YAAU,EACVV,OAAQC,EAAAA,GACRU,iBAAkB,SAACC,GAAM,OAAKA,CAAM,EACpCV,WAAY,CAAEC,mBAAoB,kBAAM,IAAI,GAC5CC,MAAO,SAACA,GAAK,OAAAhB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNgB,GAAK,IACRC,QAAMjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCgB,EAAMC,QAAM,IACfC,UAAW,UACXC,QAAS,aACZ,EAELC,QAASpE,EAAAA,KACX,IAGT8B,EAAO/B,cACJ+C,EAAAA,EAAAA,KAAA,QAAMP,UAAU,aAAYM,SACL,QADKxC,EACvByB,EAAO/B,mBAAW,IAAAM,OAAA,EAAlBA,EAAoBiD,cAKjChB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBM,SAAA,EAC5BP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYM,SAAA,CAAC,mBACXC,EAAAA,EAAAA,KAAA,QAAMP,UAAU,eAAcM,SAAC,UAElDC,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,GAAA,CACIC,KAAK,SACLV,UAAU,oBACVkC,GAAG,GACHtB,YAAY,GACZD,KAAK,iBACD1B,EAAS,gBAAiB,CAAE4B,UAAU,MAE7CtB,EAAO4C,gBACJ5B,EAAAA,EAAAA,KAAA,QAAMP,UAAU,aAAYM,SACH,QADGvC,EACvBwB,EAAO4C,qBAAa,IAAApE,OAAA,EAApBA,EAAsBgD,cAKnChB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBM,SAAA,EAC5BP,EAAAA,EAAAA,MAAA,SAAOC,UAAU,aAAYM,SAAA,CAAC,sBAE1BC,EAAAA,EAAAA,KAAA,QAAMP,UAAU,eAAcM,SAAC,UAEnCC,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,GAAA,CACIC,KAAK,SACLV,UAAU,oBACVW,KAAK,gBACLC,YAAY,IACR3B,EAAS,gBAAiB,CAAE4B,UAAU,MAE7CtB,EAAO6C,gBACJ7B,EAAAA,EAAAA,KAAA,QAAMP,UAAU,aAAYM,SACH,QADGtC,EACvBuB,EAAO6C,qBAAa,IAAApE,OAAA,EAApBA,EAAsB+C,WAG/BR,EAAAA,EAAAA,KAAA,SAAAD,SAAO,4EAMfC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,YAAWM,UACtBP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBM,SAAA,EACnCC,EAAAA,EAAAA,KAAA,UACIP,UAAU,4BACVU,KAAK,SACL2B,QAAS,kBAAMjE,GAA8B,EAACkC,SACjD,UAGDP,EAAAA,EAAAA,MAAA,UACIC,UAAU,sBACVU,KAAK,SACL4B,UAAW9C,EAAQc,SAAA,CACtB,iBAEGC,EAAAA,EAAAA,KAAA,OAAKgC,IAAKC,EAAAA,EAAYC,IAAI,oBAMlD,C","sources":["pages/Brand/Settings/Paid/BankDetails.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Select from 'react-select';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setBankDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSlice';\nimport { selectBankDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport { BankDetailsValidationSchema } from './ValidationSchema';\nimport rightArrow from '../../../../assets/images/icons/Vector.11.svg';\nimport {\n    accountRoleOption,\n    accountTypeOption,\n    categoryStyle,\n} from '../../common/utils/utils';\n\nconst defaultValues = {\n    accountType: accountTypeOption[0],\n    accountRole: accountRoleOption[0],\n};\n\nexport default function BankDetails({\n    isEdited,\n    setIsEdited,\n    handleChangeTab,\n    handleConfirmationModelClose,\n}) {\n    const bankDetails = useSelector(selectBankDetails);\n    const dispatch = useDispatch();\n    const {\n        control,\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        formState: { errors, isValid },\n    } = useForm({\n        mode: 'onChange',\n        resolver: yupResolver(BankDetailsValidationSchema),\n        defaultValues,\n    });\n\n    useEffect(() => {\n        const isFormValuePresent = Object.keys(bankDetails).length;\n        if (isFormValuePresent) {\n            const fields = [\n                'accountHolderName',\n                'accountType',\n                'accountRole',\n                'accountNumber',\n                'routingNumber',\n            ];\n\n            fields.forEach((field) => setValue(field, bankDetails[field]));\n        }\n\n        return () => {\n            setIsEdited(false);\n        };\n    }, [isEdited]);\n\n    const onSubmit = (data) => {\n        console.log('Bank Details(page-3)', data);\n        dispatch(setBankDetails(data));\n        reset();\n        handleChangeTab('4');\n    };\n\n    return (\n        <form className=\"gp-right\" onSubmit={handleSubmit(onSubmit)}>\n            <h3 className=\"heading\">Bank Details</h3>\n            <p>Link your account to seamlessly receive payouts.</p>\n            <div className=\"form-area\">\n                <div className=\"form-input mb-4\">\n                    <label htmlFor=\"\" className=\"form-label\">\n                        Name of the bank account holder&nbsp;\n                        <span className=\"asterisk-red\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control mb-0\"\n                        name=\"accountHolderName\"\n                        placeholder=\"\"\n                        {...register('accountHolderName', { required: true })}\n                    />\n                    {errors.accountHolderName && (\n                        <span className=\"error-text\">\n                            {errors.accountHolderName?.message}\n                        </span>\n                    )}\n                </div>\n\n                <div className=\"form-input mb-4\">\n                    <label className=\"form-label\">\n                        Bank account type&nbsp;\n                        <span className=\"asterisk-red\">*</span>\n                    </label>\n                    <Controller\n                        name=\"accountType\"\n                        control={control}\n                        render={({ field }) => (\n                            <Select\n                                {...field}\n                                placeholder=\"Select Business Category\"\n                                className=\"basic-single\"\n                                classNamePrefix=\"select\"\n                                styles={categoryStyle}\n                                components={{ IndicatorSeparator: () => null }}\n                                theme={(theme) => ({\n                                    ...theme,\n                                    colors: {\n                                        ...theme.colors,\n                                        primary25: '#fbf5f0',\n                                        primary: '#bd6f34',\n                                    },\n                                })}\n                                options={accountTypeOption}\n                            />\n                        )}\n                    />\n                    {errors.accountType && (\n                        <span className=\"error-text\">\n                            {errors.accountType?.message}\n                        </span>\n                    )}\n                </div>\n                <div className=\"form-input mb-4 form-control-wrapper\">\n                    <label className=\"form-label input_disabled\">\n                        Purpose\n                        <span className=\"asterisk-red\">*</span>\n                    </label>\n                    <Controller\n                        name=\"accountRole\"\n                        control={control}\n                        render={({ field }) => (\n                            <Select\n                                {...field}\n                                placeholder=\"Select Business Category\"\n                                className=\"basic-single\"\n                                classNamePrefix=\"select\"\n                                isDisabled\n                                styles={categoryStyle}\n                                isOptionDisabled={(option) => option}\n                                components={{ IndicatorSeparator: () => null }}\n                                theme={(theme) => ({\n                                    ...theme,\n                                    colors: {\n                                        ...theme.colors,\n                                        primary25: '#fbf5f0',\n                                        primary: '#bd6f34',\n                                    },\n                                })}\n                                options={accountRoleOption}\n                            />\n                        )}\n                    />\n                    {errors.accountRole && (\n                        <span className=\"error-text\">\n                            {errors.accountRole?.message}\n                        </span>\n                    )}\n                </div>\n\n                <div className=\"form-input mb-4\">\n                    <label className=\"form-label\">\n                        Account number <span className=\"asterisk-red\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control mb-0\"\n                        id=\"\"\n                        placeholder=\"\"\n                        name=\"accountNumber\"\n                        {...register('accountNumber', { required: true })}\n                    />\n                    {errors.accountNumber && (\n                        <span className=\"error-text\">\n                            {errors.accountNumber?.message}\n                        </span>\n                    )}\n                </div>\n\n                <div className=\"form-input mb-4\">\n                    <label className=\"form-label\">\n                        Routing number&nbsp;\n                        <span className=\"asterisk-red\">*</span>\n                    </label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control mb-0\"\n                        name=\"routingNumber\"\n                        placeholder=\"\"\n                        {...register('routingNumber', { required: true })}\n                    />\n                    {errors.routingNumber && (\n                        <span className=\"error-text\">\n                            {errors.routingNumber?.message}\n                        </span>\n                    )}\n                    <small>\n                        9-digit Routing number of the account used for ACH\n                        transactions.\n                    </small>\n                </div>\n            </div>\n            <div className=\"form-area\">\n                <div className=\"form-input form-submit\">\n                    <button\n                        className=\"button button-grey cancel\"\n                        type=\"button\"\n                        onClick={() => handleConfirmationModelClose()}\n                    >\n                        Back\n                    </button>\n                    <button\n                        className=\"button summary-icon\"\n                        type=\"submit\"\n                        disabled={!isValid}\n                    >\n                        Save and Next\n                        <img src={rightArrow} alt=\"Arrow\" />\n                    </button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nBankDetails.propTypes = {\n    isEdited: PropTypes.bool,\n    handleChangeTab: PropTypes.func,\n    setIsEdited: PropTypes.func,\n    handleConfirmationModelClose: PropTypes.func,\n};\n"],"names":["defaultValues","accountType","accountTypeOption","accountRole","accountRoleOption","BankDetails","_ref","_errors$accountHolder","_errors$accountType","_errors$accountRole","_errors$accountNumber","_errors$routingNumber","isEdited","setIsEdited","handleChangeTab","handleConfirmationModelClose","bankDetails","useSelector","selectBankDetails","dispatch","useDispatch","_useForm","useForm","mode","resolver","yupResolver","BankDetailsValidationSchema","control","register","handleSubmit","reset","setValue","_useForm$formState","formState","errors","isValid","useEffect","Object","keys","length","forEach","field","_jsxs","className","onSubmit","data","console","log","setBankDetails","children","_jsx","htmlFor","_objectSpread","type","name","placeholder","required","accountHolderName","message","Controller","render","_ref2","Select","classNamePrefix","styles","categoryStyle","components","IndicatorSeparator","theme","colors","primary25","primary","options","_ref3","isDisabled","isOptionDisabled","option","id","accountNumber","routingNumber","onClick","disabled","src","rightArrow","alt"],"sourceRoot":""}