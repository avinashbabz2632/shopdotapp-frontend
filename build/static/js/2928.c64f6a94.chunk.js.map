{"version":3,"file":"static/js/2928.c64f6a94.chunk.js","mappings":"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","sources":["pages/Brand/common/components/Alerts.js","pages/Brand/images/icons/round-tick.svg","pages/Brand/Settings/Paid/SubmitModal.js","pages/Brand/Settings/Paid/GettingPaid.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Alerts({ alertType, children }) {\n    return (\n        <div className=\"sd_alert\">\n            <div className={`${alertType} alert mx-100`} role=\"alert\">\n                {children}\n            </div>\n        </div>\n    );\n}\n\nAlerts.propTypes = {\n    alertType: PropTypes.string,\n    children: PropTypes.any,\n};\n\nexport default Alerts;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRoundTick(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 71,\n    height: 70,\n    viewBox: \"0 0 71 70\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.6666 15.1083L31.3874 48.4166L19.0208 36.0499L23.1333 31.9374L31.3874 40.1916L60.5541 11.0249L64.6666 15.1083ZM58.2208 29.8083C58.5999 31.4708 58.8332 33.2208 58.8332 34.9999C58.8332 47.8916 48.3916 58.3332 35.4999 58.3332C22.6083 58.3332 12.1666 47.8916 12.1666 34.9999C12.1666 22.1083 22.6083 11.6666 35.4999 11.6666C40.1082 11.6666 44.3666 13.0083 47.9833 15.3124L52.1832 11.1124C47.4582 7.78742 41.7124 5.83325 35.4999 5.83325C19.3999 5.83325 6.33325 18.8999 6.33325 34.9999C6.33325 51.0999 19.3999 64.1666 35.4999 64.1666C51.5999 64.1666 64.6666 51.0999 64.6666 34.9999C64.6666 31.5291 64.0249 28.2041 62.9166 25.1124L58.2208 29.8083Z\",\n    fill: \"#C9632B\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTick);\nexport default __webpack_public_path__ + \"static/media/round-tick.18c5e6985d4bbcade1fadd960025ff14.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport tickIcon from '../../images/icons/round-tick.svg';\nimport crossIcon from '../../images/icons/close-icon.svg';\n\nexport default function SubmitModal({ setIsModelOpen }) {\n    return (\n        <div className=\"popup popup-message active\">\n            <div className=\"popup_wrapper\">\n                <div className=\"popup_content\">\n                    <div\n                        className=\"popup-close\"\n                        onClick={() => {\n                            setIsModelOpen(false);\n                        }}\n                    >\n                        <img className=\"icon\" src={crossIcon} />\n                    </div>\n\n                    <div className=\"popup_success active\">\n                        <div className=\"icon-round\">\n                            <img src={tickIcon} />\n                        </div>\n                        <p className=\"mb-4\">\n                            Your application has been submitted to Priority\n                            Holdings for review and should be approved in 1-2\n                            business days.\n                        </p>\n\n                        <p>\n                            Please contact us at{' '}\n                            <a href=\"\" className=\"link-text link-line\">\n                                support@shopdotapp.com\n                            </a>{' '}\n                            if you have any questions.\n                        </p>\n\n                        <button\n                            className=\"popup-close button cancel\"\n                            onClick={() => {\n                                setIsModelOpen(false);\n                            }}\n                        >\n                            Close\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nSubmitModal.propTypes = {\n    setIsModelOpen: PropTypes.func,\n};\n","import React, { useState } from 'react';\n// import EditIcon from '../../images/edit.svg';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { selectBankDetails } from '../../../../redux/Brand/GettingPaid/gettingPaidSelector';\nimport Alerts from '../../common/components/Alerts';\nimport SubmitModal from './SubmitModal';\nimport { Link } from 'react-router-dom';\n\n// const trailingCharsIntactCount = 4;\nexport default function GettingPaid({\n  setEditBankDetails,\n  handleChangeTab,\n  setIsCompleteApplication,\n  isActive,\n  isModelOpen,\n  setIsModelOpen,\n  externalStatus,\n  merchantStatus,\n}) {\n  const bankDetails = useSelector(selectBankDetails);\n\n  return (\n    <>\n      {/* {isModelOpen && <SubmitModal setIsModelOpen={setIsModelOpen} />} */}\n      {isActive ? (\n        <>\n          <Alerts alertType=\"alert-error\">\n            The payment processor could not validate your bank account\n            information. Please contact <a href=\"\">support@shopdotapp.com</a>.\n          </Alerts>\n          <br />\n          <Alerts alertType=\"alert-success\">\n            If you would like to make changes to your bank account details.\n            please contact <a href=\"\">support@shopdotapp.com</a>.\n          </Alerts>\n          <br />\n          <Alerts alertType=\"alert-warning\">\n            Your application is Pending with Priority Holdings.\n          </Alerts>\n          <br />\n          <div className=\"getting-paid-step-d\" style={{ display: 'block' }}>\n            <button\n              className=\"button add-user add-user-link button-dark large\"\n              onClick={() => setEditBankDetails(true)}\n            >\n              <span className=\"plus-icon-sm\">\n                {/* <img src={EditIcon} /> */}\n              </span>\n              Edit Account\n            </button>\n            <h2 className=\"mt-5\">Bank Detail</h2>\n            <div className=\"form-area\">\n              <div className=\"form-input\">\n                <label htmlFor=\"\" className=\"form-label\">\n                  Name of the bank account holder\n                </label>\n                <label className=\"form-data\">\n                  {get(bankDetails, 'accountHolderName', '-')}\n                </label>\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"\" className=\"form-label\">\n                  Bank account type\n                </label>\n                <label className=\"form-data\">\n                  {get(bankDetails, 'accountType.label', '-')}\n                </label>\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"\" className=\"form-label\">\n                  Purpose\n                </label>\n                <label className=\"form-data\">\n                  {get(bankDetails, 'accountRole.label', '-')}\n                </label>\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"\" className=\"form-label\">\n                  Account number\n                </label>\n                <label className=\"form-data account-number\">\n                  {get(bankDetails, 'accountNumber', '-')}\n                </label>\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"\" className=\"form-label\">\n                  Routing number\n                </label>\n                <label className=\"form-data\">\n                  {get(bankDetails, 'routingNumber', '-')}\n                </label>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>\n          {isModelOpen && <SubmitModal setIsModelOpen={setIsModelOpen} />}\n          <div id=\"gettingpaid\">\n            <div className=\"gettingpaid_info pos-relative\">\n              {/* <button\n                onClick={() => {\n                  handleChangeTab('1');\n                  setIsCompleteApplication(false);\n                }}\n                className=\"button add-user add-user-link button-dark small\"\n              >\n                Edit\n              </button> */}\n              <div className=\"gp-after-note\">\n                <div className=\"gpn-item\">\n                  <p>\n                    Your Priority Holding Merchant and Settlements accounts are\n                  </p>\n                  {merchantStatus ? (\n                    <span className=\"status-pill pill_paid\">Active</span>\n                  ) : (\n                    <span className=\"status-pill pill_pending\">Pending</span>\n                  )}\n                </div>\n                <div className=\"gpn-item\">\n                  <p>\n                    Your bank account ending with XXXX connection to Priority\n                    Holdings is\n                  </p>\n                  {externalStatus ? (\n                    <span className=\"status-pill pill_paid\">Active</span>\n                  ) : (\n                    <span className=\"status-pill pill_pending\">Pending</span>\n                  )}\n                </div>\n                <div className=\"gpn-item\">\n                  <p className=\"red-note\">\n                    Your application is pending with Priority Holdings.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nGettingPaid.propTypes = {\n  setEditBankDetails: PropTypes.func,\n  setIsCompleteApplication: PropTypes.func,\n  handleChangeTab: PropTypes.func,\n};\n"],"names":["_ref","alertType","children","_jsx","className","concat","role","SubmitModal","setIsModelOpen","_jsxs","onClick","src","crossIcon","tickIcon","href","GettingPaid","setEditBankDetails","isActive","handleChangeTab","setIsCompleteApplication","isModelOpen","externalStatus","merchantStatus","bankDetails","useSelector","selectBankDetails","_Fragment","Alerts","style","display","htmlFor","get","id"],"sourceRoot":""}