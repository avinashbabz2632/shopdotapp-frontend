{"version":3,"file":"static/js/3234.acb23437.chunk.js","mappings":"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","sources":["pages/Brand/images/icons/icon-edit.svg","actions/userActions.js","pages/Brand/Settings/Paid/ValidationSchema.js","pages/Brand/Settings/Profile/index.js"],"sourcesContent":["var _rect, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    rx: 4,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.8311 9.35111L14.6489 10.1689L6.59556 18.2222H5.77778V17.4044L13.8311 9.35111ZM17.0311 4C16.8089 4 16.5778 4.08889 16.4089 4.25778L14.7822 5.88444L18.1156 9.21778L19.7422 7.59111C20.0889 7.24444 20.0889 6.68444 19.7422 6.33778L17.6622 4.25778C17.4844 4.08 17.2622 4 17.0311 4ZM13.8311 6.83556L4 16.6667V20H7.33333L17.1644 10.1689L13.8311 6.83556Z\",\n    fill: \"#283B49\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconEdit);\nexport default __webpack_public_path__ + \"static/media/icon-edit.66db4866fc239f5ff3f3b6abbb739e70.svg\";\nexport { ForwardRef as ReactComponent };","import axios from '../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as API_END_POINT from '../constants/api';\nimport { setNotificationData, setRoleUpdated } from '../redux/user/userSlice';\n\nexport function updateUserRoleAction(formData, navigate, platformName) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.USER_ROLE, formData);\n      if (response && response.data && response.data.code == 201) {\n        dispatch(setRoleUpdated());\n        if (formData.role === 'brand') {\n          dispatch(\n            addUserPlatformAction(\n              {\n                user_id: formData.user_id,\n                platform: platformName,\n              },\n              navigate\n            )\n          );\n        } else {\n          navigate('/retailer-onboarding');\n        }\n      } else {\n        toast.error('Something went worng');\n      }\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n    }\n  };\n}\n\nexport function addUserPlatformAction(formData, navigate) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.USER_PLATFORM, formData);\n      if (response && response.data && response.data.code == 201) {\n        navigate('/brand-onboarding');\n      } else {\n        navigate('/personalized-not-supported', { state: formData.platform });\n      }\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n\nexport async function uploadImageAction(formData) {\n  try {\n    const response = await axios.post(API_END_POINT.UPLOAD_IMAGE, formData, {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    });\n    if (response && response.data && response.data.code == 200) {\n      return response.data.data;\n    } else {\n      toast.error('Something went worng');\n    }\n  } catch (err) {\n    toast.error(\n      err && err.response && err.response.data && err.response.data.errors\n        ? err.response.data.errors\n        : 'Something went worng'\n    );\n    throw err;\n  }\n}\n\nexport function updateNotificationAction(formData) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.NOTIFICATION, formData);\n      if (response && response.data && response.data.code == 200) {\n        toast.success(response.data?.message);\n        dispatch(getNotificationAction(formData.brand_id));\n      } else {\n        toast.error('Something went worng');\n      }\n      return response;\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n\nexport function getNotificationAction(brandId) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\n        `${API_END_POINT.NOTIFICATION}/${brandId}/`\n      );\n      if (response && response.data && response.data.code == 200) {\n        if (response.data.data) {\n          dispatch(setNotificationData(response.data.data));\n        }\n      } else {\n      }\n      return response;\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n","import * as yup from 'yup';\r\nimport { store } from '../../../../redux/store';\r\n\r\nexport const BusinessDetailsValidationSchema = yup.object().shape({\r\n  businessName: yup.string().required('Legal business name is required.'),\r\n  // businessAs: yup\r\n  //   .string()\r\n  //   .required('Doing business is required.')\r\n  //   .test(\r\n  //     'businessname',\r\n  //     'doing business is different than the legal name',\r\n  //     function (business) {\r\n  //       return business ? business !== this.parent.businessName : true;\r\n  //     }\r\n  //   ),\r\n  website: yup\r\n    .string()\r\n    .matches(\r\n        /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\r\n        'Please enter correct website url!'\r\n    )\r\n    .required('Business website address is required.'),\r\n  businessEmail: yup\r\n    .string()\r\n    .email('Must be a valid email.')\r\n    .max(255)\r\n    .required('Business email address is required.'),\r\n  businessCategory: yup\r\n    .object()\r\n    .nullable()\r\n    .required('Business category is required.'),\r\n  textIdType: yup.object().when('businessCategory', {\r\n    is: (businessCategory) =>\r\n      businessCategory?.value === 'single_member_llc' ||\r\n      businessCategory?.value === 'sole_proprietor',\r\n    then: yup.object().nullable().required('TextID is required'),\r\n  }),\r\n  // employerIdentificationNumber: yup\r\n  //     .object()\r\n  //     .nullable()\r\n  //     .required('Employer identification number is required'),\r\n  // socialSecurityNumber: yup\r\n  //     .object()\r\n  //     .nullable()\r\n  //     .required('Social security number is required'),\r\n  // employerIdentificationNumber: yup.string().when('businessCategory', {\r\n  //     is: (businessCategory) =>\r\n  //         businessCategory?.value !== 'single_member_llc' ||\r\n  //         businessCategory?.value !== 'sole_proprietor',\r\n  //     then: yup\r\n  //         .string()\r\n  //         .required('Employer identification number is required'),\r\n  // }),\r\n  // socialSecurityNumber: yup\r\n  //     .string()\r\n  //     .when('textIdType', {\r\n  //         is: (textIdType) => textIdType?.value === 'ssn',\r\n  //         then: yup.string().required('Social security number is required'),\r\n  //     })\r\n  //     .when('businessCategory', {\r\n  //         is: (businessCategory) =>\r\n  //             businessCategory?.value === 'single_member_llc' ||\r\n  //             businessCategory?.value === 'sole_proprietor',\r\n  //         then: yup.string().required('Social security number is required'),\r\n  //     }),\r\n  phoneNumber: yup\r\n    .string()\r\n    .nullable()\r\n    .required('Phone number is required.')\r\n    .min(12, 'Phone should be 10 digits.'),\r\n  addressLine1: yup.string().nullable().required('Address line 1 is required.'),\r\n  countryAddress: yup.object().nullable().required('Country is require.'),\r\n  stateAddress: yup.object().nullable().required('State is require.'),\r\n  city: yup.string().required('City is required.'),\r\n  zipcode: yup\r\n    .string()\r\n    .nullable()\r\n    .notOneOf(\r\n      ['00000'],\r\n      'Should be in XXXXX format.Cannot containt all zeroes.'\r\n    )\r\n    .min(5)\r\n    .max(5)\r\n    .required('Zipcode must be atleast 5 characters'),\r\n  stateOfIncorportation: yup\r\n    .object()\r\n    .nullable()\r\n    .required('State of incorporation is required.'),\r\n  dateOfIncorportation: yup\r\n    .string()\r\n    .nullable()\r\n    .required('Date of incorporation is required.'),\r\n  bankruptcy: yup.string().nullable().required('Prior bankruptcy is required.'),\r\n  dateOfDischarge: yup.string().when('bankruptcy', {\r\n    is: (bankruptcy) => bankruptcy === 'yes',\r\n    then: yup.string().nullable().required('Date of discharge is required.'),\r\n  }),\r\n  averageSales: yup\r\n    .string()\r\n    .required('Estimated average sales volume on shopdot is required.'),\r\n  averageSalePrice: yup\r\n    .string()\r\n    .required('Estimated average sale price on shopdot is required.'),\r\n  averageDeliveryTime: yup\r\n    .object()\r\n    .nullable()\r\n    .required('Average delivery time is required.'),\r\n  merchantCategoryCode: yup\r\n    .object()\r\n    .nullable()\r\n    .required('Merchant category code is required.'),\r\n  salesMethod: yup.object().nullable().required('Sales method is required.'),\r\n  productionDescription: yup\r\n    .string()\r\n    .required('Product description is required.'),\r\n  // phone: yup\r\n  //     .string()\r\n  //     .matches(/^\\d{10}$/, 'Phone number must be 10 digits')\r\n  //     .transform((value, originalValue) => {\r\n  //         if (!originalValue) return originalValue;\r\n  //         const phoneNumber = originalValue.replace(/[^\\d]/g, '');\r\n  //         const phoneNumberLength = phoneNumber.length;\r\n  //         if (phoneNumberLength < 4) return phoneNumber;\r\n  //         if (phoneNumberLength < 7) {\r\n  //             return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3)}`;\r\n  //         }\r\n  //         return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(\r\n  //             3,\r\n  //             6\r\n  //         )}-${phoneNumber.slice(6)}`;\r\n  //     }),\r\n  // phone: yup\r\n  //     .string()\r\n  //     .matches(phoneRegExp, 'Phone number is not in the correct format')\r\n  //     .transform((value, originalValue) => {\r\n  //         const phoneNumber = originalValue.replace(/[^\\d]/g, '');\r\n  //         const hasNonRepeatedConsecutiveNumbers = !/(.)\\1{2,}/.test(\r\n  //             phoneNumber\r\n  //         );\r\n  //         console.log(\r\n  //             'phoneNumber',\r\n  //             hasNonRepeatedConsecutiveNumbers,\r\n  //             phoneNumber,\r\n  //             value\r\n  //         );\r\n  //         if (hasNonRepeatedConsecutiveNumbers) {\r\n  //             const newNumber = `${phoneNumber.slice(\r\n  //                 0,\r\n  //                 3\r\n  //             )}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6)}`;\r\n  //             console.log('newNumber-------------------', newNumber);\r\n  //             return newNumber;\r\n  //         }\r\n  //         return originalValue;\r\n  //     }),\r\n\r\n  // phone: yup\r\n  //     .string()\r\n  //     .required('Phone number is required')\r\n  //     .transform((value, originalValue) => {\r\n  //         // If value is not undefined, remove all non-digit characters and format\r\n  //         if (value) {\r\n  //             const phoneNumber = originalValue.replace(/[^\\d]/g, '');\r\n  //             const newNumber = `${phoneNumber.slice(\r\n  //                 0,\r\n  //                 3\r\n  //             )}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6)}`;\r\n  //             return newNumber;\r\n  //         }\r\n\r\n  // const rawValue = value.replace(/[^\\d]/g, ''); // Remove all non-digits\r\n  // let formattedValue = '';\r\n  // if (rawValue.length < 4) {\r\n  //     formattedValue = rawValue;\r\n  // } else if (rawValue.length < 7) {\r\n  //     formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\r\n  // } else {\r\n  //     formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(\r\n  //         3,\r\n  //         6\r\n  //     )}-${rawValue.slice(6, 10)}`;\r\n  // }\r\n  // If value is undefined, return empty string\r\n  //     return '';\r\n  // })\r\n  // .matches(/^\\d{10}$/, 'Phone number must be 10 digits'),\r\n\r\n  // phone: yup\r\n  //     .string()\r\n  //     .matches(/^\\d{10}$/, 'Phone number must be 10 digits')\r\n  //     .transform((value) =>\r\n  //         value ? value.replace(/(\\d{2})(\\d{3})(\\d{4})/, '$1-$2-$3') : ''\r\n  //     )\r\n  //     .nullable()\r\n  //     .required('Phone number is required'),\r\n\r\n  // phone: yup\r\n  //     .string()\r\n  //     .matches(phoneRegExp, 'Phone number must be 10 digits')\r\n  //     .transform((value, originalValue) =>\r\n  //         originalValue\r\n  //             ? originalValue.replace(/^(\\d{2})(\\d{3})(\\d{4})$/, '$1-$2-$3')\r\n  //             : ''\r\n  //     )\r\n  //     .nullable()\r\n  //     .required('Phone number is required'),\r\n});\r\n\r\nexport const getRepresentativeValidation = () => {\r\n  // Get the store data\r\n  const storeData = store.getState();\r\n  const { gettingPaid } = storeData;\r\n  const { businessDetails } = gettingPaid;\r\n\r\n  return yup.object().shape({\r\n    representativeDetails: yup.array().of(\r\n      yup.object().shape({\r\n        fname: yup\r\n          .string()\r\n          .nullable()\r\n          .required('Legal person first name is required.'),\r\n        lname: yup\r\n          .string()\r\n          .nullable()\r\n          .required('Legal person last name is required.'),\r\n        phoneNumber: yup\r\n          .string()\r\n          .nullable()\r\n          .required('Phone number is required.')\r\n          .min(12, 'Phone should be 10 digits.'),\r\n        ssn: yup\r\n          .string()\r\n          .nullable()\r\n          .required('SSN is required.')\r\n          .min(11, 'SSN should be 9 digit.'),\r\n        dob: yup.string().nullable().required('Date of birth is required.'),\r\n        email: yup\r\n          .string()\r\n          .email('Must be a valid email.')\r\n          .max(255)\r\n          .required('Email address is required.'),\r\n        countryAddress: yup.object().nullable().required('Country is require.'),\r\n        stateAddress: yup.object().nullable().required('State is require.'),\r\n        addressLine1: yup\r\n          .string()\r\n          .nullable()\r\n          .required('Address line 1 is required.'),\r\n        city: yup.string().required('City is required.'),\r\n        zipcode: yup\r\n          .string()\r\n          .nullable()\r\n          .notOneOf(\r\n            ['00000'],\r\n            'Should be in XXXXX format.Cannot containt all zeroes.'\r\n          )\r\n          .min(5)\r\n          .max(5)\r\n          .required('Zipcode must be atleast 5 characters'),\r\n        secondaryIdentificationType: yup\r\n          .object()\r\n          .nullable()\r\n          .required('Secondary identification is required.'),\r\n        soInsurence: yup\r\n          .object()\r\n          .nullable()\r\n          .when('secondaryIdentificationType', {\r\n            is: (secondaryIdentificationType) =>\r\n              secondaryIdentificationType?.value === 'dl',\r\n            then: yup\r\n              .object()\r\n              .nullable()\r\n              .required('State of issuance is required.'),\r\n          }),\r\n        idNumber: yup.string().nullable().required('Id number is required.'),\r\n        percentageOwnership: yup\r\n          .mixed()\r\n          .required('Ownership percentage must be 100%.')\r\n          .test(\r\n            'is-valid-settings',\r\n            'Ownership percentage must be 100%.',\r\n            (value, context) => {\r\n              console.log('context', context);\r\n              // Custom validation function for the 'percentageOwnership' field\r\n              if (businessDetails?.businessCategory?.value === 'partnership') {\r\n                if (\r\n                  value !== '' &&\r\n                  !isNaN(value) &&\r\n                  (Number(value) === 100 ||\r\n                    (Number(value) >= 25 && Number(value) <= 100))\r\n                ) {\r\n                  return true;\r\n                }\r\n                return context.createError({\r\n                  message:\r\n                    Number(value) > 100\r\n                      ? 'Ownership percentage is invalid!'\r\n                      : 'Ownership percentage must be 25% or more',\r\n                  path: context.path,\r\n                });\r\n              } else if (\r\n                businessDetails?.businessCategory?.value ===\r\n                  'single_member_llc' ||\r\n                businessDetails?.businessCategory?.value === 'sole_proprietor'\r\n              ) {\r\n                if (value !== '' && !isNaN(value) && Number(value) === 100) {\r\n                  return true;\r\n                }\r\n                return false;\r\n              }\r\n              if (\r\n                value !== '' &&\r\n                !isNaN(value) &&\r\n                (Number(value) === 100 ||\r\n                  (Number(value) >= 25 && Number(value) <= 100))\r\n              ) {\r\n                return true;\r\n              }\r\n              return context.createError({\r\n                message:\r\n                  Number(value) > 100\r\n                    ? 'Ownership percentage is invalid!'\r\n                    : 'Ownership percentage must be 25% or more',\r\n                path: context.path,\r\n              });\r\n            }\r\n          ),\r\n      })\r\n    ),\r\n  });\r\n};\r\n\r\nexport const BusinessRepresentativeValidationSchema = yup.object().shape({\r\n  representativeDetails: yup.array().of(\r\n    yup.object().shape({\r\n      fname: yup\r\n        .string()\r\n        .nullable()\r\n        .required('Legal person first name is required.'),\r\n      lname: yup\r\n        .string()\r\n        .nullable()\r\n        .required('Legal person last name is required.'),\r\n      // phoneNumber: yup\r\n      //     .string()\r\n      // .matches(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/, 'Invalid phone number')\r\n      // .notOneOf(['00000'], 'Should be in XXX-XXX-XXXX format and Cannot be all zeroes.')\r\n      // .min(10, 'Phone should be 10 digits.')\r\n      // .max(10, 'Phone should be 10 digits.')\r\n      // .required('Phone number is required.'),\r\n      phoneNumber: yup\r\n        .string()\r\n        .nullable()\r\n        .required('Phone number is required.')\r\n        .min(12, 'Phone should be 10 digits.'),\r\n      ssn: yup\r\n        .string()\r\n        .nullable()\r\n        .required('SSN is required.')\r\n        .min(11, 'SSN should be 9 digit.')\r\n        .max(11, 'SSN should be 9 digit.'),\r\n      dob: yup.string().nullable().required('Date of birth is required.'),\r\n      email: yup\r\n        .string()\r\n        .email('Must be a valid email.')\r\n        .max(255)\r\n        .required('Email address is required.'),\r\n      countryAddress: yup.object().nullable().required('Country is require.'),\r\n      stateAddress: yup.object().nullable().required('State is require.'),\r\n      addressLine1: yup\r\n        .string()\r\n        .nullable()\r\n        .required('Address line 1 is required.'),\r\n      city: yup.string().required('City is required.'),\r\n      zipcode: yup\r\n        .string()\r\n        .nullable()\r\n        .notOneOf(\r\n          ['00000'],\r\n          'Should be in XXXXX format.Cannot containt all zeroes.'\r\n        )\r\n        .min(5)\r\n        .max(5)\r\n        .required('Zipcode must be atleast 5 characters'),\r\n      secondaryIdentificationType: yup\r\n        .object()\r\n        .nullable()\r\n        .required('Secondary identification is required.'),\r\n      soInsurence: yup\r\n        .object()\r\n        .nullable()\r\n        .when('secondaryIdentificationType', {\r\n          is: (secondaryIdentificationType) =>\r\n            secondaryIdentificationType?.value === 'dl',\r\n          then: yup\r\n            .object()\r\n            .nullable()\r\n            .required('State of issuance is required.'),\r\n        }),\r\n      idNumber: yup.string().nullable().required('Id number is required.'),\r\n    })\r\n  ),\r\n});\r\n\r\nexport const BankDetailsValidationSchema = yup.object().shape({\r\n  accountHolderName: yup\r\n    .string()\r\n    .required('Bank account holder name is required.'),\r\n  accountType: yup\r\n    .object()\r\n    .nullable()\r\n    .required('Bank account type is required.'),\r\n  accountRole: yup.object().nullable().required('Purpose is required.'),\r\n  accountNumber: yup\r\n    .string()\r\n    .required('Account number is required.')\r\n    .max(8, 'Account number should be 8 digits.')\r\n    .min(8, 'Account number should be 8 digits.'),\r\n  routingNumber: yup\r\n    .string()\r\n    .required('Routing number is require')\r\n    .max(9, 'Routing number should be 9 digits.')\r\n    .min(9, 'Routing number should be 9 digits.'),\r\n});\r\n\r\nexport const SummaryValidationSchema = yup.object().shape({\r\n  confirmation: yup\r\n    .boolean()\r\n    .oneOf([true], 'uou need to accept the confirm details'),\r\n  tnc: yup\r\n    .boolean()\r\n    .oneOf([true], 'you need to accept the terms and conditions'),\r\n});\r\n\r\nexport const shippingValidationSchema = yup.object().shape({\r\n  address1: yup.string().required('Address 1 is required.'),\r\n  daystofulfill: yup\r\n    .object()\r\n    .nullable()\r\n    .required('Days to fultill  is required.'),\r\n  state: yup\r\n    .object()\r\n    .shape({\r\n      label: yup.string().required('State is required.'),\r\n      value: yup.string().required('State is required.'),\r\n    })\r\n    .nullable()\r\n    .required('State is required.'),\r\n  country: yup\r\n    .object()\r\n    .shape({\r\n      label: yup.string().required('Country is required.'),\r\n      value: yup.string().required('Country is required.'),\r\n    })\r\n    .nullable()\r\n    .required('Country is required.'),\r\n  city: yup.string().required('City is required.'),\r\n  shippingfee: yup.string().required('Shipping fee is required.'),\r\n  incrementalfee: yup.string().required('Incremental fee is required.'),\r\n  zip: yup.string().min(5, 'Zipcode must be atleast 5 characters').max(5, 'Zipcode must be 5 characters').required('Zipcode is required'),\r\n});\r\n\r\nexport const brandProfileValidationSchema = yup.object().shape({\r\n  company_name: yup.string().required('Company name is required.'),\r\n  company_email_address: yup\r\n    .string()\r\n    .email('Must be a valid email.')\r\n    .max(255)\r\n    .required('Contact email is required.'),\r\n  company_phone_number: yup\r\n    .string()\r\n    .nullable()\r\n    .required('Contact phone number is required.')\r\n    .min(12, 'Contact phone should be 10 digits.'),\r\n  store_name: yup.string().required('Brand name is required.'),\r\n  store_website: yup\r\n    .string()\r\n    .url('Please enter a valid URL')\r\n    .required('Brand website is required.'),\r\n  brand_categories: yup\r\n    .array()\r\n    .min(1, 'At least 1 category required')\r\n    .max(3, 'Select max 3 category.')\r\n    .nullable()\r\n    .required('Select max 3 category.'),\r\n  brand_values: yup.array(),\r\n  brand_story: yup.string().required('About the brand is required.'),\r\n  brand_promo: yup.string().url('Please enter a valid URL'),\r\n});\r\n","import React, { useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { brandProfileValidationSchema } from '../Paid/ValidationSchema';\nimport EditIcon from '../../images/icons/icon-edit.svg';\nimport Brandlogo from '../../images/profile-avatar.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getBrandProfileAction,\n  getPlatformCategoryAction,\n  getPlatformValuesAction,\n  updateBrandProfileAction,\n} from '../../../../actions/brandActions';\nimport { uploadImageAction } from '../../../../actions/userActions';\nimport { selectUserDetails } from '../../../../redux/user/userSelector';\nimport {\n  selectBrandCategory,\n  selectBrandProfileDetails,\n  selectBrandValues,\n} from '../../../../redux/Brand/Profile/brandProfileSelectors';\nimport { cloneDeep, isEmpty, map, remove } from 'lodash';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function BrandProfile() {\n  const [image, setImage] = useState(Brandlogo);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(brandProfileValidationSchema),\n  });\n  const dispatch = useDispatch();\n  const useDetails = useSelector(selectUserDetails);\n  const brandCategoryList = useSelector(selectBrandCategory);\n  const brandValueList = useSelector(selectBrandValues);\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n  const [selectedCategory, setSelectCategory] = useState([]);\n  const [selectedValues, setSelectValues] = useState([]);\n  const [profileLoading, setProfileLoading] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(getPlatformCategoryAction());\n      dispatch(getPlatformValuesAction());\n      dispatch(getBrandProfileAction(useDetails.id));\n    }, 350);\n  }, []);\n\n  const initialState = async (brandData) => {\n    if (brandData?.brand_profile?.id) {\n      const categoryArray = [];\n      const valuesArray = [];\n      if (brandData.brand_categories && brandData.brand_categories.length) {\n        await map(brandData.brand_categories, (cat, key) => {\n          categoryArray.push(cat.id);\n        });\n      }\n      if (brandData.brand_values && brandData.brand_values.length) {\n        await map(brandData.brand_values, (cat, key) => {\n          valuesArray.push(cat.id);\n        });\n      }\n      setImage(brandData.brand_profile.store_logo || Brandlogo);\n      reset({\n        brand_values: valuesArray,\n        brand_categories: categoryArray,\n        company_name: brandData.brand_profile.company_name,\n        company_email_address: brandData.brand_profile.company_email_address,\n        company_phone_number: brandData.brand_profile.company_phone_number,\n        store_name: brandData.brand_profile.store_name,\n        store_website: brandData.brand_profile.store_website,\n        brand_story: brandData.brand_profile.brand_story,\n        brand_promo: brandData.brand_profile.brand_promo,\n      });\n      setTimeout(() => {\n        setSelectCategory(categoryArray);\n        setSelectValues(valuesArray);\n      }, 100);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      brandProfileDetails.brand_profile &&\n      brandProfileDetails.brand_profile.id\n    ) {\n      initialState(brandProfileDetails);\n    }\n  }, [brandProfileDetails]);\n\n  const handleCheckbox = (value, valueType) => {\n    const valueParse = JSON.parse(value);\n    const currentArray =\n      valueType === 'category' ? selectedCategory : selectedValues;\n\n    const updateArray = cloneDeep(currentArray);\n    const isSelected = updateArray.includes(valueParse);\n    if (isSelected) {\n      remove(updateArray, (r, key) => {\n        return r === valueParse;\n      });\n    } else {\n      updateArray.push(valueParse);\n    }\n    if (valueType === 'category') {\n      setSelectCategory(updateArray);\n    } else if (valueType === 'value') {\n      setSelectValues(updateArray);\n    }\n  };\n\n  const onChangeImage = (e) => {\n    if (!profileLoading) {\n      setProfileLoading(true);\n      const data = new FormData();\n      data.append('file', e.target.files[0]);\n\n      uploadImageAction(data)\n        .then((res) => {\n          setImage(res.url);\n        })\n        .finally(() => {\n          setProfileLoading(false);\n        });\n    }\n  };\n\n  const onSubmit = (data) => {\n    console.log('data 2', data);\n    console.log('brandProfileDetails', brandProfileDetails);\n    const isCreate = Object.keys(brandProfileDetails).length === 0;\n    dispatch(\n      updateBrandProfileAction(\n        {\n          user_id: useDetails.id,\n          role_id: 1,\n          store_logo: image,\n          profile_picture: image,\n          ...data,\n        },\n        isCreate\n      )\n    );\n    // reset();\n  };\n\n  const handlePhoneChange = (event, i) => {\n    const rawValue = event.target.value.replace(/[^\\d]/g, ''); // Remove all non-digits\n    let formattedValue = '';\n    if (rawValue.length < 4) {\n      formattedValue = rawValue;\n    } else if (rawValue.length < 7) {\n      formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(3)}`;\n    } else {\n      formattedValue = `${rawValue.slice(0, 3)}-${rawValue.slice(\n        3,\n        6\n      )}-${rawValue.slice(6, 10)}`;\n    }\n    setValue('company_phone_number', formattedValue);\n  };\n\n  return (\n    <div className=\"pc_tabs-content tabs_body\">\n      <div className=\"tab active\" data-target=\"Account\">\n        <div className=\"products_content\">\n          <div className=\"products_head mp-head head-with-subtitle\">\n            <div className=\"products_head-content\">\n              <div className=\"title\">\n                <h1>Brand Profile</h1>\n              </div>\n            </div>\n            <p>\n              Information entered on this page will be visible to retailers\n              within ShopDot.\n            </p>\n          </div>\n          <div className=\"products_body\">\n            <div className=\"content_area\">\n              <div id=\"account\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"account_info\">\n                    <h2>Contact Information </h2>\n                    <div className=\"form-area\">\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Company name <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"company_name\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('company_name', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.company_name && (\n                          <span className=\"error-text\">\n                            {errors?.company_name?.message}\n                          </span>\n                        )}\n                      </div>\n\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Contact email <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"company_email_address\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('company_email_address', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.company_email_address && (\n                          <span className=\"error-text\">\n                            {errors?.company_email_address?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Contact phone number{' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n\n                        <Controller\n                          name={'company_phone_number'}\n                          control={control}\n                          render={({ field: { onChange, onBlur, value } }) => (\n                            <input\n                              type=\"tel\"\n                              value={value}\n                              className=\"form-control mb-0\"\n                              placeholder=\"(123) 456-7899\"\n                              onChange={(e) => {\n                                onChange(e);\n                                handlePhoneChange(e);\n                              }}\n                              onBlur={onBlur}\n                            />\n                          )}\n                        />\n                        {/* <input\n                          type=\"tel\"\n                          className=\"form-control mb-0\"\n                          onChange={(e) => {\n                            handlePhoneChange(e);\n                          }}\n                          name=\"company_phone_number\"\n                          placeholder=\"(123) 456-7899\"\n                          {...register('company_phone_number', {\n                            required: true,\n                          })}\n                        /> */}\n\n                        {errors?.company_phone_number && (\n                          <span className=\"error-text\">\n                            {errors?.company_phone_number?.message}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"my_store\">\n                    <h2>Brand Information </h2>\n                    <div className=\"form-area\">\n                      <div>\n                        <div className=\"form-input form-upload-image\">\n                          <a href=\"#\" className=\"upload-logo\">\n                            <label>\n                              <input\n                                className=\"d-none\"\n                                id=\"\"\n                                type=\"file\"\n                                onChange={onChangeImage}\n                              />\n                              <img src={EditIcon} className=\"icon\" />\n                              <div className=\"profile-user-avtar\">\n                                <img src={image} />\n                              </div>\n                            </label>\n                          </a>\n                          <label>\n                            Upload logo\n                            <span className=\"asterisk-red\"> *</span>\n                            <a\n                              href=\"#\"\n                              className=\"remove-logo\"\n                              onClick={() => {\n                                if (!profileLoading) {\n                                  setImage('');\n                                }\n                              }}\n                            >\n                              Remove logo{' '}\n                            </a>\n                            <span className=\"logo-instruction\">\n                              Format Type:\n                              <b>JPEG or PNG</b>. Maximum size is <b>5MB</b>, No\n                              less than <b>512 x 512</b> pixels and no more than{' '}\n                              <b>1024 x 1024</b> pixels.\n                            </span>\n                          </label>\n                        </div>\n                        {isEmpty(image) && (\n                          <span className=\"error-text\">Please add logo</span>\n                        )}\n                      </div>\n                      <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                          Brand name <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"store_name\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('store_name', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.store_name && (\n                          <span className=\"error-text\">\n                            {errors?.store_name?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Brand website\n                          <span className=\"asterisk-red\">*</span>\n                          <div className=\"tooltip\">\n                            <div className=\"tooltip-icon\">\n                              <svg className=\"icon\"></svg>\n                            </div>\n                            <div className=\"tooltip_text\">\n                              <p>\n                                This is your store that is connected with\n                                ShopDot. You can connect a different store in\n                                the Integration section.\n                              </p>\n                            </div>\n                          </div>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"store_website\"\n                          placeholder=\"janebeautyparlor.com\"\n                          {...register('store_website', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.store_website && (\n                          <span className=\"error-text\">\n                            {errors?.store_website?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-checkbox mb-4\">\n                        <label className=\"form-label\">\n                          Brand category (Select up to three){' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n\n                        <div className=\"select-checkbox\">\n                          {brandCategoryList && brandCategoryList.length ? (\n                            brandCategoryList.map((item, i) => {\n                              return (\n                                <div className=\"check-item\" key={i}>\n                                  <label className=\"checkbox\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name={'brand_categories'}\n                                      checked={selectedCategory.includes(\n                                        item.id\n                                      )}\n                                      value={item.id}\n                                      {...register('brand_categories', {\n                                        onChange: (e) => {\n                                          handleCheckbox(\n                                            e.target.value,\n                                            'category'\n                                          );\n                                        },\n                                      })}\n                                    />\n                                    <div className=\"checkbox-text\">\n                                      <span>{item.name}</span>\n                                    </div>\n                                  </label>\n                                </div>\n                              );\n                            })\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                        {errors?.brand_categories && (\n                          <span className=\"error-text\">\n                            {errors?.brand_categories?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-checkbox mb-4\">\n                        <label className=\"form-label\">Brand values</label>\n                        <div className=\"select-checkbox third-col\">\n                          <div className=\"select-checkbox\">\n                            {brandValueList && brandValueList.length ? (\n                              brandValueList.map((val, i) => {\n                                return (\n                                  <div className=\"check-item\" key={i}>\n                                    <label className=\"checkbox\">\n                                      <input\n                                        type=\"checkbox\"\n                                        name={'brand_values'}\n                                        checked={selectedValues.includes(\n                                          val.id\n                                        )}\n                                        value={val.id}\n                                        {...register('brand_values', {\n                                          required: false,\n                                          onChange: (e) => {\n                                            handleCheckbox(\n                                              e.target.value,\n                                              'value'\n                                            );\n                                          },\n                                        })}\n                                      />\n                                      <div className=\"checkbox-text\">\n                                        <span>{val.name}</span>\n                                      </div>\n                                    </label>\n                                  </div>\n                                );\n                              })\n                            ) : (\n                              <div />\n                            )}\n                          </div>\n                          {errors?.brand_values && (\n                            <span className=\"error-text\">\n                              {errors?.brand_values?.message}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"form-input form-story mb-4\">\n                        <label className=\"form-label\">\n                          About the brand{' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <textarea\n                          id=\"\"\n                          rows=\"8\"\n                          required=\"\"\n                          className=\"text-area   \"\n                          name=\"brand_story\"\n                          placeholder=\"\"\n                          {...register('brand_story', {\n                            required: true,\n                          })}\n                        ></textarea>\n                        {errors?.brand_story && (\n                          <span className=\"error-text\">\n                            {errors?.brand_story?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                          Add a Youtube or Vimeo video link.{' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"brand_promo\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('brand_promo', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.brand_promo && (\n                          <span className=\"error-text\">\n                            {errors?.brand_promo?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-submit\">\n                        <button\n                          onClick={() => reset()}\n                          className=\"button button-grey cancel\"\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          onClick={() => {\n                            handleSubmit();\n                          }}\n                          type=\"submit\"\n                          className=\"button\"\n                        >\n                          Save\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n"],"names":["updateUserRoleAction","formData","navigate","platformName","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","wrap","_context","prev","next","axios","post","API_END_POINT","sent","data","code","setRoleUpdated","role","addUserPlatformAction","user_id","platform","toast","error","t0","errors","stop","_x","apply","arguments","_ref2","_callee2","_context2","state","_x2","uploadImageAction","_x3","_uploadImageAction","_callee5","_context5","headers","abrupt","updateNotificationAction","_ref3","_callee3","_response$data","_context3","success","message","getNotificationAction","brand_id","_x4","brandId","_ref4","_callee4","_context4","get","concat","setNotificationData","_x5","BusinessDetailsValidationSchema","yup","shape","businessName","required","website","matches","businessEmail","email","max","businessCategory","nullable","textIdType","when","is","value","then","phoneNumber","min","addressLine1","countryAddress","stateAddress","city","zipcode","notOneOf","stateOfIncorportation","dateOfIncorportation","bankruptcy","dateOfDischarge","averageSales","averageSalePrice","averageDeliveryTime","merchantCategoryCode","salesMethod","productionDescription","getRepresentativeValidation","businessDetails","store","getState","gettingPaid","representativeDetails","of","fname","lname","ssn","dob","secondaryIdentificationType","soInsurence","idNumber","percentageOwnership","test","context","_businessDetails$busi","_businessDetails$busi2","_businessDetails$busi3","console","log","isNaN","Number","createError","path","BusinessRepresentativeValidationSchema","BankDetailsValidationSchema","accountHolderName","accountType","accountRole","accountNumber","routingNumber","SummaryValidationSchema","confirmation","oneOf","tnc","shippingValidationSchema","address1","daystofulfill","label","country","shippingfee","incrementalfee","zip","brandProfileValidationSchema","company_name","company_email_address","company_phone_number","store_name","store_website","url","brand_categories","brand_values","brand_story","brand_promo","BrandProfile","_errors$company_name","_errors$company_email","_errors$company_phone","_errors$store_name","_errors$store_website","_errors$brand_categor","_errors$brand_values","_errors$brand_story","_errors$brand_promo","_useState","useState","Brandlogo","_useState2","_slicedToArray","image","setImage","_useForm","useForm","mode","resolver","yupResolver","register","handleSubmit","reset","setValue","control","formState","useDispatch","useDetails","useSelector","selectUserDetails","brandCategoryList","selectBrandCategory","brandValueList","selectBrandValues","brandProfileDetails","selectBrandProfileDetails","_useState3","_useState4","selectedCategory","setSelectCategory","_useState5","_useState6","selectedValues","setSelectValues","_useState7","_useState8","profileLoading","setProfileLoading","useEffect","setTimeout","getPlatformCategoryAction","getPlatformValuesAction","getBrandProfileAction","id","initialState","brandData","_brandData$brand_prof","categoryArray","valuesArray","brand_profile","length","map","cat","key","push","store_logo","handleCheckbox","valueType","valueParse","JSON","parse","currentArray","updateArray","cloneDeep","includes","remove","r","_jsxs","className","children","_jsx","onSubmit","isCreate","Object","keys","updateBrandProfileAction","_objectSpread","role_id","profile_picture","type","name","placeholder","Controller","render","_ref2$field","field","onChange","onBlur","e","event","i","rawValue","target","replace","formattedValue","slice","handlePhoneChange","href","FormData","append","files","res","finally","src","EditIcon","onClick","isEmpty","item","checked","val","rows","ToastContainer"],"sourceRoot":""}