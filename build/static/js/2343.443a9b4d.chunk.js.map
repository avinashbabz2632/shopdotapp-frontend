{"version":3,"file":"static/js/2343.443a9b4d.chunk.js","mappings":"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","sources":["components/common/A/index.js","pages/Brand/common/components/Sidebar.js","pages/Brand/Settings/index.js","redux/Brand/Profile/brandProfileSelectors.js"],"sourcesContent":["/**\n * A link to a certain page, an anchor tag\n */\n\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { orange100 } from '../../../theme/variables';\n\nexport const A = styled.a`\n  color: ${orange100};\n  font-family: 'Mulish', sans-serif;\n  font-size: 16px;\n  text-decoration: none;\n\n  &.sm {\n    font-size: 14px;\n    letter-spacing: -0.02em;\n  }\n\n  &[disabled] {\n    pointer-events: none;\n  }\n\n  &:hover {\n    color: ${orange100};\n  }\n`;\n\nexport const LinkMod = styled(Link)`\n  color: ${orange100};\n  font-family: 'Mulish', sans-serif;\n  // font-size: 14px;\n  // text-decoration: none;\n  outline: 0;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  text-align: center;\n  border: none;\n  -webkit-font-smoothing: antialiased;\n  box-sizing: border-box;\n  &:hover {\n    color: ${orange100};\n    opacity: 0.8;\n  };\n`;\n","import React, { useState } from 'react';\nimport { LinkMod } from '../../../../components/common/A';\nimport { useParams } from 'react-router-dom';\n\nexport default function BrandSidebar({ completedStep }) {\n  console.log('completedStep----', completedStep);\n  const { activeTab } = useParams();\n\n  const [tab, setTab] = useState(activeTab);\n\n  const handleChangTab = (tabName) => {\n    setTab(tabName);\n  };\n\n  const isStepCompleted = (step) => {\n    if (step.required) {\n      return completedStep.includes(step.tabName) ? 'checked' : 'required';\n    }\n    return '';\n  };\n\n  const isPreviousStepCompleted = (step, index) => {\n    if(step.required) {\n      const previousStepIndex = index - 1;\n      if(previousStepIndex == -1) return true;\n      const item = allSteps[previousStepIndex];\n      return  completedStep.includes(item?.tabName);\n    }\n    return true;\n  }\n\n  const allSteps = [\n    {\n      to: '/brand/setting',\n      dataLink: 'Account',\n      name: 'Brand Profile',\n      tabName: 'profile',\n      required: true,\n    },\n    {\n      to: '/brand/setting/preference',\n      dataLink: 'Preferences',\n      name: 'Preferences',\n      tabName: 'preference',\n      required: true,\n    },\n    {\n      to: '/brand/setting/paid',\n      dataLink: 'GettingPaid',\n      name: 'Getting Paid',\n      tabName: 'payment',\n      required: true,\n    },\n    {\n      to: '/brand/setting/shipping',\n      dataLink: 'Shipping',\n      name: 'Shipping',\n      tabName: 'shipping',\n      required: true,\n    },\n    {\n      to: '/brand/setting/integration',\n      dataLink: 'Integration',\n      name: 'Integration',\n      tabName: 'integration',\n      required: true,\n    },\n    {\n      to: '/brand/setting/users',\n      dataLink: 'Users',\n      name: 'Users',\n      tabName: 'users',\n      required: false,\n    },\n    {\n      to: '/brand/setting/security',\n      dataLink: 'Security',\n      name: 'Security',\n      tabName: 'security',\n      required: false,\n    },\n    {\n      to: '/brand/setting/notification',\n      dataLink: 'AlertsNotifications',\n      name: 'Notifications',\n      tabName: 'notification',\n      required: false,\n    },\n  ];\n\n  return (\n    <aside className=\"filters mp-filter\">\n      <div className=\"filters_wrap\">\n        <div className=\"filters_block filters_block-body\">\n          <div className=\"filter-by-products\">\n            <div className=\"link-sidebar\">\n              <div className=\"tab_wrap\">\n                <div className=\"setting-tab-title\">Setting</div>\n                <input type=\"checkbox\" name=\"\" id=\"\" className=\"\" />\n                <div className=\"hamburger-lines tabs-hamburger-lines\">\n                  <span className=\"line line1\"></span>\n                  <span className=\"line line2\"></span>\n                  <span className=\"line line3\"></span>\n                </div>\n                <div className=\"pc_tabs-menu tab_menu\">\n                  {allSteps.map((step, index) => {\n                    return (\n                      <LinkMod\n                        key={`${index}`}\n                        to={step.to}\n                        data-link={step.dataLink}\n                        className={`tab-links ${isStepCompleted(step)} ${\n                          tab === step.tabName ? 'active' : ''\n                        }`}\n                        onClick={() => {\n                          handleChangTab(step.tabName);\n                        }}\n                        style={isPreviousStepCompleted(step, index) ? null : { pointerEvents: 'none' }}\n                      >\n                        {step.name}\n                        {step.required && <div className=\"tooltip_text not-available-tooltip\">\n                          <p>\n                            This is a mandatory setting that is part of the\n                            onboarding process.\n                          </p>\n                        </div>}\n                      </LinkMod>\n                    );\n                  })}\n                  {/* <LinkMod\n                    to={'/brand/setting'}\n                    data-link=\"Account\"\n                    className={`tab-links ${\n                      completedStep.includes('profile') ? 'checked' : 'required'\n                    } ${tab === 'profile' || tab == undefined ? 'active' : ''}`}\n                    onClick={() => handleChangTab('profile')}\n                    style={{pointerEvents: 'none'}}\n                  >\n                    Brand Profile\n                    <div className=\"tooltip_text not-available-tooltip\">\n                      <p>\n                        This is a mandatory setting that is part of the\n                        onboarding process.\n                      </p>\n                    </div>\n                  </LinkMod>\n                  <LinkMod\n                    to={'/brand/setting/preference'}\n                    data-link=\"Preferences\"\n                    className={`tab-links required ${checkStepCompleted(\n                      'preference'\n                    )} ${tab === 'preference' ? 'active' : ''}`}\n                    onClick={() => handleChangTab('preference')}\n                  >\n                    Preferences\n                    <div className=\"tooltip_text not-available-tooltip\">\n                      <p>\n                        This is a mandatory setting that is part of the\n                        onboarding process.\n                      </p>\n                    </div>\n                  </LinkMod>\n                  <LinkMod\n                    to={'/brand/setting/paid'}\n                    data-link=\"GettingPaid\"\n                    className={`tab-links required ${checkStepCompleted(\n                      'payment'\n                    )} ${tab === 'paid' ? 'active' : ''}`}\n                    onClick={() => handleChangTab('paid')}\n                  >\n                    Getting Paid\n                    <div className=\"tooltip_text not-available-tooltip\">\n                      <p>\n                        This is a mandatory setting that is part of the\n                        onboarding process.\n                      </p>\n                    </div>\n                  </LinkMod>\n                  <LinkMod\n                    to={'/brand/setting/shipping'}\n                    data-link=\"Shipping\"\n                    className={`tab-links required ${checkStepCompleted(\n                      'shipping'\n                    )} ${tab === 'shipping' ? 'active' : ''}`}\n                    onClick={() => handleChangTab('shipping')}\n                  >\n                    Shipping\n                    <div className=\"tooltip_text not-available-tooltip\">\n                      <p>\n                        This is a mandatory setting that is part of the\n                        onboarding process.\n                      </p>\n                    </div>\n                  </LinkMod>\n                  <LinkMod\n                    to={'/brand/setting/integration'}\n                    data-link=\"Integration\"\n                    className={`tab-links required ${checkStepCompleted(\n                      'integration'\n                    )} ${tab == 'integration' ? 'active' : ''}`}\n                    onClick={() => handleChangTab('integration')}\n                  >\n                    Integration\n                    <div className=\"tooltip_text not-available-tooltip\">\n                      <p>\n                        This is a mandatory setting that is part of the\n                        onboarding process.\n                      </p>\n                    </div>\n                  </LinkMod>\n                  <LinkMod\n                    to={'/brand/setting/users'}\n                    data-link=\"Users\"\n                    className={`tab-links ${tab === 'users' ? 'active' : ''}`}\n                    onClick={() => handleChangTab('users')}\n                  >\n                    Users\n                  </LinkMod>\n                  <LinkMod\n                    to={'/brand/setting/security'}\n                    data-link=\"Security\"\n                    className={`tab-links ${\n                      tab === 'security' ? 'active' : ''\n                    }`}\n                    onClick={() => handleChangTab('security')}\n                  >\n                    Security\n                  </LinkMod>\n                  <LinkMod\n                    to={'/brand/setting/notification'}\n                    data-link=\"AlertsNotifications\"\n                    className={`tab-links ${\n                      tab === 'notification' ? 'active' : ''\n                    }`}\n                    onClick={() => handleChangTab('notification')}\n                  >\n                    Notifications\n                  </LinkMod> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </aside>\n  );\n}\n","import '../Style/brand.style.scss';\nimport '../Style/brand.media.scss';\nimport '../Style/brand.dev.scss';\n\nimport React, { lazy, Suspense, useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Loader from '../../../components/Loader';\nimport BrandHeader from '../common/components/BrandHeader';\nimport BrandSidebar from '../common/components/Sidebar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createBrowserHistory } from 'history';\nimport { selectUserDetails } from '../../../redux/user/userSelector';\nimport {\n  getBrandProfileAction,\n  getBrandShippingTime,\n} from '../../../actions/brandActions';\nimport { selectProfileCompleted } from '../../../redux/Brand/Profile/brandProfileSelectors';\nimport { AuthApiService } from '../../../services/apis/authApis';\nimport { logOut } from '../../../redux/auth/authSlice';\nimport { toast } from 'react-toastify';\n\nconst BrandShipping = lazy(() => import('./Shipping'));\nconst BrandSecurity = lazy(() => import('./Security'));\nconst BrandProfile = lazy(() => import('./Profile'));\nconst BrandPreference = lazy(() => import('./Preferences'));\nconst BrandPaid = lazy(() => import('./Paid'));\nconst BrandNotification = lazy(() => import('./Notifications'));\nconst BrandUsers = lazy(() => import('./Users'));\nconst BrandIntegration = lazy(() => import('./Integration'));\nimport { getCountriesAction } from '../../../actions/generalActions';\n\nexport default function BrandSettingPage() {\n  const navigate = useNavigate();\n  const { activeTab } = useParams();\n  const [tab, setTab] = useState('');\n  const [completedStep, setCompletedStep] = useState([]);\n  const [subTab, setSubTab] = useState(1);\n  const dispatch = useDispatch();\n  const useDetails = useSelector(selectUserDetails);\n  const history = createBrowserHistory();\n  const profileCompleted = useSelector(selectProfileCompleted);\n\n  const handleLogOut = async () => {\n    const fromData = {\n      user_id: useDetails.id,\n    };\n\n    const res = await AuthApiService.signOut({ fromData });\n\n    if (res) {\n      dispatch(logOut());\n      history.replace('/logout');\n      navigate('/logout');\n      return;\n    }\n\n    toast.error('Seomething went wrong while signing out!');\n  };\n\n  useEffect(() => {\n    if (activeTab == 'shipping') {\n      setTab('shipping');\n    } else if (activeTab == 'security') {\n      setTab('security');\n    } else if (activeTab == 'profile') {\n      setTab('profile');\n    } else if (activeTab == 'preference') {\n      setTab('preference');\n    } else if (activeTab == 'paid') {\n      setTab('paid');\n    } else if (activeTab == 'notification') {\n      setTab('notification');\n    } else if (activeTab == 'users') {\n      setTab('users');\n    } else if (activeTab == 'integration') {\n      setTab('integration');\n    } else {\n      setTab('');\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    dispatch(getBrandProfileAction(useDetails?.id));\n    dispatch(getCountriesAction());\n    dispatch(getBrandShippingTime());\n  }, []);\n\n  useEffect(() => {\n    const steps = [];\n    if (profileCompleted.profile) {\n      steps.push('profile');\n    }\n    if (profileCompleted?.integration) {\n      steps.push('integration');\n    }\n    if (profileCompleted.shipping) {\n      steps.push('shipping');\n    }\n    if (profileCompleted.paid) {\n      steps.push('payment');\n    }\n    if (profileCompleted.preference) {\n      steps.push('preference');\n    }\n\n    setCompletedStep(steps);\n  }, [profileCompleted]);\n\n  const renderTab = (tabName) => {\n    switch (tabName) {\n      case 'shipping':\n        return <BrandShipping />;\n      case 'security':\n        return <BrandSecurity />;\n      case 'integration':\n        return <BrandIntegration />;\n      case 'preference':\n        return <BrandPreference />;\n      case 'paid':\n        return <BrandPaid />;\n      case 'notification':\n        return <BrandNotification />;\n      case 'users':\n        return <BrandUsers />;\n      default:\n        return <BrandProfile />;\n    }\n  };\n\n  const changeSubTab = useCallback(\n    (key) => {\n      if (key === 'connect') {\n        setSubTab(1);\n      } else {\n        setSubTab(2);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [subTab]\n  );\n\n  return (\n    <div className=\"wrapper\">\n      <BrandHeader\n        useDetails={useDetails}\n        callback={(callbackType) => {\n          if (callbackType === 'logout') {\n            handleLogOut();\n          }\n        }}\n        subTabs={subTab}\n        changeSubTab={changeSubTab}\n      />\n      <main\n        className=\"content mp-content setting-section\"\n        style={{ background: 'white' }}\n      >\n        <section\n          className=\"section products pc_tabs tabs\"\n          style={{ background: 'white' }}\n        >\n          <BrandSidebar completedStep={completedStep} />\n          <Suspense>\n            {tab && renderTab(tab)}\n            {!activeTab && <BrandProfile />}\n          </Suspense>\n        </section>\n      </main>\n    </div>\n  );\n}\n","export const selectBrandProfileDetails = (state) =>\n  state.brandProfile.brandProfileDetails;\n\nexport const selectBrandCategory = (state) => state.brandProfile.brandCategory;\n\nexport const selectBrandValues = (state) => state.brandProfile.brandValues;\nexport const selectProfileCompleted = (state) =>\n  state.brandProfile.profileCompleted;\n"],"names":["LinkMod","styled","a","_templateObject","_taggedTemplateLiteral","orange100","Link","_templateObject2","BrandSidebar","_ref","completedStep","console","log","activeTab","useParams","_useState","useState","_useState2","_slicedToArray","tab","setTab","isStepCompleted","step","required","includes","tabName","isPreviousStepCompleted","index","previousStepIndex","item","allSteps","to","dataLink","name","_jsx","className","children","_jsxs","type","id","map","concat","onClick","style","pointerEvents","BrandShipping","lazy","BrandSecurity","BrandProfile","BrandPreference","BrandPaid","BrandNotification","BrandUsers","BrandIntegration","BrandSettingPage","navigate","useNavigate","_useState3","_useState4","setCompletedStep","_useState5","_useState6","subTab","setSubTab","dispatch","useDispatch","useDetails","useSelector","selectUserDetails","history","createBrowserHistory","profileCompleted","selectProfileCompleted","handleLogOut","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fromData","wrap","_context","prev","next","user_id","AuthApiService","signOut","sent","logOut","replace","abrupt","toast","error","stop","apply","arguments","useEffect","getBrandProfileAction","getCountriesAction","getBrandShippingTime","steps","profile","push","integration","shipping","paid","preference","changeSubTab","useCallback","key","BrandHeader","callback","callbackType","subTabs","background","Suspense","renderTab","selectBrandProfileDetails","state","brandProfile","brandProfileDetails","selectBrandCategory","brandCategory","selectBrandValues","brandValues"],"sourceRoot":""}