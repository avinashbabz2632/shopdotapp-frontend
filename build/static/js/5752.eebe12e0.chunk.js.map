{"version":3,"file":"static/js/5752.eebe12e0.chunk.js","mappings":"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","sources":["pages/Brand/images/icons/icon-edit.svg","actions/userActions.js","pages/Brand/Settings/Profile/index.js","../node_modules/@hookform/resolvers/src/validateFieldsNatively.ts","../node_modules/@hookform/resolvers/src/toNestError.ts","../node_modules/@hookform/resolvers/yup/src/yup.ts"],"sourcesContent":["var _rect, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    rx: 4,\n    fill: \"white\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.8311 9.35111L14.6489 10.1689L6.59556 18.2222H5.77778V17.4044L13.8311 9.35111ZM17.0311 4C16.8089 4 16.5778 4.08889 16.4089 4.25778L14.7822 5.88444L18.1156 9.21778L19.7422 7.59111C20.0889 7.24444 20.0889 6.68444 19.7422 6.33778L17.6622 4.25778C17.4844 4.08 17.2622 4 17.0311 4ZM13.8311 6.83556L4 16.6667V20H7.33333L17.1644 10.1689L13.8311 6.83556Z\",\n    fill: \"#283B49\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconEdit);\nexport default __webpack_public_path__ + \"static/media/icon-edit.66db4866fc239f5ff3f3b6abbb739e70.svg\";\nexport { ForwardRef as ReactComponent };","import axios from '../utils/axios';\nimport { toast } from 'react-toastify';\nimport * as API_END_POINT from '../constants/api';\nimport { setNotificationData, setRoleUpdated } from '../redux/user/userSlice';\n\nexport function updateUserRoleAction(formData, navigate, platformName) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.USER_ROLE, formData);\n      if (response && response.data && response.data.code == 201) {\n        dispatch(setRoleUpdated());\n        if (formData.role === 'brand') {\n          dispatch(\n            addUserPlatformAction(\n              {\n                user_id: formData.user_id,\n                platform: platformName,\n              },\n              navigate\n            )\n          );\n        } else {\n          navigate('/retailer-onboarding');\n        }\n      } else {\n        toast.error('Something went worng');\n      }\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n    }\n  };\n}\n\nexport function addUserPlatformAction(formData, navigate) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.USER_PLATFORM, formData);\n      if (response && response.data && response.data.code == 201) {\n        navigate('/brand-onboarding');\n      } else {\n        navigate('/personalized-not-supported', { state: formData.platform });\n      }\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n\nexport async function uploadImageAction(formData) {\n  try {\n    const response = await axios.post(API_END_POINT.UPLOAD_IMAGE, formData, {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    });\n    if (response && response.data && response.data.code == 200) {\n      return response.data.data;\n    } else {\n      toast.error('Something went worng');\n    }\n    return response;\n  } catch (err) {\n    toast.error(\n      err && err.response && err.response.data && err.response.data.errors\n        ? err.response.data.errors\n        : 'Something went worng'\n    );\n    throw err;\n  }\n}\n\nexport function updateNotificationAction(formData) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(API_END_POINT.NOTIFICATION, formData);\n      if (response && response.data && response.data.code == 201) {\n        toast.success('Notification Updated');\n        dispatch(getNotificationAction(formData.brand_id));\n      } else {\n        toast.error('Something went worng');\n      }\n      return response;\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n\nexport function getNotificationAction(brandId) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(\n        `${API_END_POINT.NOTIFICATION}/${brandId}/`\n      );\n      if (response && response.data && response.data.code == 200) {\n        if (response.data.data) {\n          dispatch(setNotificationData(response.data.data));\n        }\n      } else {\n      }\n      return response;\n    } catch (err) {\n      toast.error(\n        err && err.response && err.response.data && err.response.data.errors\n          ? err.response.data.errors\n          : 'Something went worng'\n      );\n      throw err;\n    }\n  };\n}\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { brandProfileValidationSchema } from '../Paid/ValidationSchema';\nimport EditIcon from '../../images/icons/icon-edit.svg';\nimport Brandlogo from '../../images/profile-avatar.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getBrandProfileAction,\n  getPlatformCategoryAction,\n  getPlatformValuesAction,\n  updateBrandProfileAction,\n} from '../../../../actions/brandActions';\nimport { uploadImageAction } from '../../../../actions/userActions';\nimport { selectUserDetails } from '../../../../redux/user/userSelector';\nimport {\n  selectBrandCategory,\n  selectBrandProfileDetails,\n  selectBrandValues,\n} from '../../../../redux/Brand/Profile/brandProfileSelectors';\nimport { cloneDeep, isEmpty, map, remove } from 'lodash';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function BrandProfile() {\n  const [image, setImage] = useState(Brandlogo);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(brandProfileValidationSchema),\n  });\n  const dispatch = useDispatch();\n  const useDetails = useSelector(selectUserDetails);\n  const brandCategoryList = useSelector(selectBrandCategory);\n  const brandValueList = useSelector(selectBrandValues);\n  const brandProfileDetails = useSelector(selectBrandProfileDetails);\n  const [selectedCategory, setSelectCategory] = useState([]);\n  const [selectedValues, setSelectValues] = useState([]);\n  const [profileLoading, setProfileLoading] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(getPlatformCategoryAction());\n      dispatch(getPlatformValuesAction());\n      dispatch(getBrandProfileAction(useDetails.id));\n    }, 350);\n  }, []);\n\n  const initialState = async (brandData) => {\n    if (brandData?.brand_profile?.id) {\n      const categoryArray = [];\n      const valuesArray = [];\n      if (brandData.brand_categories && brandData.brand_categories.length) {\n        await map(brandData.brand_categories, (cat, key) => {\n          categoryArray.push(cat.id);\n        });\n      }\n      if (brandData.brand_values && brandData.brand_values.length) {\n        await map(brandData.brand_values, (cat, key) => {\n          valuesArray.push(cat.id);\n        });\n      }\n      setImage(brandData.brand_profile.store_logo || Brandlogo);\n      reset({\n        brand_values: valuesArray,\n        brand_categories: categoryArray,\n        company_name: brandData.brand_profile.company_name,\n        company_email_address: brandData.brand_profile.company_email_address,\n        company_phone_number: brandData.brand_profile.company_phone_number,\n        store_name: brandData.brand_profile.store_name,\n        store_website: brandData.brand_profile.store_website,\n        brand_story: brandData.brand_profile.brand_story,\n        brand_promo: brandData.brand_profile.brand_promo,\n      });\n      setTimeout(() => {\n        setSelectCategory(categoryArray);\n        setSelectValues(valuesArray);\n      }, 100);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      brandProfileDetails.brand_profile &&\n      brandProfileDetails.brand_profile.id\n    ) {\n      initialState(brandProfileDetails);\n    }\n  }, [brandProfileDetails]);\n\n  const handleCheckbox = (value, valueType) => {\n    const valueParse = JSON.parse(value);\n    const currentArray =\n      valueType === 'category' ? selectedCategory : selectedValues;\n\n    const updateArray = cloneDeep(currentArray);\n    const isSelected = updateArray.includes(valueParse);\n    if (isSelected) {\n      remove(updateArray, (r, key) => {\n        return r === valueParse;\n      });\n    } else {\n      updateArray.push(valueParse);\n    }\n    if (valueType === 'category') {\n      setSelectCategory(updateArray);\n    } else if (valueType === 'value') {\n      setSelectValues(updateArray);\n    }\n  };\n\n  const onChangeImage = (e) => {\n    if (!profileLoading) {\n      setProfileLoading(true);\n      const data = new FormData();\n      data.append('file', e.target.files[0]);\n      dispatch(\n        uploadImageAction(data)\n          .then((res) => {\n            setImage(res.url);\n          })\n          .finally(() => {\n            setProfileLoading(false);\n          })\n      );\n    }\n  };\n\n  const onSubmit = (data) => {\n    dispatch(\n      updateBrandProfileAction(\n        {\n          user_id: useDetails.id,\n          role_id: 1,\n          store_logo: image,\n          profile_picture: image,\n          ...data,\n        },\n        brandProfileDetails?.id\n      )\n    );\n    // reset();\n  };\n\n  return (\n    <div className=\"pc_tabs-content tabs_body\">\n      <div className=\"tab active\" data-target=\"Account\">\n        <div className=\"products_content\">\n          <div className=\"products_head mp-head head-with-subtitle\">\n            <div className=\"products_head-content\">\n              <div className=\"title\">\n                <h1>Brand Profile</h1>\n              </div>\n            </div>\n            <p>\n              Information entered on this page will be visible to retailers\n              within ShopDot.\n            </p>\n          </div>\n          <div className=\"products_body\">\n            <div className=\"content_area\">\n              <div id=\"account\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"account_info\">\n                    <h2>Contact Information </h2>\n                    <div className=\"form-area\">\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Company name <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"company_name\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('company_name', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.company_name && (\n                          <span className=\"error-text\">\n                            {errors?.company_name?.message}\n                          </span>\n                        )}\n                      </div>\n\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Contact email <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"company_email_address\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('company_email_address', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.company_email_address && (\n                          <span className=\"error-text\">\n                            {errors?.company_email_address?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Contact phone number{' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          className=\"form-control mb-0\"\n                          id=\"\"\n                          name=\"company_phone_number\"\n                          placeholder=\"\"\n                          {...register('company_phone_number', {\n                            required: true,\n                          })}\n                        />\n\n                        {errors?.company_phone_number && (\n                          <span className=\"error-text\">\n                            {errors?.company_phone_number?.message}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"my_store\">\n                    <h2>Brand Information </h2>\n                    <div className=\"form-area\">\n                      <div className=\"form-input form-upload-image\">\n                        <a href=\"#\" className=\"upload-logo\">\n                          <label>\n                            <input\n                              className=\"d-none\"\n                              id=\"\"\n                              type=\"file\"\n                              onChange={onChangeImage}\n                            />\n                            <img src={EditIcon} className=\"icon\" />\n                            <div className=\"profile-user-avtar\">\n                              <img src={image} />\n                            </div>\n                          </label>\n                        </a>\n                        <label>\n                          Upload logo\n                          <span className=\"asterisk-red\"> *</span>\n                          <a\n                            href=\"#\"\n                            className=\"remove-logo\"\n                            onClick={() => {\n                              if (!profileLoading) {\n                                setImage(Brandlogo);\n                              }\n                            }}\n                          >\n                            Remove logo{' '}\n                          </a>\n                          <span className=\"logo-instruction\">\n                            Format Type:\n                            <b>JPEG or PNG</b>. Maximum size is <b>5MB</b>, No\n                            less than <b>512 x 512</b> pixels and no more than{' '}\n                            <b>1024 x 1024</b> pixels.\n                          </span>\n                        </label>\n                      </div>\n                      <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                          Brand name <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"store_name\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('store_name', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.store_name && (\n                          <span className=\"error-text\">\n                            {errors?.store_name?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input tooltip-input mb-4\">\n                        <label className=\"form-label\">\n                          Brand website\n                          <span className=\"asterisk-red\">*</span>\n                          <div className=\"tooltip\">\n                            <div className=\"tooltip-icon\">\n                              <svg className=\"icon\"></svg>\n                            </div>\n                            <div className=\"tooltip_text\">\n                              <p>\n                                This is your store that is connected with\n                                ShopDot. You can connect a different store in\n                                the Integration section.\n                              </p>\n                            </div>\n                          </div>\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"store_website\"\n                          placeholder=\"janebeautyparlor.com\"\n                          {...register('store_website', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.store_website && (\n                          <span className=\"error-text\">\n                            {errors?.store_website?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-checkbox mb-4\">\n                        <label className=\"form-label\">\n                          Brand category (Select up to three){' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n\n                        <div className=\"select-checkbox\">\n                          {brandCategoryList && brandCategoryList.length ? (\n                            brandCategoryList.map((item, i) => {\n                              return (\n                                <div className=\"check-item\" key={i}>\n                                  <label className=\"checkbox\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name={'brand_categories'}\n                                      checked={selectedCategory.includes(\n                                        item.id\n                                      )}\n                                      value={item.id}\n                                      {...register('brand_categories', {\n                                        onChange: (e) => {\n                                          handleCheckbox(\n                                            e.target.value,\n                                            'category'\n                                          );\n                                        },\n                                      })}\n                                    />\n                                    <div className=\"checkbox-text\">\n                                      <span>{item.name}</span>\n                                    </div>\n                                  </label>\n                                </div>\n                              );\n                            })\n                          ) : (\n                            <div />\n                          )}\n                        </div>\n                        {errors?.brand_categories && (\n                          <span className=\"error-text\">\n                            {errors?.brand_categories?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-checkbox mb-4\">\n                        <label className=\"form-label\">Brand values</label>\n                        <div className=\"select-checkbox third-col\">\n                          <div className=\"select-checkbox\">\n                            {brandValueList && brandValueList.length ? (\n                              brandValueList.map((val, i) => {\n                                return (\n                                  <div className=\"check-item\" key={i}>\n                                    <label className=\"checkbox\">\n                                      <input\n                                        type=\"checkbox\"\n                                        name={'brand_values'}\n                                        checked={selectedValues.includes(\n                                          val.id\n                                        )}\n                                        value={val.id}\n                                        {...register('brand_values', {\n                                          required: false,\n                                          onChange: (e) => {\n                                            handleCheckbox(\n                                              e.target.value,\n                                              'value'\n                                            );\n                                          },\n                                        })}\n                                      />\n                                      <div className=\"checkbox-text\">\n                                        <span>{val.name}</span>\n                                      </div>\n                                    </label>\n                                  </div>\n                                );\n                              })\n                            ) : (\n                              <div />\n                            )}\n                          </div>\n                          {errors?.brand_values && (\n                            <span className=\"error-text\">\n                              {errors?.brand_values?.message}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"form-input form-story mb-4\">\n                        <label className=\"form-label\">\n                          About the brand{' '}\n                          <span className=\"asterisk-red\">*</span>\n                        </label>\n                        <textarea\n                          id=\"\"\n                          rows=\"8\"\n                          required=\"\"\n                          className=\"text-area   \"\n                          name=\"brand_story\"\n                          placeholder=\"\"\n                          {...register('brand_story', {\n                            required: true,\n                          })}\n                        ></textarea>\n                        {errors?.brand_story && (\n                          <span className=\"error-text\">\n                            {errors?.brand_story?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input mb-4\">\n                        <label className=\"form-label\">\n                          Add a Youtube or Vimeo video link.\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control mb-0\"\n                          name=\"brand_promo\"\n                          id=\"\"\n                          placeholder=\"\"\n                          {...register('brand_promo', {\n                            required: true,\n                          })}\n                        />\n                        {errors?.brand_promo && (\n                          <span className=\"error-text\">\n                            {errors?.brand_promo?.message}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-input form-submit\">\n                        <button\n                          onClick={() => reset()}\n                          className=\"button button-grey cancel\"\n                        >\n                          Cancel\n                        </button>\n                        <button type=\"submit\" className=\"button\">\n                          Save\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n","import {\n  get, FieldError, ResolverOptions, Ref, FieldErrors\n} from 'react-hook-form';\n\nconst setCustomValidity = (ref: Ref, fieldPath: string, errors: FieldErrors) => {\n  if (ref && 'reportValidity' in ref) {\n    const error = get(errors, fieldPath) as FieldError | undefined;\n    ref.setCustomValidity((error && error.message) || '');\n\n    ref.reportValidity();\n  }\n};\n\n// Native validation (web only)\nexport const validateFieldsNatively = <TFieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): void => {\n\n\n  for (const fieldPath in options.fields) {\n    const field = options.fields[fieldPath];\n    if (field && field.ref && 'reportValidity' in field.ref) {\n      setCustomValidity(field.ref, fieldPath, errors)\n    } else if (field.refs) {\n      field.refs.forEach((ref: HTMLInputElement) => setCustomValidity(ref, fieldPath, errors))\n    }\n  }\n};\n","import {\n  set,\n  get,\n  FieldErrors,\n  Field,\n  ResolverOptions,\n} from 'react-hook-form';\nimport { validateFieldsNatively } from './validateFieldsNatively';\n\nexport const toNestError = <TFieldValues>(\n  errors: FieldErrors,\n  options: ResolverOptions<TFieldValues>,\n): FieldErrors<TFieldValues> => {\n  options.shouldUseNativeValidation && validateFieldsNatively(errors, options);\n\n  const fieldErrors = {} as FieldErrors<TFieldValues>;\n  for (const path in errors) {\n    const field = get(options.fields, path) as Field['_f'] | undefined;\n\n    set(\n      fieldErrors,\n      path,\n      Object.assign(errors[path], { ref: field && field.ref }),\n    );\n  }\n\n  return fieldErrors;\n};\n","import * as Yup from 'yup';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport { appendErrors, FieldError } from 'react-hook-form';\nimport { Resolver } from './types';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport const yupResolver: Resolver =\n  (schema, schemaOptions = {}, resolverOptions = {}) =>\n  async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: resolverOptions.rawValues ? values : result,\n        errors: {},\n      };\n    } catch (e: any) {\n      if (!e.inner) {\n        throw e;\n      }\n\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n"],"names":["updateUserRoleAction","formData","navigate","platformName","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","wrap","_context","prev","next","axios","API_END_POINT","sent","data","code","setRoleUpdated","role","addUserPlatformAction","user_id","platform","toast","t0","errors","stop","_x","apply","arguments","_ref2","_callee2","_context2","state","_x2","uploadImageAction","_x3","_uploadImageAction","_callee5","_context5","headers","abrupt","updateNotificationAction","_ref3","_callee3","_context3","getNotificationAction","brand_id","_x4","brandId","_ref4","_callee4","_context4","concat","setNotificationData","_x5","BrandProfile","_errors$company_name","_errors$company_email","_errors$company_phone","_errors$store_name","_errors$store_website","_errors$brand_categor","_errors$brand_values","_errors$brand_story","_errors$brand_promo","_useState","useState","Brandlogo","_useState2","_slicedToArray","image","setImage","_useForm","useForm","mode","resolver","yupResolver","brandProfileValidationSchema","register","handleSubmit","reset","setValue","formState","useDispatch","useDetails","useSelector","selectUserDetails","brandCategoryList","selectBrandCategory","brandValueList","selectBrandValues","brandProfileDetails","selectBrandProfileDetails","_useState3","_useState4","selectedCategory","setSelectCategory","_useState5","_useState6","selectedValues","setSelectValues","_useState7","_useState8","profileLoading","setProfileLoading","useEffect","setTimeout","getPlatformCategoryAction","getPlatformValuesAction","getBrandProfileAction","id","initialState","brandData","_brandData$brand_prof","categoryArray","valuesArray","brand_profile","brand_categories","length","map","cat","key","push","brand_values","store_logo","company_name","company_email_address","company_phone_number","store_name","store_website","brand_story","brand_promo","handleCheckbox","value","valueType","valueParse","JSON","parse","currentArray","updateArray","cloneDeep","includes","remove","r","_jsxs","className","children","_jsx","onSubmit","updateBrandProfileAction","_objectSpread","role_id","profile_picture","type","name","placeholder","required","message","href","onChange","e","FormData","append","target","files","then","res","url","finally","src","EditIcon","onClick","item","i","checked","val","rows","ToastContainer","t","f","setCustomValidity","reportValidity","fields","ref","refs","forEach","shouldUseNativeValidation","o","a","n","Object","assign","s","c","Promise","resolve","u","context","abortEarly","values","rawValues","inner","criteriaMode","reduce","path","types","reject"],"sourceRoot":""}