{"version":3,"file":"static/js/9981.84c1f5b2.chunk.js","mappings":"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","sources":["pages/Brand/images/icons/add-image-icon.svg","pages/Brand/images/icons/icon-danger.svg","pages/Brand/images/icons/save.svg","pages/Brand/images/button.svg","pages/Brand/EditProductDetails/index.js","redux/Brand/Products/productSelectors.js"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAddImageIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.75 16.25H16.25V23.75H13.75V16.25H6.25V13.75H13.75V6.25H16.25V13.75H23.75V16.25Z\",\n    fill: \"#828282\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.66038 29.2346C2.4053 29.1288 2.11276 29.2499 2.00699 29.505C1.90121 29.76 2.02224 30.0526 2.27732 30.1583L2.66038 29.2346ZM-0.158341 27.7227C-0.0525637 27.9778 0.239969 28.0988 0.495049 27.993C0.750129 27.8872 0.871162 27.5947 0.765385 27.3396L-0.158341 27.7227ZM0.5 23.25C0.5 22.9739 0.276142 22.75 0 22.75C-0.276142 22.75 -0.5 22.9739 -0.5 23.25H0.5ZM-0.5 17.75C-0.5 18.0261 -0.276142 18.25 0 18.25C0.276142 18.25 0.5 18.0261 0.5 17.75H-0.5ZM0.5 12.25C0.5 11.9739 0.276142 11.75 0 11.75C-0.276142 11.75 -0.5 11.9739 -0.5 12.25H0.5ZM-0.5 6.75C-0.5 7.02614 -0.276142 7.25 0 7.25C0.276142 7.25 0.5 7.02614 0.5 6.75H-0.5ZM0.765385 2.66038C0.871163 2.4053 0.750129 2.11276 0.495049 2.00699C0.239969 1.90121 -0.0525633 2.02224 -0.158341 2.27732L0.765385 2.66038ZM2.27732 -0.158341C2.02224 -0.0525637 1.90121 0.239969 2.00699 0.495049C2.11276 0.750129 2.4053 0.871162 2.66038 0.765385L2.27732 -0.158341ZM6.75 0.5C7.02614 0.5 7.25 0.276142 7.25 0C7.25 -0.276142 7.02614 -0.5 6.75 -0.5V0.5ZM12.25 -0.5C11.9739 -0.5 11.75 -0.276142 11.75 0C11.75 0.276142 11.9739 0.5 12.25 0.5V-0.5ZM17.75 0.5C18.0261 0.5 18.25 0.276142 18.25 0C18.25 -0.276142 18.0261 -0.5 17.75 -0.5V0.5ZM23.25 -0.5C22.9739 -0.5 22.75 -0.276142 22.75 0C22.75 0.276142 22.9739 0.5 23.25 0.5V-0.5ZM27.3396 0.765385C27.5947 0.871163 27.8872 0.750129 27.993 0.495049C28.0988 0.239969 27.9778 -0.0525633 27.7227 -0.158341L27.3396 0.765385ZM30.1583 2.27732C30.0526 2.02224 29.76 1.90121 29.505 2.00699C29.2499 2.11276 29.1288 2.4053 29.2346 2.66038L30.1583 2.27732ZM29.5 6.75C29.5 7.02614 29.7239 7.25 30 7.25C30.2761 7.25 30.5 7.02614 30.5 6.75H29.5ZM30.5 12.25C30.5 11.9739 30.2761 11.75 30 11.75C29.7239 11.75 29.5 11.9739 29.5 12.25H30.5ZM29.5 17.75C29.5 18.0261 29.7239 18.25 30 18.25C30.2761 18.25 30.5 18.0261 30.5 17.75H29.5ZM30.5 23.25C30.5 22.9739 30.2761 22.75 30 22.75C29.7239 22.75 29.5 22.9739 29.5 23.25H30.5ZM29.2346 27.3396C29.1288 27.5947 29.2499 27.8872 29.505 27.993C29.76 28.0988 30.0526 27.9778 30.1583 27.7227L29.2346 27.3396ZM27.7227 30.1583C27.9778 30.0526 28.0988 29.76 27.993 29.505C27.8872 29.2499 27.5947 29.1288 27.3396 29.2346L27.7227 30.1583ZM23.25 29.5C22.9739 29.5 22.75 29.7239 22.75 30C22.75 30.2761 22.9739 30.5 23.25 30.5V29.5ZM17.75 30.5C18.0261 30.5 18.25 30.2761 18.25 30C18.25 29.7239 18.0261 29.5 17.75 29.5V30.5ZM12.25 29.5C11.9739 29.5 11.75 29.7239 11.75 30C11.75 30.2761 11.9739 30.5 12.25 30.5V29.5ZM6.75 30.5C7.02614 30.5 7.25 30.2761 7.25 30C7.25 29.7239 7.02614 29.5 6.75 29.5V30.5ZM4 29.5C3.52451 29.5 3.07236 29.4055 2.66038 29.2346L2.27732 30.1583C2.8086 30.3787 3.39076 30.5 4 30.5V29.5ZM0.765385 27.3396C0.594542 26.9276 0.5 26.4755 0.5 26H-0.5C-0.5 26.6092 -0.378653 27.1914 -0.158341 27.7227L0.765385 27.3396ZM0.5 26V23.25H-0.5V26H0.5ZM0.5 17.75V12.25H-0.5V17.75H0.5ZM0.5 6.75V4H-0.5V6.75H0.5ZM0.5 4C0.5 3.52451 0.594543 3.07236 0.765385 2.66038L-0.158341 2.27732C-0.378653 2.8086 -0.5 3.39076 -0.5 4H0.5ZM2.66038 0.765385C3.07236 0.594542 3.52451 0.5 4 0.5V-0.5C3.39076 -0.5 2.8086 -0.378653 2.27732 -0.158341L2.66038 0.765385ZM4 0.5H6.75V-0.5H4V0.5ZM12.25 0.5H17.75V-0.5H12.25V0.5ZM23.25 0.5H26V-0.5H23.25V0.5ZM26 0.5C26.4755 0.5 26.9276 0.594543 27.3396 0.765385L27.7227 -0.158341C27.1914 -0.378653 26.6092 -0.5 26 -0.5V0.5ZM29.2346 2.66038C29.4055 3.07236 29.5 3.52451 29.5 4H30.5C30.5 3.39076 30.3787 2.8086 30.1583 2.27732L29.2346 2.66038ZM29.5 4V6.75H30.5V4H29.5ZM29.5 12.25V17.75H30.5V12.25H29.5ZM29.5 23.25V26H30.5V23.25H29.5ZM29.5 26C29.5 26.4755 29.4055 26.9276 29.2346 27.3396L30.1583 27.7227C30.3787 27.1914 30.5 26.6092 30.5 26H29.5ZM27.3396 29.2346C26.9276 29.4055 26.4755 29.5 26 29.5V30.5C26.6092 30.5 27.1914 30.3787 27.7227 30.1583L27.3396 29.2346ZM26 29.5H23.25V30.5H26V29.5ZM17.75 29.5H12.25V30.5H17.75V29.5ZM6.75 29.5H4V30.5H6.75V29.5ZM2.8519 28.7728C2.34174 28.5612 1.75668 28.8033 1.54512 29.3134C1.33357 29.8236 1.57563 30.4086 2.08579 30.6202L2.8519 28.7728ZM-0.620204 27.9142C-0.408649 28.4244 0.176416 28.6664 0.686576 28.4549C1.19674 28.2433 1.4388 27.6583 1.22725 27.1481L-0.620204 27.9142ZM1 23.25C1 22.6977 0.552285 22.25 0 22.25C-0.552285 22.25 -1 22.6977 -1 23.25H1ZM-1 17.75C-1 18.3023 -0.552285 18.75 0 18.75C0.552285 18.75 1 18.3023 1 17.75H-1ZM1 12.25C1 11.6977 0.552285 11.25 0 11.25C-0.552285 11.25 -1 11.6977 -1 12.25H1ZM-1 6.75C-1 7.30228 -0.552285 7.75 0 7.75C0.552285 7.75 1 7.30228 1 6.75H-1ZM1.22725 2.8519C1.4388 2.34174 1.19674 1.75668 0.686576 1.54512C0.176416 1.33357 -0.408649 1.57563 -0.620204 2.08579L1.22725 2.8519ZM2.0858 -0.620204C1.57564 -0.408649 1.33357 0.176416 1.54512 0.686576C1.75668 1.19674 2.34174 1.4388 2.8519 1.22725L2.0858 -0.620204ZM6.75 1C7.30229 1 7.75 0.552285 7.75 0C7.75 -0.552285 7.30229 -1 6.75 -1V1ZM12.25 -1C11.6977 -1 11.25 -0.552285 11.25 0C11.25 0.552285 11.6977 1 12.25 1V-1ZM17.75 1C18.3023 1 18.75 0.552285 18.75 0C18.75 -0.552285 18.3023 -1 17.75 -1V1ZM23.25 -1C22.6977 -1 22.25 -0.552285 22.25 0C22.25 0.552285 22.6977 1 23.25 1V-1ZM27.1481 1.22725C27.6583 1.4388 28.2433 1.19674 28.4549 0.686576C28.6664 0.176416 28.4244 -0.408649 27.9142 -0.620204L27.1481 1.22725ZM30.6202 2.0858C30.4086 1.57564 29.8236 1.33357 29.3134 1.54512C28.8033 1.75668 28.5612 2.34174 28.7728 2.8519L30.6202 2.0858ZM29 6.75C29 7.30229 29.4477 7.75 30 7.75C30.5523 7.75 31 7.30229 31 6.75H29ZM31 12.25C31 11.6977 30.5523 11.25 30 11.25C29.4477 11.25 29 11.6977 29 12.25H31ZM29 17.75C29 18.3023 29.4477 18.75 30 18.75C30.5523 18.75 31 18.3023 31 17.75H29ZM31 23.25C31 22.6977 30.5523 22.25 30 22.25C29.4477 22.25 29 22.6977 29 23.25H31ZM28.7728 27.1481C28.5612 27.6583 28.8033 28.2433 29.3134 28.4549C29.8236 28.6664 30.4086 28.4244 30.6202 27.9142L28.7728 27.1481ZM27.9142 30.6202C28.4244 30.4086 28.6664 29.8236 28.4549 29.3134C28.2433 28.8033 27.6583 28.5612 27.1481 28.7728L27.9142 30.6202ZM23.25 29C22.6977 29 22.25 29.4477 22.25 30C22.25 30.5523 22.6977 31 23.25 31V29ZM17.75 31C18.3023 31 18.75 30.5523 18.75 30C18.75 29.4477 18.3023 29 17.75 29V31ZM12.25 29C11.6977 29 11.25 29.4477 11.25 30C11.25 30.5523 11.6977 31 12.25 31V29ZM6.75 31C7.30228 31 7.75 30.5523 7.75 30C7.75 29.4477 7.30228 29 6.75 29V31ZM4 29C3.59138 29 3.20424 28.9189 2.8519 28.7728L2.08579 30.6202C2.67672 30.8653 3.32388 31 4 31V29ZM1.22725 27.1481C1.08114 26.7958 1 26.4086 1 26H-1C-1 26.6761 -0.865251 27.3233 -0.620204 27.9142L1.22725 27.1481ZM1 26V23.25H-1V26H1ZM1 17.75V12.25H-1V17.75H1ZM1 6.75V4H-1V6.75H1ZM1 4C1 3.59138 1.08114 3.20424 1.22725 2.8519L-0.620204 2.08579C-0.865251 2.67672 -1 3.32388 -1 4H1ZM2.8519 1.22725C3.20424 1.08114 3.59138 1 4 1V-1C3.32389 -1 2.67672 -0.865251 2.0858 -0.620204L2.8519 1.22725ZM4 1H6.75V-1H4V1ZM12.25 1H17.75V-1H12.25V1ZM23.25 1H26V-1H23.25V1ZM26 1C26.4086 1 26.7958 1.08114 27.1481 1.22725L27.9142 -0.620204C27.3233 -0.865251 26.6761 -1 26 -1V1ZM28.7728 2.8519C28.9189 3.20424 29 3.59138 29 4H31C31 3.32389 30.8653 2.67672 30.6202 2.0858L28.7728 2.8519ZM29 4V6.75H31V4H29ZM29 12.25V17.75H31V12.25H29ZM29 23.25V26H31V23.25H29ZM29 26C29 26.4086 28.9189 26.7958 28.7728 27.1481L30.6202 27.9142C30.8653 27.3233 31 26.6761 31 26H29ZM27.1481 28.7728C26.7958 28.9189 26.4086 29 26 29V31C26.6761 31 27.3233 30.8653 27.9142 30.6202L27.1481 28.7728ZM26 29H23.25V31H26V29ZM17.75 29H12.25V31H17.75V29ZM6.75 29H4V31H6.75V29Z\",\n    fill: \"#828282\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddImageIcon);\nexport default __webpack_public_path__ + \"static/media/add-image-icon.58b5e6adc5badcae1000472a6ea89603.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIconDanger(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 12,\n    viewBox: \"0 0 14 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.583984 11.25H13.4173L7.00065 0.166672L0.583984 11.25ZM7.58398 9.50001H6.41732V8.33334H7.58398V9.50001ZM7.58398 7.16667H6.41732V4.83334H7.58398V7.16667Z\",\n    fill: \"#F2994A\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconDanger);\nexport default __webpack_public_path__ + \"static/media/icon-danger.28094f2865deb040842b447fe9b0144a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSave(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3333 2H3.33333C2.59333 2 2 2.6 2 3.33333V12.6667C2 13.4 2.59333 14 3.33333 14H12.6667C13.4 14 14 13.4 14 12.6667V4.66667L11.3333 2ZM12.6667 12.6667H3.33333V3.33333H10.78L12.6667 5.22V12.6667ZM8 8C6.89333 8 6 8.89333 6 10C6 11.1067 6.89333 12 8 12C9.10667 12 10 11.1067 10 10C10 8.89333 9.10667 8 8 8ZM4 4H10V6.66667H4V4Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/save.45dae0708e9d2a53fc716f43eb46ddd8.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgButton(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    width: 24,\n    height: 24,\n    rx: 4,\n    fill: \"#EB5757\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.49992 16.6667C8.49992 17.4 9.09992 18 9.83325 18H15.1666C15.8999 18 16.4999 17.4 16.4999 16.6667V8.66667H8.49992V16.6667ZM17.1666 6.66667H14.8333L14.1666 6H10.8333L10.1666 6.66667H7.83325V8H17.1666V6.66667Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgButton);\nexport default __webpack_public_path__ + \"static/media/button.992d42399c57bb5a3dd3380a67364e62.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, NavLink } from 'react-router-dom';\nimport '../Style/brand.style.scss';\nimport '../Style/brand.media.scss';\nimport '../Style/brand.dev.scss';\nimport { Datas, categoryDatas } from '../Products/utils';\nimport BrandHeader from '../common/components/BrandHeader';\nimport LeftArrowIcon from '../../Brand/images/icons/icon-arrow--left.svg';\nimport AddImageIcon from '../images/icons/add-image-icon.svg';\nimport DownIcon from '../images/icons/icon-chevron--down.svg';\nimport DangerIcon from '../images/icons/icon-danger.svg';\nimport saveIcon from '../images/icons/save.svg';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport Delete from '../images/button.svg';\nimport info from '../images/icons/icon-info-red.svg';\nimport { useForm } from 'react-hook-form';\nimport dummyProductDetails from '../ProductDetails/dummy-product-details.json';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {editProductDetailsAction} from '../../../actions/productActions';\nimport {selectUpdatingProduct, selectProductUpdateResult, selectUpdateProductSuccess} from '../../../redux/Brand/Products/productSelectors';\n\nexport default function EditProductDetails() {\n  const params = useParams();\n  const dispatch = useDispatch();\n  const updating = useSelector(selectUpdatingProduct);\n  const updateSuccess = useSelector(selectUpdateProductSuccess);\n  const product = dummyProductDetails.data;\n  const navigate = useNavigate();\n  const [multipleImages, setMultipleImages] = useState([]);\n  const [primaryImage, setPrimaryImage] = useState(0);\n\n  const [text, setText] = useState('');\n  const [container, setContainer] = useState(null);\n  const [textAlign, setAlign] = useState({ textAlign: 'center' });\n  const [tags, setTags] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [description, setDescription] = useState('');\n  const [selected, setSelected] = useState({\n    category: '',\n    subcategory: '',\n    group: '',\n  });\n\n  const [activeVariants, setActiveVariants] = useState([]);\n\n  const variantsWSPDefaultValues = () => {\n    const variantObj = {};\n    if (product.productDetails.product_variants.length > 0) {\n      product.productDetails.product_variants.forEach((pv, i) => {\n        variantObj[`variants.${i}.wsp`] = pv.wsp;\n      });\n    }\n    return variantObj;\n  };\n\n  const variantsMSRPDefaultValues = () => {\n    const variantObj = {};\n    if (product.productDetails.product_variants.length > 0) {\n      product.productDetails.product_variants.forEach((pv, i) => {\n        variantObj[`variants.${i}.msrp`] = pv.price;\n      });\n    }\n    return variantObj;\n  };\n\n  const defaultValues = {\n    productName: product.productDetails.title,\n    description: product.productDetails.body_html,\n    ...variantsWSPDefaultValues(),\n    ...variantsMSRPDefaultValues(),\n  };\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    formState: { errors },\n  } = useForm({\n    mode: 'all',\n    defaultValues,\n  });\n\n  const filesFormats = ['image/jpeg', 'image/png'];\n  // Functions to preview multiple images\n  const changeMultipleFiles = (e) => {\n    if (e.target.files) {\n      const imageArray = Array.from(e.target.files).map((file) => {\n        const isRightFormat = filesFormats.includes(file.type);\n        if (isRightFormat) {\n          return URL.createObjectURL(file);\n        }\n      });\n      setMultipleImages((prevImages) => prevImages.concat(imageArray));\n    }\n  };\n\n  const removeImage = (i) => {\n    multipleImages.splice(i, 1);\n    setMultipleImages([...multipleImages]);\n  };\n\n  const renderProductImages = (data) => {\n    return (\n      <>\n        {data.length > 0 &&\n          data.map((imageUrl, index) => {\n            return (\n              <React.Fragment key={`${index} img`}>\n                <div\n                  className={`${primaryImage === index ? 'active ' : ''} pe`}\n                  onClick={() => setPrimaryImage(index)}\n                >\n                  <div className=\"pe_main\">\n                    <div className=\"pe_body\">\n                      <div className=\"image\">\n                        <picture>\n                          <img src={imageUrl} alt=\"\" />\n                        </picture>\n                      </div>\n                    </div>\n                    <div className=\"pe_footer\">\n                      <div className=\"pe_radio my_list-table\">\n                        <label\n                          htmlFor={'radio-two' + `${index}`}\n                          className=\"radiobox\"\n                        >\n                          <input\n                            type=\"radio\"\n                            name=\"radio-filter\"\n                            id={'radio-two' + `${index}`}\n                            value={index}\n                            onChange={() => setPrimaryImage(index)}\n                            checked={primaryImage === index}\n                            defaultChecked={primaryImage === index}\n                          />\n                          <div className=\"radiobox-text\">\n                            <span>\n                              {index === 0 ? (\n                                <span>Set as Main</span>\n                              ) : (\n                                <span>Make Primary</span>\n                              )}\n                            </span>\n                          </div>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <a className=\"delete-image\">\n                  <img\n                    className=\"icon\"\n                    src={Delete}\n                    onClick={() => removeImage(index)}\n                  />\n                </a>\n              </React.Fragment>\n            );\n          })}\n      </>\n    );\n  };\n\n  const handleVariantToggle = (event) => {\n      const isChecked = event.target.checked;\n      const value = event.target.value;\n      const activeVariantsCopy = activeVariants;\n      if(isChecked){\n          const variant = product.productDetails.product_variants.find(v => v.id === value);\n          activeVariantsCopy.push(variant);\n          setActiveVariants(activeVariantsCopy);\n      } else {\n          const filter = activeVariantsCopy.filter(v => v.id !== value);\n          setActiveVariants(filter);\n      }\n  };\n\n  const handleDropdownChange = (event, type) => {\n    setSelected({ ...selected, [type]: event.target.value });\n  };\n\n  useEffect(() => {\n    // setMultipleImages([Data.productUrl]);\n    // setValue('productUrl', [Data.productUrl]);\n    setTags(product.productDetails.tags);\n    const containers = document.getElementById('editor') || null;\n    setDescription(containers.value);\n    setContainer(containers);\n  }, []);\n\n  useEffect(() => {\n    if (!container) {\n      return;\n    }\n    DecoupledEditor.create(container, {\n      alignment: {\n        options: ['right', 'left', 'center', 'justify'],\n      },\n    }).then((editor) => {\n      const toolbarContainer = document.getElementById('toolbar');\n      const command = editor.commands.get('alignment');\n      toolbarContainer.replaceChild(\n        editor.ui.view.toolbar.element,\n        toolbarContainer.firstChild\n      );\n      // editor.execute(\"bold\");\n      // editor.execute(\"alignment:left\");\n      setTimeout(() => {\n        command.execute({ value: 'left' });\n      });\n      command.on('change:value', (evt, name, value) => {\n        setText(`[demos] + ${Math.random()}`);\n        setAlign({ textAlign: value, textAlignLast: value });\n      });\n    });\n  }, [container]);\n\n  const transformVariants = () => {\n      return activeVariants.map(av => {\n          const item = {sku: av.sku, wsp: av.wsp, msrp: av.price};\n          return item;\n      })\n  }\n\n  const handleSave = (data) => {\n      console.log('data-data-------', data);\n    const dataToUpdate = {\n        product_name: '',\n        product_description: description,\n        tags: tags.join(),\n        daysToFulfill: '',\n        product_category: {\n            select_category: selected.category,\n            select_sub_category: selected.subcategory,\n            select_group: selected.group,\n        },\n        shopifyImageId: '',\n        product_variant: transformVariants(),\n    }\n    dispatch(editProductDetailsAction(dataToUpdate));\n    // product.tags = tags;\n    // setProduct(product);\n    // setValue('tags', tags);\n    // setValue('productUrl', multipleImages);\n    // const value = getValues();\n    // console.log('Saved Successfully', value);\n    // navigate({\n    //     pathname:\n    //         navigate(-1) === undefined ?\n    //          '/brand/products'\n    //             : navigate(-1),\n    // });\n  };\n\n  useEffect(() => {\n      //\n  }, []);\n\n  const removeTags = (e) => {\n    const tagsValue = tags.filter((ele) => ele !== e);\n    setTags(tagsValue);\n  };\n\n  const onChangeTagsInputValue = (e) => {\n      const value = e.target.value;\n      setInputValue(value);\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n        const tagsCopy = tags;\n        tagsCopy.push(inputValue);\n        setTags(tagsCopy);\n        setInputValue('');\n      }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <BrandHeader />\n      <main className=\"content mp-content edit-product\">\n        <form onSubmit={handleSubmit(handleSave)}>\n          <section className=\"section products mp-section\">\n            <div className=\"products_content\">\n              <div className=\"products_head mp-head\">\n                <div className=\"products_head-content\">\n                  <div className=\"title\">\n                    <div\n                      onClick={() =>\n                        navigate({\n                          pathname:\n                            navigate(-1) === undefined\n                              ? 'brand/products'\n                              : navigate(-1),\n                        })\n                      }\n                    >\n                      <NavLink>\n                        <img className=\"icon\" src={LeftArrowIcon} />\n                      </NavLink>\n                    </div>\n                    <div className=\"title\">\n                      <h1>Editing: {product.productDetails.title} </h1>\n                    </div>\n                    <button className=\"button button-sky-blue remove-all-from-my-list large\">\n                      Sync Product from Shopify\n                    </button>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"button button-dark black large\"\n                    onClick={() => {\n                        handleSubmit();\n                    }}\n                  >\n                    <img className=\"icon\" src={saveIcon} />\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n              <div className=\"products_body light-gray-bg\">\n                <div className=\"products_middle\">\n                  <div className=\"content_area\">\n                    <div className=\"edit-product_area\">\n                      <div\n                        className=\"alert alert-error d-flex align-items-center\"\n                        role=\"alert\"\n                      >\n                        <img className=\"icon\" src={info}></img>\n                        <div>\n                          Unfortunately, the syncing of the product was not\n                          successful. Please try again.\n                        </div>\n                      </div>\n\n                      <div\n                        className=\"alert alert-warning d-flex align-items-start\"\n                        role=\"alert\"\n                      >\n                        <img className=\"icon\" src={DangerIcon} />\n                        <div className=\"notes\">\n                          <div>\n                            Please fill this required field:{' '}\n                            <a href=\"#\">Product Category</a>\n                          </div>\n                          <div>\n                            Please sync <a href=\"#\">SKU</a> from your Shopify\n                            Store\n                          </div>\n                          <div>\n                            Please enter <a href=\"#\">WSP</a>\n                          </div>\n                          <div>\n                            Please enter <a href=\"#\">MSRP</a>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div\n                        className=\"alert alert-warning d-flex align-items-center\"\n                        role=\"alert\"\n                      >\n                        <div className=\"alert-warning-title\">\n                          You must complete the following configurations before\n                          updating the details of a product\n                          <ul>\n                            <li>Brand Profile</li>\n                            <li>Getting Paid</li>\n                          </ul>\n                          <button className=\"button button-white close\">\n                            Go to Settings\n                          </button>\n                        </div>\n                      </div>\n                      <div className=\"edit-product_tabs\">\n                        <div id=\"product-info\">\n                          <div className=\"pi-area\">\n                            <div className=\"product-item-left\">\n                              <div className=\"product-item-list\">\n                                <div className=\"bd-callout mt-0\">\n                                  Product Info\n                                  <span className=\"asterisk-red\">*</span>\n                                </div>\n                                <div className=\"form-input\">\n                                  <label\n                                    htmlFor=\"Productname\"\n                                    className=\"form-label\"\n                                  >\n                                    Product name\n                                  </label>\n                                  <input\n                                    type=\"text\"\n                                    className=\"form-control is-invalid\"\n                                    // id=\"Productname\"\n                                    placeholder=\"Summer Activities Chips for Kids\"\n                                    {...register('productName')}\n                                  />\n                                </div>\n                                <div className=\"form-input\">\n                                  <label\n                                    htmlFor=\"ProductDescription\"\n                                    className=\"form-label\"\n                                  >\n                                    Product description\n                                  </label>\n                                  <div className=\"editor\">\n                                    <div className=\"content-info-\">\n                                      <div\n                                        data-editor=\"ClassicEditor\"\n                                        data-collaboration=\"false\"\n                                        data-revision-history=\"false\"\n                                      >\n                                        <main>\n                                          <div className=\"text-add\">\n                                            <p></p>\n                                            <div id=\"toolbar\">\n                                              <i></i>\n                                            </div>\n                                            <div\n                                              className=\"text-editor\"\n                                              id=\"editor\"\n                                              onChange={(event) => {\n                                                setDescription(\n                                                  event.target.value\n                                                );\n                                                console.log(event.target.value);\n                                              }}\n                                            //   {...register('description')}\n                                            >\n                                              <div className=\"centered\">\n                                                <div className=\"\">\n                                                  <div className=\"editor-container\">\n                                                    <div className=\"editor\">\n                                                      <p>{product.productDetails.body_html}</p>\n                                                    </div>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </main>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"product-item-list\">\n                                <div id=\"product-images\">\n                                  <div className=\"pm-area\">\n                                    <div className=\"bd-callout mt-0\">\n                                      Product Images <span>(12)</span>\n                                      <span className=\"asterisk-red\">*</span>\n                                    </div>\n                                    <div className=\"product-images product-images pi-radio\">\n                                      {/* The render function with the multiple image state */}\n                                      {renderProductImages(multipleImages)}\n                                    </div>\n\n                                    <div className=\"upload-image-area\">\n                                      <img src={AddImageIcon} />\n                                      <p className=\"dragBox\">\n                                        Drag &amp; drop image to upload (max.\n                                        file size 20 MB per image)\n                                        <input\n                                          type=\"file\"\n                                          name=\"file\"\n                                          multiple\n                                          {...register('file', {\n                                            required: false,\n                                            validate: {\n                                              lessThan20MB: (files) =>\n                                                files[0]?.size < 30000 ||\n                                                'Max 30kb',\n                                              acceptedFormats: (files) =>\n                                                [\n                                                  'image/jpeg',\n                                                  'image/png',\n                                                  'image/gif',\n                                                ].includes(files[0]?.type),\n                                            },\n                                          })}\n                                          onChange={changeMultipleFiles}\n                                        />\n                                      </p>\n                                      <label\n                                        htmlFor=\"uploadFile\"\n                                        className=\"button button-white\"\n                                      >\n                                        Upload Image\n                                      </label>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"product-item-right\">\n                              <div className=\"product-item-list mt-0 pdc-area\">\n                                <div className=\"bd-callout mt-0 mb-2\">\n                                  Product Category{' '}\n                                  <span className=\"asterisk-red\">*</span>\n                                </div>\n                                <p className=\"productc-note\">\n                                  Assigning the Product Category will help\n                                  retailers find your products.\n                                </p>\n                                <div className=\"form-data\">\n                                  <select\n                                    value={selected.category}\n                                    onChange={(event) =>\n                                      handleDropdownChange(event, 'category')\n                                    }\n                                  >\n                                    <option value=\"\">Select a category</option>\n                                    {categoryDatas.map((category) => (\n                                      <option\n                                        key={category.id}\n                                        value={category.value}\n                                      >\n                                        {category.value}\n                                      </option>\n                                    ))}\n                                  </select>\n                                  <select\n                                    disabled={!selected.category}\n                                    value={selected.subcategory}\n                                    onChange={(event) =>\n                                      handleDropdownChange(event, 'subcategory')\n                                    }\n                                  >\n                                    <option value=\"\">\n                                      Select a subcategory\n                                    </option>\n                                    {categoryDatas\n                                      .find(\n                                        (category) =>\n                                          category.value === selected.category\n                                      )\n                                      ?.sub_category.map((subcategory) => (\n                                        <option\n                                          key={subcategory.id}\n                                          value={subcategory.value}\n                                        >\n                                          {subcategory.value}\n                                        </option>\n                                      ))}\n                                  </select>\n                                  <select\n                                    disabled={!selected.subcategory}\n                                    value={selected.group}\n                                    onChange={(event) =>\n                                      handleDropdownChange(event, 'group')\n                                    }\n                                  >\n                                    <option value=\"\">Select a group</option>\n                                    {categoryDatas\n                                      .find(\n                                        (category) =>\n                                          category.value === selected.category\n                                      )\n                                      ?.sub_category.find(\n                                        (subcategory) =>\n                                          subcategory.value ===\n                                          selected.subcategory\n                                      )\n                                      ?.group.map((group) => (\n                                        <option\n                                          key={group.id}\n                                          value={group.value}\n                                        >\n                                          {group.value}\n                                        </option>\n                                      ))}\n                                  </select>\n                                </div>\n                              </div>\n                              <div\n                                id=\"product-shipping\"\n                                className=\"product-item-list mt-4\"\n                              >\n                                <div className=\"pv-area\">\n                                  <div className=\"bd-callout mt-0 mb-0\">\n                                    Days to Fulfill{' '}\n                                    <span className=\"asterisk-red\">*</span>\n                                  </div>\n\n                                  <div className=\"shipping-fee-form\">\n                                    <div className=\"fee-area mb-0 mt-2\">\n                                      <div className=\"form-input radio-input\">\n                                        <label\n                                          htmlFor=\"Productname\"\n                                          className=\"form-label\"\n                                        ></label>\n                                        <div className=\"time-radio-group mb-2\">\n                                          <div className=\"category-data\">\n                                            <div className=\"checkbox checkbox--no-decor\">\n                                              <label htmlFor=\"time-1\">\n                                                <input\n                                                  type=\"radio\"\n                                                //   id=\"time-1\"\n                                                //   name=\"p-tag\"\n                                                  value=\"3-7\"\n                                                  {...register('daysToFulfill')}\n                                                />\n                                                <div className=\"checkbox-text\">\n                                                  <span className=\"category-name\">\n                                                    3-7\n                                                  </span>\n                                                </div>\n                                              </label>\n                                            </div>\n                                            <div className=\"checkbox checkbox--no-decor\">\n                                              <label htmlFor=\"time-2\">\n                                                <input\n                                                  type=\"radio\"\n                                                //   id=\"time-2\"\n                                                //   name=\"p-tag\"\n                                                  value=\"7-14\"\n                                                  {...register('daysToFulfill')}\n                                                />\n                                                <div className=\"checkbox-text\">\n                                                  <span className=\"category-name\">\n                                                    {''}\n                                                    7-14\n                                                  </span>\n                                                </div>\n                                              </label>\n                                            </div>\n                                            <div className=\"checkbox checkbox--no-decor\">\n                                              <label htmlFor=\"time-3\">\n                                                <input\n                                                  type=\"radio\"\n                                                //   id=\"time-3\"\n                                                //   name=\"p-tag\"\n                                                  value=\"14-21\"\n                                                  {...register('daysToFulfill')}\n                                                />\n                                                <div className=\"checkbox-text\">\n                                                  <span className=\"category-name\">\n                                                    14-21\n                                                  </span>\n                                                </div>\n                                              </label>\n                                            </div>\n                                            <div className=\"checkbox checkbox--no-decor\">\n                                              <label htmlFor=\"time-4\">\n                                                <input\n                                                  type=\"radio\"\n                                                //   id=\"time-4\"\n                                                //   name=\"p-tag\"\n                                                  value=\"21\"\n                                                  {...register('daysToFulfill')}\n                                                />\n                                                <div className=\"checkbox-text\">\n                                                  <span className=\"category-name\">\n                                                    {' '}\n                                                    &gt; 21\n                                                  </span>\n                                                </div>\n                                              </label>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"product-tag\">\n                                <div className=\"pa-title\">\n                                  <h3>Tags</h3>\n                                </div>\n                                <p className=\"tag-note\">\n                                  Only you as a Brand will be able to view these\n                                  tags.\n                                </p>\n                                <input\n                                  type=\"text\"\n                                  id=\"tags-input\"\n                                  className=\"tag-text\"\n                                  placeholder=\"Add tag\"\n                                  value={inputValue}\n                                  onChange={onChangeTagsInputValue}\n                                  onKeyDown={handleKeyDown}\n                                />\n                                <div className=\"tab-list\">\n                                  {tags.length > 0 && tags.map((e, i) => (\n                                      <div\n                                        className=\"checkbox checkbox--no-decor m-1\"\n                                        key={`${i} tags`}\n                                      >\n                                        <label className=\"tag-lbl\">\n                                          <div\n                                            className=\"checkbox-text\"\n                                            key={`${i} close`}\n                                          >\n                                            {e}\n                                            <span\n                                              className=\"closebtn\"\n                                              onClick={() => removeTags(e)}\n                                            >\n                                              ×\n                                            </span>\n                                          </div>\n                                        </label>\n                                      </div>\n                                    ))}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          id=\"product-variants\"\n                          className=\"product-item-list\"\n                        >\n                          <div className=\"pv-area\">\n                            <div className=\"bd-callout mt-0 mb-4\">\n                              Product Variants (\n                              {product.productDetails.product_variants.length}){' '}\n                              <span className=\"asterisk-red\">*</span>\n                            </div>\n                            <div\n                              className=\"alert alert-primary d-flex align-items-center\"\n                              role=\"alert\"\n                            >\n                              <img className=\"icon-Blue\" src={info}></img>\n                              <div>\n                                You must include at least one (1) product\n                                variant. SKU, WSP, and MSRP are required fields.\n                              </div>\n                            </div>\n                            <div className=\"v-table pv-update\">\n                              <table className=\"table table-vars\">\n                                <thead className=\"sticky-thead\">\n                                  <tr>\n                                    <th></th>\n                                    <th>\n                                      <div className=\"txt\">\n                                        Material\n                                        <button className=\"sort\">\n                                          <img\n                                            className=\"icon\"\n                                            src={DownIcon}\n                                          />\n                                        </button>\n                                      </div>\n                                    </th>\n                                    <th>\n                                      <div className=\"txt\">\n                                        Color\n                                        <button className=\"sort\">\n                                          <img\n                                            className=\"icon\"\n                                            src={DownIcon}\n                                          />\n                                        </button>\n                                      </div>\n                                    </th>\n                                    <th>\n                                      <div className=\"txt\">\n                                        SKU\n                                        <button className=\"sort\">\n                                          <img\n                                            className=\"icon\"\n                                            src={DownIcon}\n                                          />\n                                        </button>\n                                      </div>\n                                    </th>\n                                    <th>\n                                      <div className=\"txt\">\n                                        Barcode\n                                        <div className=\"tooltip\">\n                                          <div className=\"tooltip-icon tooltip-icon-info ic-if-blue\">\n                                            <img\n                                              className=\"icon-info\"\n                                              src={info}\n                                            ></img>\n                                          </div>\n                                          <div className=\"tooltip_text\">\n                                            <p>ISBN, UPC, GTIN, ...</p>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </th>\n                                    <th>\n                                      <div className=\"txt\">\n                                        Stock\n                                        <div className=\"tooltip\">\n                                          <div className=\"tooltip-icon tooltip-icon-info ic-if-blue\">\n                                            <img\n                                              className=\"icon-info\"\n                                              src={info}\n                                            ></img>\n                                          </div>\n                                          <div className=\"tooltip_text\">\n                                            <p>\n                                              The inventory published within\n                                              ShopDot is based on the inventory\n                                              from your Shopify store x the\n                                              inventory buffer that you set\n                                              under Settings-Preferences.\n                                            </p>\n                                          </div>\n                                        </div>\n                                        <button className=\"sort\">\n                                          <img\n                                            className=\"icon\"\n                                            src={DownIcon}\n                                          />\n                                        </button>\n                                      </div>\n                                    </th>\n                                    <th>\n                                      <div className=\"txt\">\n                                        WSP\n                                        <div className=\"tooltip\">\n                                          <div className=\"tooltip-icon tooltip-icon-info ic-if-blue\">\n                                            <img\n                                              className=\"icon-info\"\n                                              src={info}\n                                            ></img>\n                                          </div>\n                                          <div className=\"tooltip_text\">\n                                            <p>\n                                              WSP stands for Wholesale Price.\n                                              This is the price that retailers\n                                              pay brands.\n                                            </p>\n                                          </div>\n                                        </div>\n                                        <button className=\"sort\">\n                                          <img\n                                            className=\"icon\"\n                                            src={DownIcon}\n                                          />\n                                        </button>\n                                      </div>\n                                    </th>\n\n                                    <th>\n                                      <div className=\"txt\">\n                                        MSRP\n                                        <button className=\"sort\">\n                                          <img\n                                            className=\"icon\"\n                                            src={DownIcon}\n                                          />\n                                        </button>\n                                      </div>\n                                    </th>\n                                    <th>\n                                      <div className=\"product-activation\">\n                                        <span>Allow</span>\n                                        <div className=\"my-toggle-btn\">\n                                          <input\n                                            type=\"checkbox\"\n                                            id=\"checkbox11\"\n                                          />\n                                          <label htmlFor=\"checkbox11\">\n                                            <span\n                                              className=\"on\"\n                                              title=\"on\"\n                                            ></span>\n                                            <span\n                                              className=\"off\"\n                                              title=\"off\"\n                                            ></span>\n                                          </label>\n                                        </div>\n                                        <div className=\"tooltip\">\n                                          <div className=\"tooltip-icon tooltip-icon-info ic-if-blue\">\n                                            <img\n                                              className=\"icon-info\"\n                                              src={info}\n                                            ></img>\n                                          </div>\n                                          <div className=\"tooltip_text\">\n                                            <p>\n                                              Select variants you want to allow\n                                              for ShopDot.\n                                            </p>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </th>\n                                  </tr>\n                                </thead>\n                                <tbody className=\"scroll-table\">\n                                  {product.productDetails.product_variants\n                                    .length > 0 &&\n                                    product.productDetails.product_variants.map(\n                                      (item, i) => (\n                                        <tr\n                                          key={`${\n                                            item?.id\n                                          } product ${new Date().getTime()}`}\n                                        >\n                                          <td>\n                                            <div className=\"image image--cover image--1-1\">\n                                              <picture>\n                                                <img\n                                                  src={item?.image}\n                                                  alt=\"img\"\n                                                />\n                                              </picture>\n                                            </div>\n                                          </td>\n                                          <td>\n                                            <div className=\"txt\">\n                                              {item?.material}\n                                            </div>\n                                          </td>\n                                          <td>\n                                            <div className=\"txt\">\n                                              {item?.title}\n                                            </div>\n                                          </td>\n                                          <td>\n                                            <div className=\"txt vin-txt\">\n                                              {item?.sku}\n                                            </div>\n                                          </td>\n                                          <td>\n                                            <div className=\"txt\">\n                                              {item?.barcode}\n                                            </div>\n                                          </td>\n                                          <td>\n                                            <div className=\"txt\">\n                                              {item?.inventory_quantity}\n                                            </div>\n                                          </td>\n                                          <td>\n                                            <div className=\"txt\">\n                                              <input\n                                                type=\"text\"\n                                                className=\"tabel-text is-invalid\"\n                                                {...register(\n                                                  `variants.${i}.wsp`\n                                                )}\n                                                // placeholder=\"0.00\"\n                                              />\n                                            </div>\n                                          </td>\n\n                                          <td>\n                                            <div className=\"txt\">\n                                              <input\n                                                type=\"text\"\n                                                className=\"tabel-text is-invalid\"\n                                                {...register(\n                                                  `variants.${i}.msrp`\n                                                )}\n                                                //placeholder=\"0.00\"\n                                              />\n                                            </div>\n                                          </td>\n                                          <td>\n                                            <div className=\"product-activation\">\n                                              <span>Allow</span>\n                                              <div className=\"my-toggle-btn\">\n                                                <input\n                                                  id={`checkbox${item?.id}`}\n                                                  type=\"checkbox\"\n                                                  value={item.id}\n                                                //   checked={getActiveVariantID(item.id)}\n                                                  onChange={handleVariantToggle}\n                                                />\n                                                <label\n                                                  htmlFor={`checkbox${item?.id}`}\n                                                >\n                                                  <span\n                                                    className=\"on\"\n                                                    title=\"on\"\n                                                  ></span>\n                                                  <span\n                                                    className=\"off\"\n                                                    title=\"off\"\n                                                  ></span>\n                                                </label>\n                                              </div>\n                                            </div>\n                                          </td>\n                                        </tr>\n                                      )\n                                    )}\n                                </tbody>\n                              </table>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </form>\n      </main>\n    </div>\n  );\n}\n","export const selectProductFilter = (state) => state.brandProduct.productFilter;\n\nexport const selectProductCategory = (state) =>\n    state.brandProduct.productCatOptions;\n\nexport const selectProductTags = (state) =>\n    state.brandProduct.productTagOptions;\n\nexport const selectStockOptions = (state) => state.brandProduct.stockOptions;\n\nexport const selectBrandProductList = (state) => state.brandProduct.brandProductList;\n\nexport const selectProductCatFilter = (state) => state.brandProduct.productCatFilter;\n\nexport const selectProductTagFilter = (state) => state.brandProduct.productTagFilter;\n\nexport const selectStockFilter = (state) => state.brandProduct.stockFilter;\n\nexport const selectProductStatusFilter = (state) => state.brandProduct.productStatusFilter;\n\nexport const selectProductDetails = (state) => state.brandProduct.productDetails;\n\nexport const selectUpdatingProduct = (state) => state.brandProduct.updatingProduct;\n\nexport const selectProductUpdateResult = (state) => state.brandProduct.productUpdateResult;\n\nexport const selectUpdateProductSuccess = (state) => state.brandProduct.updateProductSuccess;\n"],"names":["EditProductDetails","useParams","_categoryDatas$find","_categoryDatas$find2","_categoryDatas$find2$","dispatch","useDispatch","product","useSelector","selectUpdatingProduct","selectUpdateProductSuccess","dummyProductDetails","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","multipleImages","setMultipleImages","_useState3","_useState4","primaryImage","setPrimaryImage","_useState5","_useState6","setText","_useState7","_useState8","container","setContainer","_useState9","textAlign","_useState10","setAlign","_useState11","_useState12","tags","setTags","_useState13","_useState14","inputValue","setInputValue","_useState15","_useState16","description","setDescription","_useState17","category","subcategory","group","_useState18","selected","setSelected","_useState19","_useState20","activeVariants","setActiveVariants","defaultValues","_objectSpread","productName","productDetails","title","body_html","variantObj","product_variants","length","forEach","pv","i","concat","wsp","variantsWSPDefaultValues","price","variantsMSRPDefaultValues","_useForm","useForm","mode","register","handleSubmit","filesFormats","getValues","setValue","formState","errors","handleVariantToggle","event","isChecked","target","checked","value","activeVariantsCopy","variant","find","v","id","push","filter","handleDropdownChange","type","_defineProperty","useEffect","containers","document","getElementById","DecoupledEditor","alignment","options","then","editor","toolbarContainer","command","commands","get","replaceChild","ui","view","toolbar","element","firstChild","setTimeout","execute","on","evt","name","Math","random","textAlignLast","data","_jsxs","className","children","_jsx","BrandHeader","onSubmit","console","log","dataToUpdate","product_name","product_description","join","daysToFulfill","product_category","select_category","select_sub_category","select_group","shopifyImageId","product_variant","map","av","sku","msrp","editProductDetailsAction","onClick","pathname","undefined","NavLink","src","LeftArrowIcon","saveIcon","role","info","DangerIcon","href","htmlFor","placeholder","onChange","_Fragment","imageUrl","index","React","alt","defaultChecked","Delete","splice","_toConsumableArray","AddImageIcon","multiple","required","validate","lessThan20MB","files","_files$","size","acceptedFormats","_files$2","includes","e","imageArray","Array","from","file","URL","createObjectURL","prevImages","categoryDatas","disabled","sub_category","onKeyDown","key","tagsCopy","tagsValue","ele","removeTags","DownIcon","item","image","material","barcode","inventory_quantity","Date","getTime","selectProductFilter","state","brandProduct","productFilter","selectProductCategory","productCatOptions","selectProductTags","productTagOptions","selectStockOptions","stockOptions","selectBrandProductList","brandProductList","selectProductCatFilter","productCatFilter","selectProductTagFilter","productTagFilter","selectStockFilter","stockFilter","selectProductStatusFilter","productStatusFilter","updatingProduct","updateProductSuccess"],"sourceRoot":""}